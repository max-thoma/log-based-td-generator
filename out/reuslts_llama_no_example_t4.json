{
  "model": "meta-llama-3.1-70b-instruct",
  "temperature": 0.4,
  "number_of_retries": 10,
  "number_of_loops": 10,
  "time_elapsed": "03:56:25.801768Z",
  "results": [
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "HouseAlarm",
        "title": "Alarm Control Panel",
        "id": "urn:uuid:b9ce7480-3a89-4eb7-8754-e4bb6462f893",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "The alarm control panel of the house",
        "properties": {
          "state": {
            "title": "Sensor Status",
            "description": "Status of the Sensor",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "disarmed",
              "armed_home",
              "armed_away",
              "armed_night",
              "armed_vacation",
              "armed_custom_bypass",
              "pending",
              "triggered"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "home/alarm",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {},
        "actions": {
          "arm": {
            "title": "Arm",
            "description": "Arm",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "DISARM",
                "ARM_HOME",
                "ARM_AWAY",
                "ARM_NIGHT",
                "ARM_VACATION",
                "ARM_CUSTOM_BYPASS"
              ],
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "home/alarm/set",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Alarm System",
          "id": "urn:dev:ops:alarm-system-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart alarm system that can be armed and disarmed remotely",
          "properties": {
            "alarmStatus": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "disarmed",
                "armed_home",
                "armed_away",
                "armed_night",
                "armed_vacation",
                "armed_custom_bypass",
                "pending",
                "triggered"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/alarm",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setAlarmStatus": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DISARM",
                  "ARM_HOME",
                  "ARM_AWAY",
                  "ARM_NIGHT",
                  "ARM_VACATION",
                  "ARM_CUSTOM_BYPASS"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/alarm/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Alarm System",
          "id": "urn:dev:ops:alarm-123456789",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart alarm system that can be armed and disarmed remotely",
          "properties": {
            "alarmStatus": {
              "title": "Alarm Status",
              "description": "The current status of the alarm",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "disarmed",
                "armed_home",
                "armed_away",
                "armed_night",
                "armed_vacation",
                "armed_custom_bypass",
                "pending",
                "triggered"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/alarm",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setAlarm": {
              "title": "Set Alarm",
              "description": "Set the alarm to a specific state",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DISARM",
                  "ARM_HOME",
                  "ARM_AWAY",
                  "ARM_NIGHT",
                  "ARM_VACATION",
                  "ARM_CUSTOM_BYPASS"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/alarm/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Alarm System",
          "id": "urn:dev:ops:alarm-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart alarm system that can be controlled and monitored remotely",
          "properties": {
            "alarmStatus": {
              "title": "Alarm Status",
              "description": "The current status of the alarm",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "disarmed",
                "armed_home",
                "armed_away",
                "armed_night",
                "armed_vacation",
                "armed_custom_bypass",
                "pending",
                "triggered"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/alarm",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setAlarm": {
              "title": "Set Alarm",
              "description": "Set the alarm to a specific status",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DISARM",
                  "ARM_HOME",
                  "ARM_AWAY",
                  "ARM_NIGHT",
                  "ARM_VACATION",
                  "ARM_CUSTOM_BYPASS"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/alarm/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Alarm System",
          "id": "urn:dev:ops:alarm-system-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart alarm system that can be controlled and monitored remotely",
          "properties": {
            "alarmStatus": {
              "title": "Alarm Status",
              "description": "The current status of the alarm system",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "disarmed",
                "armed_home",
                "armed_away",
                "armed_night",
                "armed_vacation",
                "armed_custom_bypass",
                "pending",
                "triggered"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/alarm",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setAlarm": {
              "title": "Set Alarm",
              "description": "Set the alarm system to a specific state",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DISARM",
                  "ARM_HOME",
                  "ARM_AWAY",
                  "ARM_NIGHT",
                  "ARM_VACATION",
                  "ARM_CUSTOM_BYPASS"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/alarm/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Alarm System",
          "id": "urn:dev:ops:alarm-system-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart alarm system that can be controlled and monitored remotely",
          "properties": {
            "alarmStatus": {
              "title": "Alarm Status",
              "description": "The current status of the alarm",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "disarmed",
                "armed_home",
                "armed_away",
                "armed_night",
                "armed_vacation",
                "armed_custom_bypass",
                "pending",
                "triggered"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/alarm",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setAlarm": {
              "title": "Set Alarm",
              "description": "Set the alarm to a specific state",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DISARM",
                  "ARM_HOME",
                  "ARM_AWAY",
                  "ARM_NIGHT",
                  "ARM_VACATION",
                  "ARM_CUSTOM_BYPASS"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/alarm/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Alarm System",
          "id": "urn:dev:ops:alarm-system-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart alarm system that can be controlled and monitored remotely",
          "properties": {
            "alarmStatus": {
              "title": "Alarm Status",
              "description": "The current status of the alarm system",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "disarmed",
                "armed_home",
                "armed_away",
                "armed_night",
                "armed_vacation",
                "armed_custom_bypass",
                "pending",
                "triggered"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/alarm",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setAlarm": {
              "title": "Set Alarm",
              "description": "Sets the alarm system to a specific state",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DISARM",
                  "ARM_HOME",
                  "ARM_AWAY",
                  "ARM_NIGHT",
                  "ARM_VACATION",
                  "ARM_CUSTOM_BYPASS"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/alarm/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Alarm System",
          "id": "urn:dev:ops:alarm-system-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart alarm system that can be armed and disarmed remotely",
          "properties": {
            "alarmStatus": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "disarmed",
                "armed_home",
                "armed_away",
                "armed_night",
                "armed_vacation",
                "armed_custom_bypass",
                "pending",
                "triggered"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/alarm",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setAlarm": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DISARM",
                  "ARM_HOME",
                  "ARM_AWAY",
                  "ARM_NIGHT",
                  "ARM_VACATION",
                  "ARM_CUSTOM_BYPASS"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/alarm/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Alarm System",
          "id": "urn:dev:ops:alarm-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart alarm system that can be armed and disarmed remotely",
          "properties": {
            "alarmStatus": {
              "title": "Alarm Status",
              "description": "The current status of the alarm",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "disarmed",
                "armed_home",
                "armed_away",
                "armed_night",
                "armed_vacation",
                "armed_custom_bypass",
                "pending",
                "triggered"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/alarm",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setAlarm": {
              "title": "Set Alarm",
              "description": "Set the alarm to a specific state",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DISARM",
                  "ARM_HOME",
                  "ARM_AWAY",
                  "ARM_NIGHT",
                  "ARM_VACATION",
                  "ARM_CUSTOM_BYPASS"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/alarm/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Alarm System",
          "id": "urn:dev:ops:smart-alarm-system",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart alarm system that can be controlled and monitored remotely",
          "properties": {
            "alarmStatus": {
              "title": "Alarm Status",
              "description": "The current status of the alarm system",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "disarmed",
                "armed_home",
                "armed_away",
                "armed_night",
                "armed_vacation",
                "armed_custom_bypass",
                "pending",
                "triggered"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/alarm",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setAlarm": {
              "title": "Set Alarm",
              "description": "Set the alarm system to a specific state",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DISARM",
                  "ARM_HOME",
                  "ARM_AWAY",
                  "ARM_NIGHT",
                  "ARM_VACATION",
                  "ARM_CUSTOM_BYPASS"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/alarm/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Alarm System",
          "id": "urn:dev:ops:alarm-system-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart alarm system that can be armed and disarmed remotely",
          "properties": {
            "alarmStatus": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "disarmed",
                "armed_home",
                "armed_away",
                "armed_night",
                "armed_vacation",
                "armed_custom_bypass",
                "pending",
                "triggered"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/alarm",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setAlarm": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DISARM",
                  "ARM_HOME",
                  "ARM_AWAY",
                  "ARM_NIGHT",
                  "ARM_VACATION",
                  "ARM_CUSTOM_BYPASS"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/alarm/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'home/alarm'; payload: 'disarmed'; retain: 'true'\ntopic: 'home/alarm'; payload: 'armed_home'; retain: 'true'\ntopic: 'home/alarm'; payload: 'armed_away'; retain: 'true'\ntopic: 'home/alarm'; payload: 'armed_night'; retain: 'true'\ntopic: 'home/alarm'; payload: 'armed_vacation'; retain: 'true'\ntopic: 'home/alarm'; payload: 'armed_custom_bypass'; retain: 'true'\ntopic: 'home/alarm'; payload: 'pending'; retain: 'true'\ntopic: 'home/alarm'; payload: 'triggered'; retain: 'true'\ntopic: 'home/alarm/set'; payload: 'DISARM'; retain: 'false'\ntopic: 'home/alarm/set'; payload: 'ARM_HOME'; retain: 'false'\ntopic: 'home/alarm/set'; payload: 'ARM_AWAY'; retain: 'false'\ntopic: 'home/alarm/set'; payload: 'ARM_NIGHT'; retain: 'false'\ntopic: 'home/alarm/set'; payload: 'ARM_VACATION'; retain: 'false'\ntopic: 'home/alarm/set'; payload: 'ARM_CUSTOM_BYPASS'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "WindowContact",
        "title": "Binary Window Contact",
        "id": "urn:uuid:24abed48-e9e3-4839-b1a4-f189f763ec89",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "A sensor that monitors the state of a window",
        "properties": {
          "state": {
            "title": "Window Sensor Status",
            "description": "The state of the Window",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "open",
              "closed",
              "unknown"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "home-assistant/window/contact",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "availability": {
            "title": "Sensor Availability",
            "description": "Availability status of the sensor",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "unavailable",
              "available"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "home-assistant/window/availability",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {},
        "actions": {}
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Window",
          "id": "urn:dev:ops:smart-window-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart window that can be controlled and monitored remotely",
          "properties": {
            "contact": {
              "title": "Contact",
              "description": "The current state of the window contact",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "open",
                "closed",
                "unknown"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home-assistant/window/contact",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "availability": {
              "title": "Availability",
              "description": "The current availability of the window",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home-assistant/window/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Window",
          "id": "urn:dev:ops:smart-window-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart window with contact and availability sensors",
          "properties": {
            "contact": {
              "title": "Contact",
              "description": "The contact sensor of the window",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "open",
                "closed",
                "unknown"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home-assistant/window/contact",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "availability": {
              "title": "Availability",
              "description": "The availability of the window",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home-assistant/window/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Window",
          "id": "urn:dev:ops:smart-window-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart window that can be controlled and monitored remotely",
          "properties": {
            "contact": {
              "title": "Contact",
              "description": "The current state of the window contact",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "open",
                "closed",
                "unknown"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home-assistant/window/contact",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "availability": {
              "title": "Availability",
              "description": "The current availability of the window",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home-assistant/window/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Window",
          "id": "urn:dev:ops:smart-window-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart window with contact and availability sensors",
          "properties": {
            "contact": {
              "title": "Contact",
              "description": "The contact sensor of the window",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "open",
                "closed",
                "unknown"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home-assistant/window/contact",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "availability": {
              "title": "Availability",
              "description": "The availability of the window",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home-assistant/window/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Window",
          "id": "urn:dev:ops:smart-window-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart window that can be controlled and monitored remotely",
          "properties": {
            "contact": {
              "title": "Contact",
              "description": "The current state of the window contact",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "open",
                "closed",
                "unknown"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home-assistant/window/contact",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "availability": {
              "title": "Availability",
              "description": "The current availability of the window",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home-assistant/window/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Window",
          "id": "urn:dev:ops:smart-window-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart window with contact and availability sensors",
          "properties": {
            "contact": {
              "title": "Contact",
              "description": "The contact sensor of the window",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "open",
                "closed",
                "unknown"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home-assistant/window/contact",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "availability": {
              "title": "Availability",
              "description": "The availability of the window",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home-assistant/window/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Window",
          "id": "urn:dev:ops:smart-window-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart window with contact and availability sensors",
          "properties": {
            "contact": {
              "title": "Contact",
              "description": "The contact sensor of the window",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "open",
                "closed",
                "unknown"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home-assistant/window/contact",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "availability": {
              "title": "Availability",
              "description": "The availability of the window",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home-assistant/window/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Window",
          "id": "urn:dev:ops:smart-window-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart window with contact and availability sensors",
          "properties": {
            "contact": {
              "title": "Contact",
              "description": "The contact sensor of the window",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "open",
                "closed",
                "unknown"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home-assistant/window/contact",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "availability": {
              "title": "Availability",
              "description": "The availability of the window",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home-assistant/window/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Window",
          "id": "urn:dev:ops:smart-window-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart window that can be controlled and monitored remotely",
          "properties": {
            "contact": {
              "title": "Contact",
              "description": "The current state of the window contact",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "open",
                "closed",
                "unknown"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "home-assistant/window/contact",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "availability": {
              "title": "Availability",
              "description": "The current availability of the window",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "home-assistant/window/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Window",
          "id": "urn:dev:ops:smart-window-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart window that can be controlled and monitored remotely",
          "properties": {
            "contact": {
              "title": "Contact",
              "description": "The current state of the window contact",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "open",
                "closed",
                "unknown"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home-assistant/window/contact",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "availability": {
              "title": "Availability",
              "description": "The current availability of the window",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home-assistant/window/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        }
      ],
      "msg_log": "topic: 'home-assistant/window/contact'; payload: 'open'; retain: 'true'\ntopic: 'home-assistant/window/contact'; payload: 'closed'; retain: 'true'\ntopic: 'home-assistant/window/contact'; payload: 'unknown'; retain: 'true'\ntopic: 'home-assistant/window/availability'; payload: 'unavailable'; retain: 'true'\ntopic: 'home-assistant/window/availability'; payload: 'available'; retain: 'true'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "SmartButton",
        "title": "Smart Push Button",
        "id": "urn:uuid:6f06a2fb-706e-41b4-9245-917c38c5c61f",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "A smart push button that can be used to automate stuff",
        "properties": {
          "availability": {
            "title": "Button Availability",
            "description": "Availability status of the button",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "unavailable",
              "available"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "home/bedroom/switch1/availability",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "pressed": {
            "title": "Button Press",
            "description": "Button Press",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "home/bedroom/switch1/pressed",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {}
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Switch",
          "id": "urn:dev:ops:switch-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch that can be controlled remotely",
          "properties": {
            "availability": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/bedroom/switch1/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "pressed": {
              "title": "",
              "description": "The switch has been pressed",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/bedroom/switch1/pressed",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Switch",
          "id": "urn:dev:ops:switch-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch that can be controlled remotely",
          "properties": {
            "availability": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/bedroom/switch1/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "pressed": {
              "title": "",
              "description": "The switch has been pressed",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "home/bedroom/switch1/pressed",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Switch",
          "id": "urn:dev:ops:switch1",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch that can be controlled remotely",
          "properties": {
            "availability": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/bedroom/switch1/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "pressed": {
              "title": "",
              "description": "Event triggered when the switch is pressed",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/bedroom/switch1/pressed",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Switch",
          "id": "urn:dev:ops:switch-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch that can be controlled remotely",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "The availability of the switch",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "text/plain",
                  "mqv:topic": "home/bedroom/switch1/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "pressed": {
              "title": "Pressed",
              "description": "The switch has been pressed",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "text/plain",
                  "mqv:topic": "home/bedroom/switch1/pressed",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Switch",
          "id": "urn:dev:ops:switch-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch that can be controlled remotely",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "The availability of the switch",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/bedroom/switch1/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "pressed": {
              "title": "Pressed",
              "description": "The switch has been pressed",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/bedroom/switch1/pressed",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Switch",
          "id": "urn:dev:ops:switch-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch that can be controlled remotely",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "The availability of the switch",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/bedroom/switch1/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "pressed": {
              "title": "Pressed",
              "description": "The switch has been pressed",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/bedroom/switch1/pressed",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Switch",
          "id": "urn:dev:ops:switch1",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch that can be controlled remotely",
          "properties": {
            "availability": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unavailable",
                "available"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/bedroom/switch1/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "pressed": {
              "title": "",
              "description": "The switch has been pressed",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/bedroom/switch1/pressed",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Switch",
          "id": "urn:dev:ops:switch-123456789",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch that can be controlled remotely",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates if the switch is available or not",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/bedroom/switch1/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "pressed": {
              "title": "Pressed",
              "description": "Indicates if the switch has been pressed",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/bedroom/switch1/pressed",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Switch",
          "id": "urn:dev:ops:switch-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch that can be controlled remotely",
          "properties": {
            "availability": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/bedroom/switch1/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "pressed": {
              "title": "",
              "description": "The switch has been pressed",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/bedroom/switch1/pressed",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Switch",
          "id": "urn:dev:ops:smart-switch-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch that can be controlled remotely",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates whether the switch is available or not",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/bedroom/switch1/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "pressed": {
              "title": "Pressed",
              "description": "Indicates that the switch has been pressed",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/bedroom/switch1/pressed",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {}
        }
      ],
      "msg_log": "topic: 'home/bedroom/switch1/availability'; payload: 'unavailable'; retain: 'true'\ntopic: 'home/bedroom/switch1/availability'; payload: 'available'; retain: 'true'\ntopic: 'home/bedroom/switch1/pressed'; payload: ''; retain: 'false'\ntopic: 'home/bedroom/switch1/pressed'; payload: ''; retain: 'false'\ntopic: 'home/bedroom/switch1/pressed'; payload: ''; retain: 'false'\ntopic: 'home/bedroom/switch1/pressed'; payload: ''; retain: 'false'\ntopic: 'home/bedroom/switch1/pressed'; payload: ''; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "Doorbell",
        "title": "My Frontdoor Dorbell",
        "id": "urn:uuid:bc4c5201-1540-4229-871f-37c9ea7058a1",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "The front doorbell",
        "properties": {
          "availability": {
            "title": "Availability",
            "description": "Availability status of the doorbell",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "ONLINE",
              "OFFLINE"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "home/front/db/avail",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "ring": {
            "title": "Doorbell Ringed",
            "description": "Doorbell ringed",
            "data": {
              "title": "Timestamp",
              "description": "POSIX timestamp when the bell was rung",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "home/front/db/ring",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {}
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDoorBell",
          "title": "Smart Door Bell",
          "id": "urn:dev:ops:smart-door-bell-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart door bell that can be monitored and controlled remotely",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "The availability of the smart door bell",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/front/db/avail",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "ring": {
              "title": "Ring",
              "description": "The door bell has been rung",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/front/db/ring",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Doorbell",
          "id": "urn:dev:ops:doorbell-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart doorbell that sends notifications when someone rings the doorbell",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "The current availability of the doorbell",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/front/db/avail",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "ring": {
              "title": "Ring",
              "description": "The doorbell has been rung",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/front/db/ring",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Doorbell",
          "id": "urn:dev:ops:doorbell-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart doorbell that sends notifications when someone rings the doorbell",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "The availability of the doorbell",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/front/db/avail",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "ring": {
              "title": "Ring",
              "description": "The doorbell has been rung",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/front/db/ring",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Doorbell",
          "id": "urn:dev:ops:doorbell-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart doorbell that can be controlled and monitored remotely",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "The current availability of the doorbell",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/front/db/avail",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "ring": {
              "title": "Ring",
              "description": "The doorbell has been rung",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/front/db/ring",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDoorBell",
          "title": "Smart Door Bell",
          "id": "urn:dev:ops:smart-door-bell-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart door bell that sends notifications when someone rings the door bell",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "The availability of the smart door bell",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/front/db/avail",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "ring": {
              "title": "Ring",
              "description": "The door bell was rung",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/front/db/ring",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDoorBell",
          "title": "Smart Door Bell",
          "id": "urn:dev:ops:smart-door-bell-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart door bell that can detect motion and send notifications",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "The availability of the door bell",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/front/db/avail",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "ring": {
              "title": "Ring",
              "description": "The door bell has been rung",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/front/db/ring",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDoorBell",
          "title": "Smart Door Bell",
          "id": "urn:dev:ops:smart-door-bell-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart door bell with online status and ring events",
          "properties": {
            "onlineStatus": {
              "title": "Online Status",
              "description": "The online status of the smart door bell",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/front/db/avail",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "ringEvent": {
              "title": "Ring Event",
              "description": "The ring event of the smart door bell",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/front/db/ring",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Doorbell",
          "id": "urn:dev:ops:doorbell-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart doorbell that can be controlled and monitored remotely",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "The current availability of the doorbell",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/front/db/avail",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "ring": {
              "title": "Ring",
              "description": "The doorbell has been rung",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/front/db/ring",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDoorbell",
          "title": "Smart Doorbell",
          "id": "urn:dev:ops:smart-doorbell-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart doorbell that can detect motion and send notifications",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "The current availability of the doorbell",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/front/db/avail",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "ring": {
              "title": "Ring",
              "description": "The doorbell has been rung",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/front/db/ring",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDoorbell",
          "title": "Smart Doorbell",
          "id": "urn:dev:ops:doorbell-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart doorbell that can detect motion and send notifications",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "The availability of the doorbell",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/front/db/avail",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "ring": {
              "title": "Ring",
              "description": "The doorbell has been rung",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/front/db/ring",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {}
        }
      ],
      "msg_log": "topic: 'home/front/db/avail'; payload: 'ONLINE'; retain: 'true'\ntopic: 'home/front/db/avail'; payload: 'OFFLINE'; retain: 'true'\ntopic: 'home/front/db/ring'; payload: '1734511712'; retain: 'false'\ntopic: 'home/front/db/ring'; payload: '1734512012'; retain: 'false'\ntopic: 'home/front/db/ring'; payload: '1734512312'; retain: 'false'\ntopic: 'home/front/db/ring'; payload: '1734512612'; retain: 'false'\ntopic: 'home/front/db/ring'; payload: '1734512912'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "ElectricVehicle",
        "title": "Electric Vehilce",
        "id": "urn:uuid:609e0187-2c32-47d5-ab77-2c831aab3bc5",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "An electric vehicle",
        "properties": {
          "chargeStatus": {
            "title": "Status Code",
            "description": "charge status compliant to SAE_J1772",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "A",
              "B",
              "C",
              "D",
              "E",
              "F"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/charge/status",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "SoC": {
            "title": "State of Charge",
            "description": "State of Charge of EV in percent",
            "observable": true,
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/soc",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "charged": {
            "title": "Charged",
            "description": "Energy that has been charged",
            "observable": true,
            "type": "number",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/charged",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "capacity": {
            "title": "Capacity",
            "description": "Capacity of the EV battery",
            "observable": true,
            "type": "number",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/capacity",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "range": {
            "title": "Range",
            "description": "Range in km that is left",
            "observable": true,
            "type": "number",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/range",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "odometer": {
            "title": "Odometer",
            "description": "Number of km that the EV has been driven",
            "observable": true,
            "type": "number",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/odometer",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "power": {
            "title": "Power",
            "description": "Current power consumption of charger",
            "observable": true,
            "type": "number",
            "minimum": -3600,
            "maximum": 3600,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/charger/power",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "charging": {
            "title": "EV Charging",
            "description": "Charging event EV",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "START",
                "STOP"
              ],
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/charging",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "setChargeLimit": {
            "title": "Charging Limit",
            "description": "Set the charging limit of EV",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/charging/limit",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Electric Vehicle",
          "id": "urn:dev:ops:garage-ev-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "An electric vehicle with various sensors and charging capabilities",
          "properties": {
            "chargeStatus": {
              "title": "Charge Status",
              "description": "The current charge status of the vehicle",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charge/status",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charge/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "soc": {
              "title": "State of Charge",
              "description": "The current state of charge of the vehicle's battery",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/soc",
                  "contentType": null,
                  "mqv:topic": "garage/ev/soc",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "charged": {
              "title": "Charged",
              "description": "The total amount of energy charged",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charged",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charged",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "capacity": {
              "title": "Capacity",
              "description": "The total capacity of the vehicle's battery",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/capacity",
                  "contentType": null,
                  "mqv:topic": "garage/ev/capacity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "range": {
              "title": "Range",
              "description": "The estimated range of the vehicle",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/range",
                  "contentType": null,
                  "mqv:topic": "garage/ev/range",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "odometer": {
              "title": "Odometer",
              "description": "The total distance traveled by the vehicle",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/odometer",
                  "contentType": null,
                  "mqv:topic": "garage/ev/odometer",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "chargerPower": {
              "title": "Charger Power",
              "description": "The current power output of the charger",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "startCharging": {
              "title": "Start Charging",
              "description": "Start charging the vehicle",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "START"
                  ]
                }
              ]
            },
            "stopCharging": {
              "title": "Stop Charging",
              "description": "Stop charging the vehicle",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "STOP"
                  ]
                }
              ]
            },
            "setChargingLimit": {
              "title": "Set Charging Limit",
              "description": "Set the charging limit",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging/limit",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging/limit",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Electric Vehicle",
          "id": "urn:dev:ops:garage-ev-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "An electric vehicle with various sensors and actuators",
          "properties": {
            "chargeStatus": {
              "title": "Charge Status",
              "description": "The current charge status of the vehicle",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charge/status",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charge/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "soc": {
              "title": "State of Charge",
              "description": "The current state of charge of the vehicle's battery",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/soc",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/soc",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "charged": {
              "title": "Charged Energy",
              "description": "The total energy charged into the vehicle's battery",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charged",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charged",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "capacity": {
              "title": "Battery Capacity",
              "description": "The total capacity of the vehicle's battery",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/capacity",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/capacity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "range": {
              "title": "Range",
              "description": "The estimated range of the vehicle",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/range",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/range",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "odometer": {
              "title": "Odometer",
              "description": "The current odometer reading of the vehicle",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/odometer",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/odometer",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "chargerPower": {
              "title": "Charger Power",
              "description": "The current power being drawn by the charger",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "startCharging": {
              "title": "Start Charging",
              "description": "Start charging the vehicle",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "START"
                  ]
                }
              ]
            },
            "stopCharging": {
              "title": "Stop Charging",
              "description": "Stop charging the vehicle",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "STOP"
                  ]
                }
              ]
            },
            "setChargingLimit": {
              "title": "Set Charging Limit",
              "description": "Set the charging limit for the vehicle",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging/limit",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging/limit",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Electric Vehicle Charger",
          "id": "urn:dev:ops:garage-ev-charger-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart electric vehicle charger",
          "properties": {
            "chargeStatus": {
              "title": "Charge Status",
              "description": "The current charge status of the vehicle",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charge/status",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charge/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "soc": {
              "title": "State of Charge",
              "description": "The current state of charge of the vehicle",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/soc",
                  "contentType": null,
                  "mqv:topic": "garage/ev/soc",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "charged": {
              "title": "Charged Energy",
              "description": "The total energy charged by the charger",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charged",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charged",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "capacity": {
              "title": "Battery Capacity",
              "description": "The capacity of the vehicle's battery",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/capacity",
                  "contentType": null,
                  "mqv:topic": "garage/ev/capacity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "range": {
              "title": "Range",
              "description": "The estimated range of the vehicle",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/range",
                  "contentType": null,
                  "mqv:topic": "garage/ev/range",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "odometer": {
              "title": "Odometer",
              "description": "The current odometer reading of the vehicle",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/odometer",
                  "contentType": null,
                  "mqv:topic": "garage/ev/odometer",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "chargerPower": {
              "title": "Charger Power",
              "description": "The current power output of the charger",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "startCharging": {
              "title": "Start Charging",
              "description": "Start charging the vehicle",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "START"
                  ]
                }
              ]
            },
            "stopCharging": {
              "title": "Stop Charging",
              "description": "Stop charging the vehicle",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "STOP"
                  ]
                }
              ]
            },
            "setChargingLimit": {
              "title": "Set Charging Limit",
              "description": "Set the charging limit for the vehicle",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging/limit",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging/limit",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart EV Charger",
          "id": "urn:dev:ops:garage-ev-charger-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart EV charger that provides real-time data on charging status, state of charge, charged energy, capacity, range, odometer, and charger power.",
          "properties": {
            "chargeStatus": {
              "title": "Charge Status",
              "description": "The current charge status of the EV",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charge/status",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charge/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "soc": {
              "title": "State of Charge",
              "description": "The current state of charge of the EV battery",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/soc",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/soc",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "charged": {
              "title": "Charged Energy",
              "description": "The total energy charged by the EV",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charged",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charged",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "capacity": {
              "title": "Capacity",
              "description": "The capacity of the EV battery",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/capacity",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/capacity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "range": {
              "title": "Range",
              "description": "The estimated range of the EV",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/range",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/range",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "odometer": {
              "title": "Odometer",
              "description": "The total distance traveled by the EV",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/odometer",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/odometer",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "chargerPower": {
              "title": "Charger Power",
              "description": "The current power output of the charger",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "startCharging": {
              "title": "Start Charging",
              "description": "Starts the charging process",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "START"
                  ]
                }
              ]
            },
            "stopCharging": {
              "title": "Stop Charging",
              "description": "Stops the charging process",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "STOP"
                  ]
                }
              ]
            },
            "setChargingLimit": {
              "title": "Set Charging Limit",
              "description": "Sets the charging limit",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging/limit",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging/limit",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart EV Charger",
          "id": "urn:dev:ops:garage-ev-charger-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart EV charger that provides real-time charging status, state of charge, and other relevant information.",
          "properties": {
            "chargeStatus": {
              "title": "Charge Status",
              "description": "The current charge status of the EV",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charge/status",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charge/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "stateOfCharge": {
              "title": "State of Charge",
              "description": "The current state of charge of the EV",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/soc",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/soc",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "charged": {
              "title": "Charged",
              "description": "The total amount of energy charged",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charged",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charged",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "capacity": {
              "title": "Capacity",
              "description": "The total capacity of the EV battery",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/capacity",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/capacity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "range": {
              "title": "Range",
              "description": "The estimated range of the EV",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/range",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/range",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "odometer": {
              "title": "Odometer",
              "description": "The current odometer reading",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/odometer",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/odometer",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "chargerPower": {
              "title": "Charger Power",
              "description": "The current power being drawn by the charger",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "startCharging": {
              "title": "Start Charging",
              "description": "Start charging the EV",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "START"
                  ]
                }
              ]
            },
            "stopCharging": {
              "title": "Stop Charging",
              "description": "Stop charging the EV",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "STOP"
                  ]
                }
              ]
            },
            "setChargingLimit": {
              "title": "Set Charging Limit",
              "description": "Set the charging limit",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging/limit",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging/limit",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart EV Charger",
          "id": "urn:dev:ops:garage-ev-charger-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart EV charger that monitors and controls the charging process",
          "properties": {
            "chargeStatus": {
              "title": "Charge Status",
              "description": "The current charge status of the EV",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charge/status",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charge/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "soc": {
              "title": "State of Charge",
              "description": "The current state of charge of the EV's battery",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/soc",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/soc",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "charged": {
              "title": "Charged Energy",
              "description": "The total energy charged to the EV's battery",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charged",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charged",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "capacity": {
              "title": "Battery Capacity",
              "description": "The total capacity of the EV's battery",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/capacity",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/capacity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "range": {
              "title": "Range",
              "description": "The estimated range of the EV",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/range",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/range",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "odometer": {
              "title": "Odometer",
              "description": "The current odometer reading of the EV",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/odometer",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/odometer",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "chargerPower": {
              "title": "Charger Power",
              "description": "The current power output of the charger",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "startCharging": {
              "title": "Start Charging",
              "description": "Start the charging process",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "START"
                  ]
                }
              ]
            },
            "stopCharging": {
              "title": "Stop Charging",
              "description": "Stop the charging process",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "STOP"
                  ]
                }
              ]
            },
            "setChargingLimit": {
              "title": "Set Charging Limit",
              "description": "Set the charging limit",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging/limit",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging/limit",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Electric Vehicle Charger",
          "id": "urn:dev:ops:garage-ev-charger-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart electric vehicle charger",
          "properties": {
            "chargeStatus": {
              "title": "Charge Status",
              "description": "The current charge status of the vehicle",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charge/status",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charge/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "stateOfCharge": {
              "title": "State of Charge",
              "description": "The current state of charge of the vehicle",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/soc",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/soc",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "chargedEnergy": {
              "title": "Charged Energy",
              "description": "The total energy charged by the charger",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charged",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charged",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "capacity": {
              "title": "Capacity",
              "description": "The capacity of the charger",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/capacity",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/capacity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "range": {
              "title": "Range",
              "description": "The estimated range of the vehicle",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/range",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/range",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "odometer": {
              "title": "Odometer",
              "description": "The current odometer reading of the vehicle",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/odometer",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/odometer",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "chargerPower": {
              "title": "Charger Power",
              "description": "The current power output of the charger",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "startCharging": {
              "title": "Start Charging",
              "description": "Start charging the vehicle",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "START"
                  ]
                }
              ]
            },
            "stopCharging": {
              "title": "Stop Charging",
              "description": "Stop charging the vehicle",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "STOP"
                  ]
                }
              ]
            },
            "setChargingLimit": {
              "title": "Set Charging Limit",
              "description": "Set the charging limit for the vehicle",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging/limit",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging/limit",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Electric Vehicle",
          "id": "urn:dev:ops:garage-ev-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "An electric vehicle with various sensors and actuators",
          "properties": {
            "chargeStatus": {
              "title": "Charge Status",
              "description": "The current charge status of the vehicle",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charge/status",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charge/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "soc": {
              "title": "State of Charge",
              "description": "The current state of charge of the vehicle's battery",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/soc",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/soc",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "charged": {
              "title": "Charged Energy",
              "description": "The total energy charged into the vehicle's battery",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charged",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charged",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "capacity": {
              "title": "Battery Capacity",
              "description": "The total capacity of the vehicle's battery",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/capacity",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/capacity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "range": {
              "title": "Range",
              "description": "The estimated range of the vehicle",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/range",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/range",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "odometer": {
              "title": "Odometer",
              "description": "The total distance traveled by the vehicle",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/odometer",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/odometer",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "chargerPower": {
              "title": "Charger Power",
              "description": "The current power being drawn by the charger",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "startCharging": {
              "title": "Start Charging",
              "description": "Start charging the vehicle",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "START"
                  ]
                }
              ]
            },
            "stopCharging": {
              "title": "Stop Charging",
              "description": "Stop charging the vehicle",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "STOP"
                  ]
                }
              ]
            },
            "setChargingLimit": {
              "title": "Set Charging Limit",
              "description": "Set the charging limit for the vehicle",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging/limit",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging/limit",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Electric Vehicle Charger",
          "id": "urn:dev:ops:garage-ev-charger-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "An electric vehicle charger with various sensors and controls",
          "properties": {
            "chargeStatus": {
              "title": "Charge Status",
              "description": "The current charge status of the vehicle",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charge/status",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charge/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "soc": {
              "title": "State of Charge",
              "description": "The current state of charge of the vehicle's battery",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/soc",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/soc",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "charged": {
              "title": "Charged Energy",
              "description": "The total energy charged to the vehicle's battery",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charged",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charged",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "capacity": {
              "title": "Battery Capacity",
              "description": "The total capacity of the vehicle's battery",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/capacity",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/capacity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "range": {
              "title": "Range",
              "description": "The estimated range of the vehicle based on the current state of charge",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/range",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/range",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "odometer": {
              "title": "Odometer",
              "description": "The current odometer reading of the vehicle",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/odometer",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/odometer",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "chargerPower": {
              "title": "Charger Power",
              "description": "The current power output of the charger",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "startCharging": {
              "title": "Start Charging",
              "description": "Start charging the vehicle",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "START"
                  ]
                }
              ]
            },
            "stopCharging": {
              "title": "Stop Charging",
              "description": "Stop charging the vehicle",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "STOP"
                  ]
                }
              ]
            },
            "setChargingLimit": {
              "title": "Set Charging Limit",
              "description": "Set the charging limit for the vehicle",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging/limit",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging/limit",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Electric Vehicle",
          "id": "urn:dev:ops:garage-ev-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart electric vehicle with various sensors and actuators",
          "properties": {
            "chargeStatus": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charge/status",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charge/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "soc": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/soc",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/soc",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "charged": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charged",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charged",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "capacity": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/capacity",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/capacity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "range": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/range",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/range",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "odometer": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/odometer",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/odometer",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "chargerPower": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "startCharging": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "START"
                  ]
                }
              ]
            },
            "stopCharging": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "STOP"
                  ]
                }
              ]
            },
            "setChargingLimit": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging/limit",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charging/limit",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'garage/ev/charge/status'; payload: 'A'; retain: 'true'\ntopic: 'garage/ev/charge/status'; payload: 'B'; retain: 'true'\ntopic: 'garage/ev/charge/status'; payload: 'C'; retain: 'true'\ntopic: 'garage/ev/charge/status'; payload: 'D'; retain: 'true'\ntopic: 'garage/ev/charge/status'; payload: 'E'; retain: 'true'\ntopic: 'garage/ev/charge/status'; payload: 'F'; retain: 'true'\ntopic: 'garage/ev/soc'; payload: '56.77'; retain: 'true'\ntopic: 'garage/ev/soc'; payload: '38.839'; retain: 'true'\ntopic: 'garage/ev/soc'; payload: '30.452'; retain: 'true'\ntopic: 'garage/ev/soc'; payload: '41.383'; retain: 'true'\ntopic: 'garage/ev/soc'; payload: '50.067'; retain: 'true'\ntopic: 'garage/ev/charged'; payload: '247.087'; retain: 'true'\ntopic: 'garage/ev/charged'; payload: '173.048'; retain: 'true'\ntopic: 'garage/ev/charged'; payload: '218.046'; retain: 'true'\ntopic: 'garage/ev/charged'; payload: '28.137'; retain: 'true'\ntopic: 'garage/ev/charged'; payload: '42.157'; retain: 'true'\ntopic: 'garage/ev/capacity'; payload: '138.506'; retain: 'true'\ntopic: 'garage/ev/capacity'; payload: '8.095'; retain: 'true'\ntopic: 'garage/ev/capacity'; payload: '70.868'; retain: 'true'\ntopic: 'garage/ev/capacity'; payload: '197.09'; retain: 'true'\ntopic: 'garage/ev/capacity'; payload: '206.132'; retain: 'true'\ntopic: 'garage/ev/range'; payload: '179.785'; retain: 'true'\ntopic: 'garage/ev/range'; payload: '56.825'; retain: 'true'\ntopic: 'garage/ev/range'; payload: '78.262'; retain: 'true'\ntopic: 'garage/ev/range'; payload: '147.585'; retain: 'true'\ntopic: 'garage/ev/range'; payload: '31.122'; retain: 'true'\ntopic: 'garage/ev/odometer'; payload: '69.564'; retain: 'true'\ntopic: 'garage/ev/odometer'; payload: '195.899'; retain: 'true'\ntopic: 'garage/ev/odometer'; payload: '110.601'; retain: 'true'\ntopic: 'garage/ev/odometer'; payload: '203.246'; retain: 'true'\ntopic: 'garage/ev/odometer'; payload: '40.967'; retain: 'true'\ntopic: 'garage/ev/charger/power'; payload: '2496.71'; retain: 'true'\ntopic: 'garage/ev/charger/power'; payload: '-1042.342'; retain: 'true'\ntopic: 'garage/ev/charger/power'; payload: '1003.072'; retain: 'true'\ntopic: 'garage/ev/charger/power'; payload: '532.409'; retain: 'true'\ntopic: 'garage/ev/charger/power'; payload: '2772.568'; retain: 'true'\ntopic: 'garage/ev/charging'; payload: 'START'; retain: 'false'\ntopic: 'garage/ev/charging'; payload: 'STOP'; retain: 'false'\ntopic: 'garage/ev/charging/limit'; payload: '82'; retain: 'false'\ntopic: 'garage/ev/charging/limit'; payload: '6'; retain: 'false'\ntopic: 'garage/ev/charging/limit'; payload: '96'; retain: 'false'\ntopic: 'garage/ev/charging/limit'; payload: '16'; retain: 'false'\ntopic: 'garage/ev/charging/limit'; payload: '57'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "EvCharger",
        "title": "EV Charger",
        "id": "urn:uuid:bacf4c15-8bae-4a33-b067-4c88b802f7c7",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "An EV charger",
        "properties": {
          "chargerStatus": {
            "title": "Status Code",
            "description": "Status of the charger SAE_J1772",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "A",
              "B",
              "C",
              "D",
              "E",
              "F"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/charger/status",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "current": {
            "title": "Current",
            "description": "Current current of the L1, L2 and L3",
            "observable": true,
            "type": "object",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {
              "L1": {
                "title": "",
                "description": "Current of L1",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "L2": {
                "title": "",
                "description": "Current of L2",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "L3": {
                "title": "",
                "description": "Current of L3",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              }
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/charger/current",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "power": {
            "title": "Power",
            "description": "Current power consumption of charger",
            "observable": true,
            "type": "number",
            "minimum": -3600,
            "maximum": 3600,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/charger/power",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "enabled": {
            "title": "Charger Enabled",
            "description": "Whether the charger is enabled or disabled",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/charger/enabled",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "enable": {
            "title": "Enable Charger",
            "description": "Enable/disable EV charger",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/charger/enable",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "maxCurrent": {
            "title": "Max Current Charger",
            "description": "Set the max. current of EV charger (A)",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/charger/maxCurrent",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart EV Charger",
          "id": "urn:dev:ops:garage-ev-charger-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart EV charger with various features",
          "properties": {
            "status": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/status",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/current",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "enabled": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/enabled",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/enabled",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "enable": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/enable",
                  "contentType": "application/json",
                  "mqv:topic": "garage/charger/enable",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setMaxCurrent": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/maxCurrent",
                  "contentType": "application/json",
                  "mqv:topic": "garage/charger/maxCurrent",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart EV Charger",
          "id": "urn:dev:ops:garage-ev-charger-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart EV charger that provides real-time status updates and allows remote control.",
          "properties": {
            "status": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/status",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/current",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "enabled": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/enabled",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/enabled",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "enable": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/enable",
                  "contentType": null,
                  "mqv:topic": "garage/charger/enable",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setMaxCurrent": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/maxCurrent",
                  "contentType": null,
                  "mqv:topic": "garage/charger/maxCurrent",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart EV Charger",
          "id": "urn:dev:ops:garage-ev-charger-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart EV charger that provides real-time status updates and allows remote control.",
          "properties": {
            "status": {
              "title": "Charger Status",
              "description": "The current status of the charger",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/status",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Charger Current",
              "description": "The current flowing through the charger",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/current",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "Charger Power",
              "description": "The power being drawn by the charger",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "enabled": {
              "title": "Charger Enabled",
              "description": "Whether the charger is currently enabled",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/enabled",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/enabled",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "enable": {
              "title": "Enable Charger",
              "description": "Enable the charger",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/enable",
                  "contentType": "application/json",
                  "mqv:topic": "garage/charger/enable",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setMaxCurrent": {
              "title": "Set Max Current",
              "description": "Set the maximum current for the charger",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/maxCurrent",
                  "contentType": "application/json",
                  "mqv:topic": "garage/charger/maxCurrent",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart EV Charger",
          "id": "urn:dev:ops:garage-ev-charger-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart EV charger with various features",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the charger",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/status",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current flowing through each phase",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/current",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The current power consumption",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "enabled": {
              "title": "Enabled",
              "description": "Whether the charger is enabled",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/enabled",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/enabled",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "enable": {
              "title": "Enable",
              "description": "Enable or disable the charger",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/enable",
                  "contentType": "application/json",
                  "mqv:topic": "garage/charger/enable",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setMaxCurrent": {
              "title": "Set Max Current",
              "description": "Set the maximum current",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/maxCurrent",
                  "contentType": "application/json",
                  "mqv:topic": "garage/charger/maxCurrent",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart EV Charger",
          "id": "urn:dev:ops:garage-ev-charger-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart EV charger that provides real-time monitoring and control of charging sessions.",
          "properties": {
            "status": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/status",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/current",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "enabled": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/enabled",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/enabled",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "enable": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/enable",
                  "contentType": "application/json",
                  "mqv:topic": "garage/charger/enable",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setMaxCurrent": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/maxCurrent",
                  "contentType": "application/json",
                  "mqv:topic": "garage/charger/maxCurrent",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart EV Charger",
          "id": "urn:dev:ops:garage-ev-charger-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart EV charger that can be controlled and monitored remotely.",
          "properties": {
            "status": {
              "title": "Charger Status",
              "description": "The current status of the charger",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/status",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Charger Current",
              "description": "The current flowing through the charger",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/current",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "Charger Power",
              "description": "The power being consumed by the charger",
              "observable": null,
              "type": "number",
              "minimum": -10000,
              "maximum": 10000,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "enabled": {
              "title": "Charger Enabled",
              "description": "Whether the charger is enabled or not",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/enabled",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/enabled",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "enable": {
              "title": "Enable Charger",
              "description": "Enable the charger",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/enable",
                  "contentType": "application/json",
                  "mqv:topic": "garage/charger/enable",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setMaxCurrent": {
              "title": "Set Max Current",
              "description": "Set the maximum current for the charger",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 200,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/maxCurrent",
                  "contentType": "application/json",
                  "mqv:topic": "garage/charger/maxCurrent",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart EV Charger",
          "id": "urn:dev:ops:garage-ev-charger-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart EV charger that can be controlled and monitored remotely.",
          "properties": {
            "status": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/status",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/current",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "enabled": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/enabled",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/enabled",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "enable": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/enable",
                  "contentType": "application/json",
                  "mqv:topic": "garage/charger/enable",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setmaxCurrent": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/maxCurrent",
                  "contentType": "application/json",
                  "mqv:topic": "garage/charger/maxCurrent",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart EV Charger",
          "id": "urn:dev:ops:garage-ev-charger-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart EV charger that provides real-time data and control",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the charger",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/status",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current flowing through each phase",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/current",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The current power consumption",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "enabled": {
              "title": "Enabled",
              "description": "Whether the charger is currently enabled",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/enabled",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/enabled",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "enable": {
              "title": "Enable",
              "description": "Enable or disable the charger",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/enable",
                  "contentType": "application/json",
                  "mqv:topic": "garage/charger/enable",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setMaxCurrent": {
              "title": "Set Max Current",
              "description": "Set the maximum current for the charger",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/maxCurrent",
                  "contentType": "application/json",
                  "mqv:topic": "garage/charger/maxCurrent",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Garage EV Charger",
          "id": "urn:dev:ops:garage-ev-charger-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart EV charger for your garage",
          "properties": {
            "status": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/status",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/current",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "enabled": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/enabled",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/enabled",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "enable": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/enable",
                  "contentType": "application/json",
                  "mqv:topic": "garage/charger/enable",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setMaxCurrent": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/maxCurrent",
                  "contentType": "application/json",
                  "mqv:topic": "garage/charger/maxCurrent",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Garage EV Charger",
          "id": "urn:dev:ops:garage-ev-charger-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart garage EV charger",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the charger",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/status",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current flowing through the charger",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/current",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power being used by the charger",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "enabled": {
              "title": "Enabled",
              "description": "Whether the charger is enabled or not",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/enabled",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/enabled",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "enable": {
              "title": "Enable",
              "description": "Enable or disable the charger",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/enable",
                  "contentType": "application/json",
                  "mqv:topic": "garage/charger/enable",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setMaxCurrent": {
              "title": "Set Max Current",
              "description": "Set the maximum current for the charger",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/maxCurrent",
                  "contentType": "application/json",
                  "mqv:topic": "garage/charger/maxCurrent",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'garage/ev/charger/status'; payload: 'A'; retain: 'true'\ntopic: 'garage/ev/charger/status'; payload: 'B'; retain: 'true'\ntopic: 'garage/ev/charger/status'; payload: 'C'; retain: 'true'\ntopic: 'garage/ev/charger/status'; payload: 'D'; retain: 'true'\ntopic: 'garage/ev/charger/status'; payload: 'E'; retain: 'true'\ntopic: 'garage/ev/charger/status'; payload: 'F'; retain: 'true'\ntopic: 'garage/ev/charger/current'; payload: '{'L1': 7.296, 'L2': 0.165, 'L3': 10.706}'; retain: 'true'\ntopic: 'garage/ev/charger/current'; payload: '{'L1': 9.116, 'L2': 4.463, 'L3': 3.392}'; retain: 'true'\ntopic: 'garage/ev/charger/current'; payload: '{'L1': 6.436, 'L2': 14.742, 'L3': 3.484}'; retain: 'true'\ntopic: 'garage/ev/charger/current'; payload: '{'L1': 9.551, 'L2': 5.263, 'L3': 1.421}'; retain: 'true'\ntopic: 'garage/ev/charger/current'; payload: '{'L1': 9.889, 'L2': 0.731, 'L3': 13.753}'; retain: 'true'\ntopic: 'garage/ev/charger/power'; payload: '-724.833'; retain: 'true'\ntopic: 'garage/ev/charger/power'; payload: '-2802.25'; retain: 'true'\ntopic: 'garage/ev/charger/power'; payload: '-431.458'; retain: 'true'\ntopic: 'garage/ev/charger/power'; payload: '-2616.951'; retain: 'true'\ntopic: 'garage/ev/charger/power'; payload: '1698.384'; retain: 'true'\ntopic: 'garage/ev/charger/enabled'; payload: 'true'; retain: 'false'\ntopic: 'garage/ev/charger/enabled'; payload: 'false'; retain: 'false'\ntopic: 'garage/ev/charger/enabled'; payload: 'true'; retain: 'false'\ntopic: 'garage/ev/charger/enabled'; payload: 'false'; retain: 'false'\ntopic: 'garage/charger/enable'; payload: 'true'; retain: 'false'\ntopic: 'garage/charger/enable'; payload: 'false'; retain: 'false'\ntopic: 'garage/charger/enable'; payload: 'true'; retain: 'false'\ntopic: 'garage/charger/enable'; payload: 'false'; retain: 'false'\ntopic: 'garage/charger/maxCurrent'; payload: '139'; retain: 'false'\ntopic: 'garage/charger/maxCurrent'; payload: '197'; retain: 'false'\ntopic: 'garage/charger/maxCurrent'; payload: '53'; retain: 'false'\ntopic: 'garage/charger/maxCurrent'; payload: '135'; retain: 'false'\ntopic: 'garage/charger/maxCurrent'; payload: '61'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "CeilingFan",
        "title": "Bedroom Ceiling Fan",
        "id": "urn:uuid:94daccad-98e6-43f5-b757-3ab122650b81",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "A ceiling fan with different modes",
        "properties": {
          "state": {
            "title": "Fan State",
            "description": "State of the fan",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "UNKNOWN",
              "ON",
              "OFF"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "bedroom_fan/ceil/status",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "oscillationState": {
            "title": "Oscillation State",
            "description": "Whether the fan is oscillating or not",
            "observable": true,
            "type": "boolean",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "bedroom_fan/ceil/oscillation",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "staling": {
            "title": "Fan Staling",
            "description": "The fan has stalled",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "STALED",
                "OPERATIONAL"
              ],
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "bedroom_fan/ceil/staling",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "setMode": {
            "title": "Fan Mode",
            "description": "Set the fan mode",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "auto",
                "smart",
                "woosh",
                "eco",
                "night",
                "breeze"
              ],
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "bedroom_fan/ceil/set/mode",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "setSpeed": {
            "title": "Fan speed",
            "description": "Set the fan speed in percent",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "bedroom_fan/ceil/set/speed",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Bedroom Fan",
          "id": "urn:dev:ops:bedroom_fan-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart ceiling fan in the bedroom",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The status of the fan",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/status",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "oscillation": {
              "title": "Oscillation",
              "description": "Whether the fan is oscillating",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/oscillation",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/oscillation",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "staling": {
              "title": "Staling",
              "description": "The staling status of the fan",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "STALED",
                "OPERATIONAL"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/staling",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/staling",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setMode": {
              "title": "Set Mode",
              "description": "Set the mode of the fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "auto",
                  "smart",
                  "woosh",
                  "eco",
                  "night",
                  "breeze"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setSpeed": {
              "title": "Set Speed",
              "description": "Set the speed of the fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/speed",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/speed",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Bedroom Fan",
          "id": "urn:dev:ops:bedroom_fan",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart ceiling fan in the bedroom",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The status of the fan",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/status",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "oscillation": {
              "title": "Oscillation",
              "description": "Whether the fan is oscillating",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/oscillation",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/oscillation",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "staling": {
              "title": "Staling",
              "description": "The staling status of the fan",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "STALED",
                "OPERATIONAL"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/staling",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/staling",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setMode": {
              "title": "Set Mode",
              "description": "Set the mode of the fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "auto",
                  "smart",
                  "woosh",
                  "eco",
                  "night",
                  "breeze"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setSpeed": {
              "title": "Set Speed",
              "description": "Set the speed of the fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/speed",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/speed",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Bedroom Fan",
          "id": "urn:dev:ops:bedroom_fan-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart ceiling fan for the bedroom",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the fan",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/status",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "oscillation": {
              "title": "Oscillation",
              "description": "Whether the fan is oscillating or not",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/oscillation",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/oscillation",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "staling": {
              "title": "Staling",
              "description": "The staling status of the fan",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "STALED",
                "OPERATIONAL"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/staling",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/staling",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setMode": {
              "title": "Set Mode",
              "description": "Set the mode of the fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "auto",
                  "smart",
                  "woosh",
                  "eco",
                  "night",
                  "breeze"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setSpeed": {
              "title": "Set Speed",
              "description": "Set the speed of the fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/speed",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/speed",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Bedroom Fan",
          "id": "urn:dev:ops:bedroom_fan",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart ceiling fan in the bedroom",
          "properties": {
            "status": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "bedroom_fan/ceil/status",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "oscillation": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "bedroom_fan/ceil/oscillation",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "staling": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "STALED",
                "OPERATIONAL"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "bedroom_fan/ceil/staling",
                  "mqv:retain": false,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setMode": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "auto",
                  "smart",
                  "woosh",
                  "eco",
                  "night",
                  "breeze"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setSpeed": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "bedroom_fan/ceil/set/speed",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Bedroom Fan",
          "id": "urn:dev:ops:bedroom_fan-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart ceiling fan in the bedroom",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The status of the fan",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/status",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "oscillation": {
              "title": "Oscillation",
              "description": "Whether the fan is oscillating or not",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/oscillation",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/oscillation",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "staling": {
              "title": "Staling",
              "description": "The staling status of the fan",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "STALED",
                "OPERATIONAL"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/staling",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/staling",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setMode": {
              "title": "Set Mode",
              "description": "Set the mode of the fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "auto",
                  "smart",
                  "woosh",
                  "eco",
                  "night",
                  "breeze"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setSpeed": {
              "title": "Set Speed",
              "description": "Set the speed of the fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/speed",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/speed",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Bedroom Fan",
          "id": "urn:dev:ops:bedroom_fan",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart ceiling fan in the bedroom",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the fan",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/status",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "oscillation": {
              "title": "Oscillation",
              "description": "Whether the fan is oscillating or not",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/oscillation",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/oscillation",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "staling": {
              "title": "Staling",
              "description": "The current staling status of the fan",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "STALED",
                "OPERATIONAL"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/staling",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/staling",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setMode": {
              "title": "Set Mode",
              "description": "Set the mode of the fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "auto",
                  "smart",
                  "woosh",
                  "eco",
                  "night",
                  "breeze"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setSpeed": {
              "title": "Set Speed",
              "description": "Set the speed of the fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/speed",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/speed",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Bedroom Fan",
          "id": "urn:dev:ops:bedroom_fan_ceil",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that controls the ceiling fan in the bedroom",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the fan",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/status",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "oscillation": {
              "title": "Oscillation",
              "description": "Whether the fan is oscillating or not",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/oscillation",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/oscillation",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "staling": {
              "title": "Staling",
              "description": "The current staling status of the fan",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "STALED",
                "OPERATIONAL"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/staling",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/staling",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setMode": {
              "title": "Set Mode",
              "description": "Set the mode of the fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "auto",
                  "smart",
                  "woosh",
                  "eco",
                  "night",
                  "breeze"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setSpeed": {
              "title": "Set Speed",
              "description": "Set the speed of the fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/speed",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/speed",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Bedroom Fan",
          "id": "urn:dev:ops:bedroom_fan",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart ceiling fan in the bedroom",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The status of the fan",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/status",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "oscillation": {
              "title": "Oscillation",
              "description": "Whether the fan is oscillating or not",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/oscillation",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/oscillation",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "staling": {
              "title": "Staling",
              "description": "The staling status of the fan",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "STALED",
                "OPERATIONAL"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/staling",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/staling",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setMode": {
              "title": "Set Mode",
              "description": "Set the mode of the fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "auto",
                  "smart",
                  "woosh",
                  "eco",
                  "night",
                  "breeze"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setSpeed": {
              "title": "Set Speed",
              "description": "Set the speed of the fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/speed",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/speed",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Bedroom Fan",
          "id": "urn:dev:ops:bedroom_fan",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart ceiling fan in the bedroom",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The status of the fan",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/status",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "oscillation": {
              "title": "Oscillation",
              "description": "Whether the fan is oscillating or not",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/oscillation",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/oscillation",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "staling": {
              "title": "Staling",
              "description": "Whether the fan is staling or operational",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "STALED",
                "OPERATIONAL"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/staling",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/staling",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setMode": {
              "title": "Set Mode",
              "description": "Set the mode of the fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "auto",
                  "smart",
                  "woosh",
                  "eco",
                  "night",
                  "breeze"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setSpeed": {
              "title": "Set Speed",
              "description": "Set the speed of the fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/speed",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/speed",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Bedroom Fan",
          "id": "urn:dev:ops:bedroom_fan",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart fan for the bedroom",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The status of the fan",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/status",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "oscillation": {
              "title": "Oscillation",
              "description": "The oscillation of the fan",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/oscillation",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/oscillation",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "staling": {
              "title": "Staling",
              "description": "The staling of the fan",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "STALED",
                "OPERATIONAL"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/staling",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/staling",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setMode": {
              "title": "Set Mode",
              "description": "Set the mode of the fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "auto",
                  "smart",
                  "woosh",
                  "eco",
                  "night",
                  "breeze"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setSpeed": {
              "title": "Set Speed",
              "description": "Set the speed of the fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/speed",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/speed",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'bedroom_fan/ceil/status'; payload: 'UNKNOWN'; retain: 'true'\ntopic: 'bedroom_fan/ceil/status'; payload: 'ON'; retain: 'true'\ntopic: 'bedroom_fan/ceil/status'; payload: 'OFF'; retain: 'true'\ntopic: 'bedroom_fan/ceil/oscillation'; payload: 'true'; retain: 'true'\ntopic: 'bedroom_fan/ceil/oscillation'; payload: 'false'; retain: 'true'\ntopic: 'bedroom_fan/ceil/oscillation'; payload: 'true'; retain: 'true'\ntopic: 'bedroom_fan/ceil/oscillation'; payload: 'false'; retain: 'true'\ntopic: 'bedroom_fan/ceil/staling'; payload: 'STALED'; retain: 'false'\ntopic: 'bedroom_fan/ceil/staling'; payload: 'OPERATIONAL'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'auto'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'smart'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'woosh'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'eco'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'night'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'breeze'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/speed'; payload: '79.369'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/speed'; payload: '54.385'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/speed'; payload: '39.832'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/speed'; payload: '76.065'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/speed'; payload: '29.738'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "AirHumidifier",
        "title": "Air Humidifier",
        "id": "urn:uuid:5676e5b0-9e2d-473c-879f-1e226ce3192c",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "An air humidifier with multiple modes",
        "properties": {
          "state": {
            "title": "Fan State",
            "description": "State of the fan",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "UNKNOWN",
              "ON",
              "OFF",
              "IDLE"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "living_room/humidifier/status",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "humidity": {
            "title": "Air Humidity",
            "description": "Current air humidity in percent",
            "observable": true,
            "type": "integer",
            "minimum": 5,
            "maximum": 95,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "living_room/humidifier/humidity",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "targetReached": {
            "title": "Target Reached",
            "description": "The humidity target has been reached",
            "data": {
              "title": "Timestamp",
              "description": "POSIX timestamp when the target was reached",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "living_room/humidifier/target/ok",
                "mqv:retain": true,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          },
          "belowThreshold": {
            "title": "Below Threshold",
            "description": "The humidity is below the threshold",
            "data": {
              "title": "Timestamp",
              "description": "POSIX timestamp when the threshold was reached",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "living_room/humidifier/threshold/ok",
                "mqv:retain": true,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "setTarget": {
            "title": "Target Humidity",
            "description": "Set the humidity target",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "living_room/humidifier/target/set",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "setThreshold": {
            "title": "Threshold Humidity",
            "description": "Set the threshold target",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "living_room/humidifier/threshold/set",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "setMode": {
            "title": "Humidifier Mode",
            "description": "Set the mode of the humidifier",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "normal",
                "eco",
                "away",
                "boost",
                "comfort",
                "home",
                "sleep",
                "auto",
                "baby"
              ],
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "bedroom_fan/ceil/set/mode",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "setState": {
            "title": "Humidifier State",
            "description": "Set the state of the humidifier",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "on",
                "off"
              ],
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "bedroom_fan/ceil/set/mode",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Humidifier",
          "id": "urn:dev:ops:living_room_humidifier-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart humidifier device",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the humidifier",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF",
                "IDLE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/status",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "humidity": {
              "title": "Humidity",
              "description": "The current humidity level",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/humidity",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/humidity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setTarget": {
              "title": "Set Target",
              "description": "Set the target humidity level",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/target/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setThreshold": {
              "title": "Set Threshold",
              "description": "Set the threshold humidity level",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/threshold/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Humidifier",
          "id": "urn:dev:ops:living_room_humidifier",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart humidifier that can be controlled and monitored remotely.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the humidifier",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF",
                "IDLE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "humidity": {
              "title": "Humidity",
              "description": "The current humidity level",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/humidity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "target": {
              "title": "Target",
              "description": "The target humidity level",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "threshold": {
              "title": "Threshold",
              "description": "The threshold humidity level",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setTarget": {
              "title": "Set Target",
              "description": "Set the target humidity level",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setThreshold": {
              "title": "Set Threshold",
              "description": "Set the threshold humidity level",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Humidifier and Fan",
          "id": "urn:dev:ops:living_room_humidifier",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart humidifier and fan device that can be controlled and monitored remotely.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the humidifier",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF",
                "IDLE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "humidity": {
              "title": "Humidity",
              "description": "The current humidity level",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/humidity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "target": {
              "title": "Target",
              "description": "The target humidity level",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "threshold": {
              "title": "Threshold",
              "description": "The threshold humidity level",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setMode": {
              "title": "Set Mode",
              "description": "Set the mode of the fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "normal",
                  "eco",
                  "away",
                  "boost",
                  "comfort",
                  "home",
                  "sleep",
                  "auto",
                  "baby",
                  "on",
                  "off"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Humidifier",
          "id": "urn:dev:ops:living_room_humidifier-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart humidifier that can be controlled and monitored remotely",
          "properties": {
            "status": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF",
                "IDLE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "humidity": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/humidity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "target": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "threshold": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setTarget": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setThreshold": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Humidifier",
          "id": "urn:dev:ops:living_room_humidifier-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart humidifier that can be controlled and monitored remotely.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the humidifier",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF",
                "IDLE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "humidity": {
              "title": "Humidity",
              "description": "The current humidity level",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/humidity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "target": {
              "title": "Target",
              "description": "The target humidity level",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "threshold": {
              "title": "Threshold",
              "description": "The threshold humidity level",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setTarget": {
              "title": "Set Target",
              "description": "Set the target humidity level",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setThreshold": {
              "title": "Set Threshold",
              "description": "Set the threshold humidity level",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Humidifier and Fan",
          "id": "urn:dev:ops:living_room_humidifier",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart humidifier and fan device",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The status of the humidifier",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF",
                "IDLE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/status",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "humidity": {
              "title": "Humidity",
              "description": "The current humidity level",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/humidity",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/humidity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "targetOk": {
              "title": "Target Ok",
              "description": "The target humidity level has been reached",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/target/ok",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/target/ok",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "thresholdOk": {
              "title": "Threshold Ok",
              "description": "The threshold humidity level has been reached",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/threshold/ok",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/threshold/ok",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "setTarget": {
              "title": "Set Target",
              "description": "Set the target humidity level",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/target/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setThreshold": {
              "title": "Set Threshold",
              "description": "Set the threshold humidity level",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/threshold/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:living_room_humidifier",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that controls the humidity in the living room",
          "properties": {
            "status": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF",
                "IDLE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "humidity": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/humidity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "target": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "threshold": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setMode": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "normal",
                  "eco",
                  "away",
                  "boost",
                  "comfort",
                  "home",
                  "sleep",
                  "auto",
                  "baby",
                  "on",
                  "off"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Humidifier",
          "id": "urn:dev:ops:living_room_humidifier-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart humidifier device",
          "properties": {
            "status": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF",
                "IDLE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "humidity": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/humidity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "target": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "threshold": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setTarget": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setThreshold": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:living_room_humidifier",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that controls the humidity and fan modes in a living room and bedroom",
          "properties": {
            "status": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF",
                "IDLE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "humidity": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/humidity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "target": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "threshold": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "targetOk": {
              "title": "",
              "description": "",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/target/ok",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "thresholdOk": {
              "title": "",
              "description": "",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/threshold/ok",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "setTarget": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setThreshold": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Humidifier",
          "id": "urn:dev:ops:living_room_humidifier",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart humidifier device",
          "properties": {
            "status": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF",
                "IDLE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "humidity": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/humidity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "target": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "threshold": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "set_target": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "set_threshold": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'living_room/humidifier/status'; payload: 'UNKNOWN'; retain: 'true'\ntopic: 'living_room/humidifier/status'; payload: 'ON'; retain: 'true'\ntopic: 'living_room/humidifier/status'; payload: 'OFF'; retain: 'true'\ntopic: 'living_room/humidifier/status'; payload: 'IDLE'; retain: 'true'\ntopic: 'living_room/humidifier/humidity'; payload: '24'; retain: 'true'\ntopic: 'living_room/humidifier/humidity'; payload: '57'; retain: 'true'\ntopic: 'living_room/humidifier/humidity'; payload: '34'; retain: 'true'\ntopic: 'living_room/humidifier/humidity'; payload: '91'; retain: 'true'\ntopic: 'living_room/humidifier/humidity'; payload: '39'; retain: 'true'\ntopic: 'living_room/humidifier/target/ok'; payload: '1734514864'; retain: 'true'\ntopic: 'living_room/humidifier/target/ok'; payload: '1734515164'; retain: 'true'\ntopic: 'living_room/humidifier/target/ok'; payload: '1734515464'; retain: 'true'\ntopic: 'living_room/humidifier/target/ok'; payload: '1734515764'; retain: 'true'\ntopic: 'living_room/humidifier/target/ok'; payload: '1734516064'; retain: 'true'\ntopic: 'living_room/humidifier/threshold/ok'; payload: '184'; retain: 'true'\ntopic: 'living_room/humidifier/threshold/ok'; payload: '124'; retain: 'true'\ntopic: 'living_room/humidifier/threshold/ok'; payload: '16'; retain: 'true'\ntopic: 'living_room/humidifier/threshold/ok'; payload: '233'; retain: 'true'\ntopic: 'living_room/humidifier/threshold/ok'; payload: '238'; retain: 'true'\ntopic: 'living_room/humidifier/target/set'; payload: '13'; retain: 'false'\ntopic: 'living_room/humidifier/target/set'; payload: '31'; retain: 'false'\ntopic: 'living_room/humidifier/target/set'; payload: '66'; retain: 'false'\ntopic: 'living_room/humidifier/target/set'; payload: '36'; retain: 'false'\ntopic: 'living_room/humidifier/target/set'; payload: '17'; retain: 'false'\ntopic: 'living_room/humidifier/threshold/set'; payload: '29'; retain: 'false'\ntopic: 'living_room/humidifier/threshold/set'; payload: '58'; retain: 'false'\ntopic: 'living_room/humidifier/threshold/set'; payload: '60'; retain: 'false'\ntopic: 'living_room/humidifier/threshold/set'; payload: '33'; retain: 'false'\ntopic: 'living_room/humidifier/threshold/set'; payload: '38'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'normal'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'eco'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'away'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'boost'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'comfort'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'home'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'sleep'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'auto'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'baby'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'on'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'off'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "AirConditioner",
        "title": "Air Conditioner",
        "id": "urn:uuid:981e557a-e3a9-4482-bbcb-d76649830bd8",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "An AC unit in the office room",
        "properties": {
          "state": {
            "title": "AC State",
            "description": "State of the AC unit",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "UNKNOWN",
              "COOL",
              "OFF",
              "STANDBY",
              "FAN_ONLY"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "upstairs/office/ac/status",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "swing": {
            "title": "Swing state",
            "description": "State of the AC unit",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "ON",
              "OFF"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "upstairs/office/ac/swing",
                "mqv:retain": false,
                "op": [
                  "observeproperty"
                ]
              }
            ]
          },
          "fanMode": {
            "title": "Fan Mode",
            "description": "Fan mode of the AC unit",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "OFF",
              "LOW",
              "MEDIUM",
              "HIGH"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "upstairs/office/ac/fan",
                "mqv:retain": false,
                "op": [
                  "observeproperty"
                ]
              }
            ]
          },
          "temperature": {
            "title": "Air temperature",
            "description": "Current air temperature",
            "observable": true,
            "type": "integer",
            "minimum": 0,
            "maximum": 68,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "upstairs/office/ac/temp",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "setPoint": {
            "title": "Target temperature reached",
            "description": "The target temperature has been reached",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "upstairs/office/ac/setpoint/ok",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "setTemp": {
            "title": "Target Humidity",
            "description": "Set the humidity target",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "integer",
              "minimum": 0,
              "maximum": 50,
              "enum": null,
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "upstairs/office/ac/setpoint/set",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "setPower": {
            "title": "AC Power Mode",
            "description": "Set the power mode of the AC unit",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "eco",
                "sleep",
                "full"
              ],
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "upstairs/office/ac/mode/set",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "setFan": {
            "title": "Fan Mode",
            "description": "Set the fan mode of the AC unit",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "off",
                "low",
                "medium",
                "high"
              ],
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "upstairs/office/ac/fan/set",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Air Conditioner",
          "id": "urn:dev:ops:upstairs-office-ac-001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart air conditioner that can be controlled and monitored remotely.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "COOL",
                "OFF",
                "STANDBY",
                "FAN_ONLY"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/status",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "swing": {
              "title": "Swing",
              "description": "The swing mode of the air conditioner",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/swing",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/swing",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "fan": {
              "title": "Fan",
              "description": "The fan mode of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OFF",
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/fan",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "temperature": {
              "title": "Temperature",
              "description": "The current temperature of the air conditioner",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/temp",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/temp",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setpoint": {
              "title": "Setpoint",
              "description": "Set the desired temperature",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/setpoint/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "mode": {
              "title": "Mode",
              "description": "Set the mode of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "eco",
                  "sleep",
                  "full"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/mode/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/mode/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "fan_set": {
              "title": "Fan Set",
              "description": "Set the fan mode of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "off",
                  "low",
                  "medium",
                  "high"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/fan/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart AC",
          "id": "urn:dev:ops:upstairs-office-ac-001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart air conditioner",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the AC",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "COOL",
                "OFF",
                "STANDBY",
                "FAN_ONLY"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/status",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "swing": {
              "title": "Swing",
              "description": "The swing mode of the AC",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/swing",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/swing",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "fan": {
              "title": "Fan",
              "description": "The fan mode of the AC",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OFF",
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/fan",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "temp": {
              "title": "Temperature",
              "description": "The current temperature",
              "observable": null,
              "type": "integer",
              "minimum": 58,
              "maximum": 66,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/temp",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/temp",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setpoint": {
              "title": "Setpoint",
              "description": "Set the temperature setpoint",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 6,
                "maximum": 43,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/setpoint/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "mode": {
              "title": "Mode",
              "description": "Set the mode of the AC",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "eco",
                  "sleep",
                  "full"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/mode/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/mode/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "fan_set": {
              "title": "Fan Set",
              "description": "Set the fan mode",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "off",
                  "low",
                  "medium",
                  "high"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/fan/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Air Conditioner",
          "id": "urn:dev:ops:office-ac-001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart air conditioner that can be controlled and monitored remotely",
          "properties": {
            "status": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "COOL",
                "OFF",
                "STANDBY",
                "FAN_ONLY"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/status",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "swing": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/swing",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/swing",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "fan": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OFF",
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/fan",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "temp": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 58,
              "maximum": 66,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/temp",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/temp",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setpoint": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 6,
                "maximum": 43,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/setpoint/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "mode": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "eco",
                  "sleep",
                  "full"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/mode/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/mode/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "fan_set": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "off",
                  "low",
                  "medium",
                  "high"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/fan/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Air Conditioner",
          "id": "urn:uuid:12345678-1234-1234-1234-123456789012",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart air conditioner that can be controlled and monitored remotely",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "COOL",
                "OFF",
                "STANDBY",
                "FAN_ONLY"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/status",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "swing": {
              "title": "Swing",
              "description": "The swing mode of the air conditioner",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/swing",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/swing",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "fan": {
              "title": "Fan",
              "description": "The fan mode of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OFF",
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/fan",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "temperature": {
              "title": "Temperature",
              "description": "The current temperature of the air conditioner",
              "observable": null,
              "type": "integer",
              "minimum": 58,
              "maximum": 66,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/temp",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/temp",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setpoint": {
              "title": "Setpoint",
              "description": "Set the temperature setpoint of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 6,
                "maximum": 43,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/setpoint/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "mode": {
              "title": "Mode",
              "description": "Set the mode of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "eco",
                  "sleep",
                  "full"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/mode/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/mode/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "fanSet": {
              "title": "Fan Set",
              "description": "Set the fan mode of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "off",
                  "low",
                  "medium",
                  "high"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/fan/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart AC",
          "id": "urn:dev:ops:upstairs-office-ac-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart air conditioner",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the AC",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "COOL",
                "OFF",
                "STANDBY",
                "FAN_ONLY"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/status",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "swing": {
              "title": "Swing",
              "description": "The swing mode of the AC",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/swing",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/swing",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "fan": {
              "title": "Fan",
              "description": "The fan mode of the AC",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OFF",
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/fan",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "temp": {
              "title": "Temperature",
              "description": "The current temperature",
              "observable": null,
              "type": "integer",
              "minimum": 58,
              "maximum": 66,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/temp",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/temp",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setpoint": {
              "title": "Setpoint",
              "description": "Set the desired temperature",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 6,
                "maximum": 43,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/setpoint/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "mode": {
              "title": "Mode",
              "description": "Set the mode of the AC",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "eco",
                  "sleep",
                  "full"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/mode/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/mode/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "fan_set": {
              "title": "Fan Set",
              "description": "Set the fan mode of the AC",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "off",
                  "low",
                  "medium",
                  "high"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/fan/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart AC",
          "id": "urn:dev:ops:upstairs-office-ac",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart AC device",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the AC",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "COOL",
                "OFF",
                "STANDBY",
                "FAN_ONLY"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/status",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "swing": {
              "title": "Swing",
              "description": "The swing status of the AC",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/swing",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/swing",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "fan": {
              "title": "Fan",
              "description": "The fan status of the AC",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OFF",
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/fan",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "temperature": {
              "title": "Temperature",
              "description": "The current temperature of the AC",
              "observable": null,
              "type": "integer",
              "minimum": 58,
              "maximum": 66,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/temp",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/temp",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setpoint": {
              "title": "Setpoint",
              "description": "Set the temperature setpoint of the AC",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 6,
                "maximum": 43,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/setpoint/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "mode": {
              "title": "Mode",
              "description": "Set the mode of the AC",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "eco",
                  "sleep",
                  "full"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/mode/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/mode/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "fan_set": {
              "title": "Fan Set",
              "description": "Set the fan status of the AC",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "off",
                  "low",
                  "medium",
                  "high"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/fan/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Air Conditioner",
          "id": "urn:dev:ops:upstairs-office-ac-001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart air conditioner that can be controlled and monitored remotely",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "COOL",
                "OFF",
                "STANDBY",
                "FAN_ONLY"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/status",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "swing": {
              "title": "Swing",
              "description": "The swing mode of the air conditioner",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/swing",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/swing",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "fan": {
              "title": "Fan",
              "description": "The fan mode of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OFF",
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/fan",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "temperature": {
              "title": "Temperature",
              "description": "The current temperature of the air conditioner",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/temp",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/temp",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setpoint": {
              "title": "Setpoint",
              "description": "Set the desired temperature",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/setpoint/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "mode": {
              "title": "Mode",
              "description": "Set the mode of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "eco",
                  "sleep",
                  "full"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/mode/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/mode/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "fan_set": {
              "title": "Fan Set",
              "description": "Set the fan mode of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "off",
                  "low",
                  "medium",
                  "high"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/fan/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Air Conditioner",
          "id": "urn:dev:ops:upstairs-office-ac",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart air conditioner in the upstairs office",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "COOL",
                "OFF",
                "STANDBY",
                "FAN_ONLY"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "swing": {
              "title": "Swing",
              "description": "The swing mode of the air conditioner",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/swing",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "fan": {
              "title": "Fan",
              "description": "The fan speed of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OFF",
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/fan",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "temperature": {
              "title": "Temperature",
              "description": "The current temperature of the air conditioner",
              "observable": null,
              "type": "integer",
              "minimum": 58,
              "maximum": 66,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/temp",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setpoint": {
              "title": "Setpoint",
              "description": "Set the temperature setpoint of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 6,
                "maximum": 43,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/setpoint/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "mode": {
              "title": "Mode",
              "description": "Set the mode of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "eco",
                  "sleep",
                  "full"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/mode/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "fan_set": {
              "title": "Fan Set",
              "description": "Set the fan speed of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "off",
                  "low",
                  "medium",
                  "high"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/fan/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Air Conditioner",
          "id": "urn:dev:ops:upstairs-office-ac-001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart air conditioner that can be controlled and monitored remotely.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "COOL",
                "OFF",
                "STANDBY",
                "FAN_ONLY"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/status",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "swing": {
              "title": "Swing",
              "description": "The swing mode of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/swing",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/swing",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "fan": {
              "title": "Fan",
              "description": "The fan mode of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OFF",
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/fan",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "temperature": {
              "title": "Temperature",
              "description": "The current temperature of the air conditioner",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/temp",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/temp",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setSetpoint": {
              "title": "Set Setpoint",
              "description": "Set the temperature setpoint of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/setpoint/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setMode": {
              "title": "Set Mode",
              "description": "Set the mode of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "eco",
                  "sleep",
                  "full"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/mode/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/mode/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setFan": {
              "title": "Set Fan",
              "description": "Set the fan mode of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "off",
                  "low",
                  "medium",
                  "high"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/fan/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Air Conditioner",
          "id": "urn:dev:ops:upstairs-office-ac-001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart air conditioner that can be controlled remotely",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "COOL",
                "OFF",
                "STANDBY",
                "FAN_ONLY"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/status",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "swing": {
              "title": "Swing",
              "description": "The swing mode of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/swing",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/swing",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "fan": {
              "title": "Fan",
              "description": "The fan mode of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OFF",
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/fan",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "temperature": {
              "title": "Temperature",
              "description": "The current temperature of the air conditioner",
              "observable": null,
              "type": "integer",
              "minimum": 58,
              "maximum": 66,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/temp",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/temp",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setpoint": {
              "title": "Setpoint",
              "description": "Set the temperature setpoint of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 6,
                "maximum": 43,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/setpoint/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "mode": {
              "title": "Mode",
              "description": "Set the mode of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "eco",
                  "sleep",
                  "full"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/mode/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/mode/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "fanSet": {
              "title": "Fan Set",
              "description": "Set the fan mode of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "off",
                  "low",
                  "medium",
                  "high"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan/set",
                  "contentType": "application/json",
                  "mqv:topic": "upstairs/office/ac/fan/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'upstairs/office/ac/status'; payload: 'UNKNOWN'; retain: 'true'\ntopic: 'upstairs/office/ac/status'; payload: 'COOL'; retain: 'true'\ntopic: 'upstairs/office/ac/status'; payload: 'OFF'; retain: 'true'\ntopic: 'upstairs/office/ac/status'; payload: 'STANDBY'; retain: 'true'\ntopic: 'upstairs/office/ac/status'; payload: 'FAN_ONLY'; retain: 'true'\ntopic: 'upstairs/office/ac/swing'; payload: 'ON'; retain: 'false'\ntopic: 'upstairs/office/ac/swing'; payload: 'OFF'; retain: 'false'\ntopic: 'upstairs/office/ac/fan'; payload: 'OFF'; retain: 'false'\ntopic: 'upstairs/office/ac/fan'; payload: 'LOW'; retain: 'false'\ntopic: 'upstairs/office/ac/fan'; payload: 'MEDIUM'; retain: 'false'\ntopic: 'upstairs/office/ac/fan'; payload: 'HIGH'; retain: 'false'\ntopic: 'upstairs/office/ac/temp'; payload: '58'; retain: 'true'\ntopic: 'upstairs/office/ac/temp'; payload: '64'; retain: 'true'\ntopic: 'upstairs/office/ac/temp'; payload: '66'; retain: 'true'\ntopic: 'upstairs/office/ac/temp'; payload: '7'; retain: 'true'\ntopic: 'upstairs/office/ac/temp'; payload: '11'; retain: 'true'\ntopic: 'upstairs/office/ac/setpoint/ok'; payload: ''; retain: 'false'\ntopic: 'upstairs/office/ac/setpoint/ok'; payload: ''; retain: 'false'\ntopic: 'upstairs/office/ac/setpoint/ok'; payload: ''; retain: 'false'\ntopic: 'upstairs/office/ac/setpoint/ok'; payload: ''; retain: 'false'\ntopic: 'upstairs/office/ac/setpoint/ok'; payload: ''; retain: 'false'\ntopic: 'upstairs/office/ac/setpoint/set'; payload: '6'; retain: 'false'\ntopic: 'upstairs/office/ac/setpoint/set'; payload: '26'; retain: 'false'\ntopic: 'upstairs/office/ac/setpoint/set'; payload: '43'; retain: 'false'\ntopic: 'upstairs/office/ac/setpoint/set'; payload: '32'; retain: 'false'\ntopic: 'upstairs/office/ac/setpoint/set'; payload: '34'; retain: 'false'\ntopic: 'upstairs/office/ac/mode/set'; payload: 'eco'; retain: 'false'\ntopic: 'upstairs/office/ac/mode/set'; payload: 'sleep'; retain: 'false'\ntopic: 'upstairs/office/ac/mode/set'; payload: 'full'; retain: 'false'\ntopic: 'upstairs/office/ac/fan/set'; payload: 'off'; retain: 'false'\ntopic: 'upstairs/office/ac/fan/set'; payload: 'low'; retain: 'false'\ntopic: 'upstairs/office/ac/fan/set'; payload: 'medium'; retain: 'false'\ntopic: 'upstairs/office/ac/fan/set'; payload: 'high'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "SmartSensor",
        "title": "MyIlluminanceSensor",
        "id": "urn:uuid:f63a9095-ae49-43db-a9ce-f620df21b8a6",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "An illuminance Sensor",
        "properties": {
          "status": {
            "title": "Sensor Status",
            "description": "Status of the Sensor",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "unknown",
              "normal",
              "fault"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "application/deviceid/sensor/operation",
                "mqv:retain": false,
                "op": [
                  "observeproperty"
                ]
              }
            ]
          },
          "uptime": {
            "title": "Sensor Uptime",
            "description": "Uptime of the Sensor",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "application/deviceid/sensor/uptime",
                "mqv:retain": true,
                "op": [
                  "observeproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "illuminance": {
            "title": "Illuminance measurement",
            "description": "Illuminance measurement",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "application/deviceid/sensor/illuminance",
                "mqv:retain": true,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "calibrate": {
            "title": "Calibration",
            "description": "Calibration",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ok",
                "error"
              ],
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "application/deviceid/sensor/calibrate",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:deviceid",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that provides sensor data and calibration functionality",
          "properties": {
            "operation": {
              "title": "Operation",
              "description": "The current operation mode of the device",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "normal",
                "fault"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/operation",
                  "contentType": "application/json",
                  "mqv:topic": "application/deviceid/sensor/operation",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "uptime": {
              "title": "Uptime",
              "description": "The current uptime of the device",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/uptime",
                  "contentType": "application/json",
                  "mqv:topic": "application/deviceid/sensor/uptime",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "illuminance": {
              "title": "Illuminance",
              "description": "The current illuminance level",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 1000,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": "application/json",
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "calibrate": {
              "title": "Calibrate",
              "description": "Calibrate the device",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 255,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/calibrate",
                  "contentType": "application/json",
                  "mqv:topic": "application/deviceid/sensor/calibrate",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Sensor",
          "id": "urn:dev:ops:deviceid",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT sensor device",
          "properties": {
            "operation": {
              "title": "Operation",
              "description": "The current operation of the sensor",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "normal",
                "fault"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/operation",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/operation",
                  "mqv:retain": false,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "uptime": {
              "title": "Uptime",
              "description": "The uptime of the sensor",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/uptime",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/uptime",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "illuminance": {
              "title": "Illuminance",
              "description": "The current illuminance measured by the sensor",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "calibrate": {
              "title": "Calibrate",
              "description": "Calibrate the sensor",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/calibrate",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/calibrate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:deviceid",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that provides sensor data and calibration functionality",
          "properties": {
            "operation": {
              "title": "Operation",
              "description": "The current operation mode of the device",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "normal",
                "fault"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/operation",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/operation",
                  "mqv:retain": false,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "uptime": {
              "title": "Uptime",
              "description": "The uptime of the device",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/uptime",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/uptime",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "illuminance": {
              "title": "Illuminance",
              "description": "The current illuminance level",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 1000,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "calibrate": {
              "title": "Calibrate",
              "description": "Calibrate the device",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 255,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/calibrate",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/calibrate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Sensor",
          "id": "urn:dev:ops:deviceid",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT sensor that provides information about its operation, uptime, illuminance, and calibration",
          "properties": {
            "operation": {
              "title": "Operation",
              "description": "The current operation of the sensor",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "normal",
                "fault"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/operation",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/operation",
                  "mqv:retain": false,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "uptime": {
              "title": "Uptime",
              "description": "The uptime of the sensor",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/uptime",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/uptime",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "illuminance": {
              "title": "Illuminance",
              "description": "The current illuminance measured by the sensor",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 1000,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "calibrate": {
              "title": "Calibrate",
              "description": "Calibrate the sensor",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 255,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/calibrate",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/calibrate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Sensor",
          "id": "urn:dev:ops:deviceid",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT sensor that measures illuminance and uptime",
          "properties": {
            "illuminance": {
              "title": "Illuminance",
              "description": "The current illuminance measured by the sensor",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 1000,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "uptime": {
              "title": "Uptime",
              "description": "The current uptime of the sensor",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/uptime",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/uptime",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "calibrate": {
              "title": "Calibrate",
              "description": "Calibrate the sensor",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 255,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/calibrate",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/calibrate",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:deviceid",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that provides sensor data and calibration functionality",
          "properties": {
            "operation": {
              "title": "Operation",
              "description": "The current operation mode of the device",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "normal",
                "fault"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/operation",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/operation",
                  "mqv:retain": false,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "uptime": {
              "title": "Uptime",
              "description": "The uptime of the device",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/uptime",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/uptime",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "illuminance": {
              "title": "Illuminance",
              "description": "The current illuminance level",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 1000,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "calibrate": {
              "title": "Calibrate",
              "description": "Calibrate the device",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 255,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/calibrate",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/calibrate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Sensor",
          "id": "urn:dev:ops:deviceid",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT sensor device",
          "properties": {
            "operation": {
              "title": "Operation",
              "description": "The current operation of the sensor",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "normal",
                "fault"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/operation",
                  "contentType": "application/json",
                  "mqv:topic": "application/deviceid/sensor/operation",
                  "mqv:retain": false,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "uptime": {
              "title": "Uptime",
              "description": "The uptime of the sensor",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/uptime",
                  "contentType": "application/json",
                  "mqv:topic": "application/deviceid/sensor/uptime",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "illuminance": {
              "title": "Illuminance",
              "description": "The current illuminance measured by the sensor",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 1000,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": "application/json",
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "calibrate": {
              "title": "Calibrate",
              "description": "Calibrate the sensor",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 255,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/calibrate",
                  "contentType": "application/json",
                  "mqv:topic": "application/deviceid/sensor/calibrate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:deviceid",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that provides sensor data",
          "properties": {
            "operation": {
              "title": "Operation",
              "description": "The current operation of the device",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "normal",
                "fault"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/operation",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/operation",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "uptime": {
              "title": "Uptime",
              "description": "The uptime of the device",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/uptime",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/uptime",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "illuminance": {
              "title": "Illuminance",
              "description": "The current illuminance",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 1000,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "calibrate": {
              "title": "Calibrate",
              "description": "Calibrate the device",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 255,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/calibrate",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/calibrate",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Sensor",
          "id": "urn:dev:ops:deviceid",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT sensor device that measures various parameters",
          "properties": {
            "operation": {
              "title": "Operation",
              "description": "The current operation mode of the sensor",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "normal",
                "fault"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/operation",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/operation",
                  "mqv:retain": false,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "uptime": {
              "title": "Uptime",
              "description": "The uptime of the sensor",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/uptime",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/uptime",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "illuminance": {
              "title": "Illuminance",
              "description": "The current illuminance measured by the sensor",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "calibrate": {
              "title": "Calibrate",
              "description": "Calibrate the sensor",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/calibrate",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/calibrate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Sensor",
          "id": "urn:dev:ops:deviceid",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT sensor device",
          "properties": {
            "operation": {
              "title": "Operation",
              "description": "The current operation of the sensor",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "normal",
                "fault"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/operation",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/operation",
                  "mqv:retain": false,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "uptime": {
              "title": "Uptime",
              "description": "The uptime of the sensor",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/uptime",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/uptime",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "illuminance": {
              "title": "Illuminance",
              "description": "The current illuminance measured by the sensor",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "calibrate": {
              "title": "Calibrate",
              "description": "Calibrate the sensor",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/calibrate",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/calibrate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'application/deviceid/sensor/operation'; payload: 'unknown'; retain: 'false'\ntopic: 'application/deviceid/sensor/operation'; payload: 'normal'; retain: 'false'\ntopic: 'application/deviceid/sensor/operation'; payload: 'fault'; retain: 'false'\ntopic: 'application/deviceid/sensor/uptime'; payload: '2024-12-18T11:06:53.953441'; retain: 'true'\ntopic: 'application/deviceid/sensor/uptime'; payload: '2024-12-18T11:11:53.953441'; retain: 'true'\ntopic: 'application/deviceid/sensor/uptime'; payload: '2024-12-18T11:16:53.953441'; retain: 'true'\ntopic: 'application/deviceid/sensor/uptime'; payload: '2024-12-18T11:21:53.953441'; retain: 'true'\ntopic: 'application/deviceid/sensor/uptime'; payload: '2024-12-18T11:26:53.953441'; retain: 'true'\ntopic: 'application/deviceid/sensor/illuminance'; payload: '52'; retain: 'true'\ntopic: 'application/deviceid/sensor/illuminance'; payload: '94'; retain: 'true'\ntopic: 'application/deviceid/sensor/illuminance'; payload: '140'; retain: 'true'\ntopic: 'application/deviceid/sensor/illuminance'; payload: '192'; retain: 'true'\ntopic: 'application/deviceid/sensor/illuminance'; payload: '221'; retain: 'true'\ntopic: 'application/deviceid/sensor/calibrate'; payload: '127'; retain: 'false'\ntopic: 'application/deviceid/sensor/calibrate'; payload: '192'; retain: 'false'\ntopic: 'application/deviceid/sensor/calibrate'; payload: '101'; retain: 'false'\ntopic: 'application/deviceid/sensor/calibrate'; payload: '174'; retain: 'false'\ntopic: 'application/deviceid/sensor/calibrate'; payload: '38'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "LawnMower",
        "title": "Lawn Mower",
        "id": "urn:uuid:ad29cf9d-e767-4c45-aff7-7919beb5bedb",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "A smart lawn mower",
        "properties": {
          "activity": {
            "title": "Mower State",
            "description": "The state of the lawn mower",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "UNDOCKED",
              "DOCKED",
              "CHARGING",
              "MOWING"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "lawn_mower_plus/state",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "battery": {
            "title": "Battery",
            "description": "Battery percentage of the lawn mower",
            "observable": true,
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "lawn_mower_plus/state",
                "mqv:retain": true,
                "op": [
                  "observeproperty"
                ]
              }
            ]
          },
          "reachEstimate": {
            "title": "Reach Estimate",
            "description": "Estimated reach in minutes until next recharge",
            "observable": true,
            "type": "integer",
            "minimum": 0,
            "maximum": 250,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "lawn_mower_plus/reach",
                "mqv:retain": true,
                "op": [
                  "observeproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "dock": {
            "title": "Docking State Changed",
            "description": "The docking state has changed",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "DOCKED",
                "UNDOCKED"
              ],
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "lawn_mower_plus/dock/status",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "start": {
            "title": "Start Job",
            "description": "Start the lawn mower job",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "lawn_mower_plus/start",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "pause": {
            "title": "Pause Job",
            "description": "Pause the lawn mower job",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "lawn_mower_plus/pause",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "docked": {
            "title": "Dock lawn mower",
            "description": "Dock the lawn mower",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "lawn_mower_plus/dock",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Lawn Mower Plus",
          "id": "urn:dev:ops:32473-Lawn-Mower-Plus-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lawn mower with various features",
          "properties": {
            "state": {
              "title": "State",
              "description": "The current state of the lawn mower",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNDOCKED",
                "DOCKED",
                "CHARGING",
                "MOWING"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "battery": {
              "title": "Battery",
              "description": "The current battery level",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "reach": {
              "title": "Reach",
              "description": "The current reach of the lawn mower",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 255,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/reach",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/reach",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "dockStatus": {
              "title": "Dock Status",
              "description": "The current dock status of the lawn mower",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DOCKED",
                  "UNDOCKED"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock/status",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock/status",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "start": {
              "title": "Start",
              "description": "Start the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/start",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/start",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "pause": {
              "title": "Pause",
              "description": "Pause the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/pause",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/pause",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "dock": {
              "title": "Dock",
              "description": "Dock the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Lawn Mower Plus",
          "id": "urn:dev:ops:device:lawn-mower-plus-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lawn mower with advanced features",
          "properties": {
            "state": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNDOCKED",
                "DOCKED",
                "CHARGING",
                "MOWING"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "batteryLevel": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "reach": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 255,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/reach",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/reach",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "dockStatus": {
              "title": "",
              "description": "",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock/status",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock/status",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "start": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/start",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/start",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "pause": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/pause",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/pause",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "dock": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Lawn Mower Plus",
          "id": "urn:dev:ops:device:lawn-mower-plus-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT lawn mower",
          "properties": {
            "state": {
              "title": "State",
              "description": "The current state of the lawn mower",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNDOCKED",
                "DOCKED",
                "CHARGING",
                "MOWING"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "battery": {
              "title": "Battery",
              "description": "The current battery level",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "reach": {
              "title": "Reach",
              "description": "The current reach of the lawn mower",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 255,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/reach",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/reach",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "dockStatus": {
              "title": "Dock Status",
              "description": "The current dock status of the lawn mower",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DOCKED",
                  "UNDOCKED"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock/status",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock/status",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "start": {
              "title": "Start",
              "description": "Start the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/start",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/start",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "pause": {
              "title": "Pause",
              "description": "Pause the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/pause",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/pause",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "dock": {
              "title": "Dock",
              "description": "Dock the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Lawn Mower Plus",
          "id": "urn:dev:ops:32473-Lawn-Mower-Plus-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT lawn mower with various features",
          "properties": {
            "state": {
              "title": "State",
              "description": "The current state of the lawn mower",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNDOCKED",
                "DOCKED",
                "CHARGING",
                "MOWING"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "batteryLevel": {
              "title": "Battery Level",
              "description": "The current battery level of the lawn mower",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "reach": {
              "title": "Reach",
              "description": "The current reach of the lawn mower",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 255,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/reach",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/reach",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "dockStatus": {
              "title": "Dock Status",
              "description": "The current dock status of the lawn mower",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DOCKED",
                  "UNDOCKED"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock/status",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/dock/status",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "start": {
              "title": "Start",
              "description": "Start the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/start",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/start",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "pause": {
              "title": "Pause",
              "description": "Pause the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/pause",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/pause",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "dock": {
              "title": "Dock",
              "description": "Dock the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/dock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Lawn Mower Plus",
          "id": "urn:dev:ops:32473-Lawn-Mower-Plus-123456",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lawn mower with advanced features",
          "properties": {
            "state": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNDOCKED",
                "DOCKED",
                "CHARGING",
                "MOWING"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "battery": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "reach": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 255,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/reach",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/reach",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "dockStatus": {
              "title": "Dock status",
              "description": "The current dock status of the lawn mower",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock/status",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/dock/status",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "start": {
              "title": "Start the lawn mower",
              "description": "Start the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/start",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/start",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "pause": {
              "title": "Pause the lawn mower",
              "description": "Pause the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/pause",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/pause",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "dock": {
              "title": "Dock the lawn mower",
              "description": "Dock the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/dock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Lawn Mower Plus",
          "id": "urn:dev:ops:32473-Lawn-Mower-Plus-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lawn mower with various features such as mowing, docking, and charging.",
          "properties": {
            "state": {
              "title": "State",
              "description": "The current state of the lawn mower",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNDOCKED",
                "DOCKED",
                "CHARGING",
                "MOWING"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "battery": {
              "title": "Battery",
              "description": "The current battery level of the lawn mower",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "reach": {
              "title": "Reach",
              "description": "The current reach of the lawn mower",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 255,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/reach",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/reach",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "dockStatus": {
              "title": "Dock Status",
              "description": "The current dock status of the lawn mower",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DOCKED",
                  "UNDOCKED"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock/status",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/dock/status",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "start": {
              "title": "Start",
              "description": "Start the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/start",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/start",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "pause": {
              "title": "Pause",
              "description": "Pause the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/pause",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/pause",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "dock": {
              "title": "Dock",
              "description": "Dock the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/dock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Lawn Mower Plus",
          "id": "urn:dev:ops:lm-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lawn mower with advanced features",
          "properties": {
            "state": {
              "title": "Current State",
              "description": "The current state of the lawn mower",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNDOCKED",
                "DOCKED",
                "CHARGING",
                "MOWING"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "battery": {
              "title": "Battery Level",
              "description": "The current battery level of the lawn mower",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "reach": {
              "title": "Reach",
              "description": "The current reach of the lawn mower",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 255,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/reach",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/reach",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "dockStatus": {
              "title": "Dock Status",
              "description": "The current dock status of the lawn mower",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DOCKED",
                  "UNDOCKED"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock/status",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/dock/status",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "start": {
              "title": "Start Mowing",
              "description": "Start the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/start",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/start",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "pause": {
              "title": "Pause Mowing",
              "description": "Pause the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/pause",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/pause",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "dock": {
              "title": "Dock the Lawn Mower",
              "description": "Dock the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/dock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Lawn Mower Plus",
          "id": "urn:dev:ops:device:lawn_mower_plus",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lawn mower with various features",
          "properties": {
            "state": {
              "title": "State",
              "description": "The current state of the lawn mower",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNDOCKED",
                "DOCKED",
                "CHARGING",
                "MOWING"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "battery": {
              "title": "Battery",
              "description": "The current battery level of the lawn mower",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "reach": {
              "title": "Reach",
              "description": "The current reach of the lawn mower",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 1000,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/reach",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/reach",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "dock_status": {
              "title": "Dock Status",
              "description": "The current dock status of the lawn mower",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DOCKED",
                  "UNDOCKED"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock/status",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock/status",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "start": {
              "title": "Start",
              "description": "Start the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/start",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/start",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "pause": {
              "title": "Pause",
              "description": "Pause the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/pause",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/pause",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "dock": {
              "title": "Dock",
              "description": "Dock the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Lawn Mower Plus",
          "id": "urn:dev:ops:778899",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT lawn mower",
          "properties": {
            "state": {
              "title": "State",
              "description": "The current state of the lawn mower",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNDOCKED",
                "DOCKED",
                "CHARGING",
                "MOWING"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "battery": {
              "title": "Battery",
              "description": "The current battery level of the lawn mower",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "reach": {
              "title": "Reach",
              "description": "The current reach of the lawn mower",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/reach",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/reach",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "dockStatus": {
              "title": "Dock Status",
              "description": "The current dock status of the lawn mower",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DOCKED",
                  "UNDOCKED"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock/status",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock/status",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "start": {
              "title": "Start",
              "description": "Start the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/start",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/start",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "pause": {
              "title": "Pause",
              "description": "Pause the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/pause",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/pause",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "dock": {
              "title": "Dock",
              "description": "Dock the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Lawn Mower Plus",
          "id": "urn:dev:ops:device:lawn_mower_plus",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lawn mower with advanced features",
          "properties": {
            "state": {
              "title": "State",
              "description": "The current state of the lawn mower",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNDOCKED",
                "DOCKED",
                "CHARGING",
                "MOWING"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "battery": {
              "title": "Battery",
              "description": "The current battery level of the lawn mower",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "reach": {
              "title": "Reach",
              "description": "The current reach of the lawn mower",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 255,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/reach",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/reach",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "dock_status": {
              "title": "Dock Status",
              "description": "The current dock status of the lawn mower",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DOCKED",
                  "UNDOCKED"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock/status",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/dock/status",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "start": {
              "title": "Start",
              "description": "Start the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/start",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/start",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "pause": {
              "title": "Pause",
              "description": "Pause the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/pause",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/pause",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "dock": {
              "title": "Dock",
              "description": "Dock the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock",
                  "contentType": "application/json",
                  "mqv:topic": "lawn_mower_plus/dock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'lawn_mower_plus/state'; payload: 'UNDOCKED'; retain: 'true'\ntopic: 'lawn_mower_plus/state'; payload: 'DOCKED'; retain: 'true'\ntopic: 'lawn_mower_plus/state'; payload: 'CHARGING'; retain: 'true'\ntopic: 'lawn_mower_plus/state'; payload: 'MOWING'; retain: 'true'\ntopic: 'lawn_mower_plus/state'; payload: '72'; retain: 'true'\ntopic: 'lawn_mower_plus/state'; payload: '28'; retain: 'true'\ntopic: 'lawn_mower_plus/state'; payload: '97'; retain: 'true'\ntopic: 'lawn_mower_plus/state'; payload: '65'; retain: 'true'\ntopic: 'lawn_mower_plus/state'; payload: '30'; retain: 'true'\ntopic: 'lawn_mower_plus/reach'; payload: '233'; retain: 'true'\ntopic: 'lawn_mower_plus/reach'; payload: '20'; retain: 'true'\ntopic: 'lawn_mower_plus/reach'; payload: '191'; retain: 'true'\ntopic: 'lawn_mower_plus/reach'; payload: '142'; retain: 'true'\ntopic: 'lawn_mower_plus/reach'; payload: '166'; retain: 'true'\ntopic: 'lawn_mower_plus/dock/status'; payload: 'DOCKED'; retain: 'false'\ntopic: 'lawn_mower_plus/dock/status'; payload: 'UNDOCKED'; retain: 'false'\ntopic: 'lawn_mower_plus/start'; payload: 'true'; retain: 'false'\ntopic: 'lawn_mower_plus/start'; payload: 'false'; retain: 'false'\ntopic: 'lawn_mower_plus/start'; payload: 'true'; retain: 'false'\ntopic: 'lawn_mower_plus/start'; payload: 'false'; retain: 'false'\ntopic: 'lawn_mower_plus/pause'; payload: 'true'; retain: 'false'\ntopic: 'lawn_mower_plus/pause'; payload: 'false'; retain: 'false'\ntopic: 'lawn_mower_plus/pause'; payload: 'true'; retain: 'false'\ntopic: 'lawn_mower_plus/pause'; payload: 'false'; retain: 'false'\ntopic: 'lawn_mower_plus/dock'; payload: 'true'; retain: 'false'\ntopic: 'lawn_mower_plus/dock'; payload: 'false'; retain: 'false'\ntopic: 'lawn_mower_plus/dock'; payload: 'true'; retain: 'false'\ntopic: 'lawn_mower_plus/dock'; payload: 'false'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "RGBLightBulb",
        "title": "Dimmable RGB Light Bulb",
        "id": "urn:uuid:3e5c2737-e72a-44f0-a238-6681e2f3ae95",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "An RGB light bulb",
        "properties": {
          "status": {
            "title": "",
            "description": "",
            "observable": null,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "On",
              "Off",
              "Failed"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "application/deviceid/sensor/illuminance",
                "mqv:retain": true,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "events": {},
        "actions": {
          "set": {
            "title": "Brightness RGB channels",
            "description": "Set the brightness",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "r": {
                  "title": "",
                  "description": "Red channel",
                  "observable": null,
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 255,
                  "enum": null,
                  "properties": {}
                },
                "g": {
                  "title": "",
                  "description": "Green channel",
                  "observable": null,
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 255,
                  "enum": null,
                  "properties": {}
                },
                "b": {
                  "title": "",
                  "description": "Blue channel",
                  "observable": null,
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 255,
                  "enum": null,
                  "properties": {}
                }
              }
            },
            "output": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "application/bulb/set",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "power": {
            "title": "Power",
            "description": "Turn the bulb on or off",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "application/bulb/set",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:deviceid",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that can be controlled and monitored remotely",
          "properties": {
            "illuminance": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "On",
                "Off",
                "Failed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": "application/json",
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setBulbColor": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "r": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "g": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "b": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": "application/json",
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setBulbState": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": "application/json",
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:device-id",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device with illuminance sensor and color changing bulb",
          "properties": {
            "illuminance": {
              "title": "Illuminance",
              "description": "The current illuminance level",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "On",
                "Off",
                "Failed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": "application/json",
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setBulbColor": {
              "title": "Set Bulb Color",
              "description": "Set the color of the bulb",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "r": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "g": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "b": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": "application/json",
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setBulbState": {
              "title": "Set Bulb State",
              "description": "Turn the bulb on or off",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": "application/json",
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:deviceid",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that can control illuminance and bulb color",
          "properties": {
            "illuminance": {
              "title": "Illuminance",
              "description": "The current illuminance of the device",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "On",
                "Off",
                "Failed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setBulbColor": {
              "title": "Set Bulb Color",
              "description": "Set the color of the bulb",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "r": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "g": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "b": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setBulbOnOff": {
              "title": "Set Bulb On/Off",
              "description": "Turn the bulb on or off",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Bulb",
          "id": "urn:dev:ops:device:bulb",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart bulb that can be controlled and monitored remotely",
          "properties": {
            "illuminance": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "On",
                "Off",
                "Failed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": "application/json",
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setBulbColor": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "r": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "g": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "b": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": "application/json",
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "toggleBulb": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": "application/json",
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:deviceid",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that can be controlled and monitored",
          "properties": {
            "illuminance": {
              "title": "Illuminance",
              "description": "The current illuminance of the device",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "On",
                "Off",
                "Failed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": "application/json",
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setBulb": {
              "title": "Set Bulb",
              "description": "Set the color of the bulb",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "r": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "g": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "b": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": "application/json",
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "toggleBulb": {
              "title": "Toggle Bulb",
              "description": "Toggle the bulb on or off",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": "application/json",
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:deviceid",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that can be controlled and monitored",
          "properties": {
            "illuminance": {
              "title": "Illuminance",
              "description": "The current illuminance of the device",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "On",
                "Off",
                "Failed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": "application/json",
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setBulb": {
              "title": "Set Bulb",
              "description": "Set the color and state of the bulb",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "r": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "g": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "b": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": "application/json",
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:deviceid",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that can be controlled and monitored",
          "properties": {
            "illuminance": {
              "title": "Illuminance",
              "description": "The current illuminance of the device",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "On",
                "Off",
                "Failed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": "application/json",
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setBulb": {
              "title": "Set Bulb",
              "description": "Set the color of the bulb",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "r": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "g": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "b": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": "application/json",
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:deviceid",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that can be controlled and monitored",
          "properties": {
            "illuminance": {
              "title": "Illuminance",
              "description": "The current illuminance of the device",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "On",
                "Off",
                "Failed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setBulbColor": {
              "title": "Set Bulb Color",
              "description": "Set the color of the bulb",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "r": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "g": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "b": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setBulbState": {
              "title": "Set Bulb State",
              "description": "Set the state of the bulb",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:deviceid",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that can be controlled and monitored",
          "properties": {
            "illuminance": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "On",
                "Off",
                "Failed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setBulbColor": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "r": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": null,
                    "maximum": null,
                    "enum": null,
                    "properties": {}
                  },
                  "g": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": null,
                    "maximum": null,
                    "enum": null,
                    "properties": {}
                  },
                  "b": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": null,
                    "maximum": null,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "setBulbState": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:deviceid",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that can be controlled and monitored",
          "properties": {
            "illuminance": {
              "title": "Illuminance",
              "description": "The current illuminance of the device",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "On",
                "Off",
                "Failed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setBulb": {
              "title": "Set Bulb",
              "description": "Set the color and state of the bulb",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "r": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "g": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "b": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'application/deviceid/sensor/illuminance'; payload: 'On'; retain: 'true'\ntopic: 'application/deviceid/sensor/illuminance'; payload: 'Off'; retain: 'true'\ntopic: 'application/deviceid/sensor/illuminance'; payload: 'Failed'; retain: 'true'\ntopic: 'application/bulb/set'; payload: '{'r': 214, 'g': 154, 'b': 84}'; retain: 'false'\ntopic: 'application/bulb/set'; payload: '{'r': 179, 'g': 189, 'b': 7}'; retain: 'false'\ntopic: 'application/bulb/set'; payload: '{'r': 37, 'g': 116, 'b': 51}'; retain: 'false'\ntopic: 'application/bulb/set'; payload: '{'r': 19, 'g': 130, 'b': 93}'; retain: 'false'\ntopic: 'application/bulb/set'; payload: '{'r': 183, 'g': 198, 'b': 87}'; retain: 'false'\ntopic: 'application/bulb/set'; payload: 'true'; retain: 'false'\ntopic: 'application/bulb/set'; payload: 'false'; retain: 'false'\ntopic: 'application/bulb/set'; payload: 'true'; retain: 'false'\ntopic: 'application/bulb/set'; payload: 'false'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "LightBulb",
        "title": "Dimmable Light Bulb",
        "id": "urn:uuid:e9303dd9-2565-4468-b0e0-106c408959a9",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "A dimmable light bulb",
        "properties": {},
        "events": {},
        "actions": {
          "setBrightness": {
            "title": "Brightness",
            "description": "Set the brightness",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "integer",
              "minimum": 0,
              "maximum": 255,
              "enum": null,
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "application/my_bulb/set",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Bulb",
          "id": "urn:dev:ops:my_bulb-123456789",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart bulb that can be controlled via MQTT",
          "properties": {},
          "events": {},
          "actions": {
            "set": {
              "title": "Set Brightness",
              "description": "Set the brightness of the bulb",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 255,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/my_bulb/set",
                  "contentType": "application/json",
                  "mqv:topic": "application/my_bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "writeproperty"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "My Smart Bulb",
          "id": "urn:dev:ops:my_bulb-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart bulb that can be controlled via MQTT",
          "properties": {
            "brightness": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "integer",
              "minimum": 0,
              "maximum": 255,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "application/my_bulb/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "My Smart Bulb",
          "id": "urn:dev:ops:my_bulb-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart bulb that can be controlled via MQTT",
          "properties": {
            "brightness": {
              "title": "Brightness",
              "description": "The current brightness of the bulb",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 255,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/my_bulb/set",
                  "contentType": "application/json",
                  "mqv:topic": "application/my_bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "readproperty",
                    "writeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "My Bulb",
          "id": "urn:my_bulb:1",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart bulb",
          "properties": {
            "brightness": {
              "title": "Brightness",
              "description": "The brightness of the bulb",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 255,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "application/my_bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "readproperty",
                    "writeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Bulb",
          "id": "urn:dev:ops:my_bulb-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart bulb that can be controlled via MQTT",
          "properties": {
            "brightness": {
              "title": "Brightness",
              "description": "The current brightness of the bulb",
              "observable": true,
              "type": "integer",
              "minimum": 0,
              "maximum": 255,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "application/my_bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "readproperty",
                    "writeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Bulb",
          "id": "urn:dev:ops:my_bulb-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart bulb that can be controlled via MQTT",
          "properties": {
            "brightness": {
              "title": "Brightness",
              "description": "The current brightness of the bulb",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 255,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "application/my_bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setBrightness": {
              "title": "Set Brightness",
              "description": "Set the brightness of the bulb",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 255,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "application/my_bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Bulb",
          "id": "urn:dev:ops:my_bulb-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart bulb that can be controlled via MQTT",
          "properties": {
            "brightness": {
              "title": "",
              "description": "The brightness of the bulb",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 255,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/my_bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/my_bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "writeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "My Smart Bulb",
          "id": "urn:dev:ops:my_bulb-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart bulb that can be controlled via MQTT",
          "properties": {
            "brightness": {
              "title": "Brightness",
              "description": "The current brightness of the bulb",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 255,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/my_bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/my_bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "readproperty",
                    "writeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setBrightness": {
              "title": "Set Brightness",
              "description": "Set the brightness of the bulb",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 255,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/my_bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/my_bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "My Smart Bulb",
          "id": "urn:dev:ops:my_bulb-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart bulb that can be controlled via MQTT",
          "properties": {
            "brightness": {
              "title": "Brightness",
              "description": "The current brightness of the bulb",
              "observable": true,
              "type": "integer",
              "minimum": 0,
              "maximum": 255,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "application/my_bulb/set",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "My Bulb",
          "id": "urn:my_bulb:1",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart bulb",
          "properties": {
            "brightness": {
              "title": "Brightness",
              "description": "The brightness of the bulb",
              "observable": true,
              "type": "integer",
              "minimum": 0,
              "maximum": 255,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/my_bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/my_bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "readproperty",
                    "writeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        }
      ],
      "msg_log": "topic: 'application/my_bulb/set'; payload: '20'; retain: 'false'\ntopic: 'application/my_bulb/set'; payload: '97'; retain: 'false'\ntopic: 'application/my_bulb/set'; payload: '94'; retain: 'false'\ntopic: 'application/my_bulb/set'; payload: '248'; retain: 'false'\ntopic: 'application/my_bulb/set'; payload: '253'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "SmartLock",
        "title": "Lock Back Door",
        "id": "urn:uuid:c21c77f6-5549-4196-923a-b3ffd78e14e6",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "The lock at the back door",
        "properties": {
          "state": {
            "title": "Lock State",
            "description": "The current state of the lock",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "unknown",
              "locked",
              "unlocked",
              "jammed"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "backdoor/lock/state",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "batteryEstimate": {
            "title": "Battery Estimate",
            "description": "Estimate when the battery has to be changed in days",
            "observable": true,
            "type": "number",
            "minimum": 3,
            "maximum": 9999,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "backdoor/lock/state",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "manualOverwrite": {
            "title": "Manual Overwrite",
            "description": "The manual overwrite was activated",
            "data": {
              "title": "",
              "description": "",
              "observable": false,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "backdoor/lock/manualoverwrite",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "lock": {
            "title": "Lock",
            "description": "Lock the backdoor",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOCK"
              ],
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "backdoor/lock/lock",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "unlock": {
            "title": "unlock",
            "description": "Unlock the backdoor via code",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "number",
              "minimum": 0,
              "maximum": 999999,
              "enum": null,
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "backdoor/lock/unlock",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Lock",
          "id": "urn:dev:ops:backdoor-lock-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lock with manual override and locking/unlocking capabilities",
          "properties": {
            "lockState": {
              "title": "Lock State",
              "description": "The current state of the lock",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "locked",
                "unlocked",
                "jammed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "manualOverride": {
              "title": "Manual Override",
              "description": "Override the lock manually",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/manualoverwrite",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/manualoverwrite",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "lock": {
              "title": "Lock",
              "description": "Lock the door",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/lock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/lock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "unlock": {
              "title": "Unlock",
              "description": "Unlock the door",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/unlock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/unlock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Backdoor Lock",
          "id": "urn:dev:ops:backdoor-lock-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lock for the backdoor",
          "properties": {
            "state": {
              "title": "State",
              "description": "The state of the lock",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "locked",
                "unlocked",
                "jammed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "manualoverwrite": {
              "title": "Manual Overwrite",
              "description": "Manually overwrite the lock state",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/manualoverwrite",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/manualoverwrite",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "lock": {
              "title": "Lock",
              "description": "Lock the door",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/lock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/lock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "unlock": {
              "title": "Unlock",
              "description": "Unlock the door",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/unlock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/unlock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Lock",
          "id": "urn:dev:ops:smart-lock-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lock that can be controlled remotely",
          "properties": {
            "lockState": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "locked",
                "unlocked",
                "jammed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "lock": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "backdoor/lock/lock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "unlock": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "backdoor/lock/unlock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "manualOverwrite": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "backdoor/lock/manualoverwrite",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Lock",
          "id": "urn:dev:ops:backdoor-lock-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lock device that can be controlled and monitored remotely.",
          "properties": {
            "lockState": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "locked",
                "unlocked",
                "jammed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "lock": {
              "title": "",
              "description": "Lock the door",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/lock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/lock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "unlock": {
              "title": "",
              "description": "Unlock the door",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/unlock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/unlock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartLock",
          "title": "Backdoor Lock",
          "id": "urn:dev:ops:backdoor-lock-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lock for the backdoor",
          "properties": {
            "state": {
              "title": "Lock State",
              "description": "The current state of the lock",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "locked",
                "unlocked",
                "jammed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "lock": {
              "title": "Lock",
              "description": "Lock the door",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "backdoor/lock/lock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "unlock": {
              "title": "Unlock",
              "description": "Unlock the door",
              "input": {
                "title": "Unlock Code",
                "description": "The code to unlock the door",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "backdoor/lock/unlock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "manualoverwrite": {
              "title": "Manual Overwrite",
              "description": "Manually overwrite the lock state",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "backdoor/lock/manualoverwrite",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Lock",
          "id": "urn:dev:ops:backdoor-lock-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT lock device",
          "properties": {
            "state": {
              "title": "Lock State",
              "description": "The current state of the lock",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "locked",
                "unlocked",
                "jammed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "lock": {
              "title": "Lock",
              "description": "Lock the door",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/lock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/lock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "unlock": {
              "title": "Unlock",
              "description": "Unlock the door",
              "input": {
                "title": "Unlock Code",
                "description": "The code to unlock the door",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/unlock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/unlock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "manualoverwrite": {
              "title": "Manual Overwrite",
              "description": "Manually overwrite the lock state",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/manualoverwrite",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/manualoverwrite",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Lock",
          "id": "urn:dev:ops:backdoor-lock-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lock device that can be controlled and monitored remotely",
          "properties": {
            "lockState": {
              "title": "Lock State",
              "description": "The current state of the lock",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "locked",
                "unlocked",
                "jammed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": "application/json",
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "manualOverwrite": {
              "title": "Manual Overwrite",
              "description": "Overwrite the current lock state manually",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/manualoverwrite",
                  "contentType": "application/json",
                  "mqv:topic": "backdoor/lock/manualoverwrite",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "lock": {
              "title": "Lock",
              "description": "Lock the door",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/lock",
                  "contentType": "application/json",
                  "mqv:topic": "backdoor/lock/lock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "unlock": {
              "title": "Unlock",
              "description": "Unlock the door",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/unlock",
                  "contentType": "application/json",
                  "mqv:topic": "backdoor/lock/unlock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Lock",
          "id": "urn:dev:ops:backdoor-lock-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lock that can be controlled and monitored remotely",
          "properties": {
            "state": {
              "title": "Lock State",
              "description": "The current state of the lock",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "locked",
                "unlocked",
                "jammed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "lock": {
              "title": "Lock",
              "description": "Lock the door",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/lock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "unlock": {
              "title": "Unlock",
              "description": "Unlock the door",
              "input": {
                "title": "Unlock Code",
                "description": "The code to unlock the door",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/unlock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "manualoverwrite": {
              "title": "Manual Overwrite",
              "description": "Manually overwrite the lock state",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/manualoverwrite",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Lock",
          "id": "urn:dev:ops:smart-lock-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lock that can be controlled and monitored remotely",
          "properties": {
            "lockState": {
              "title": "Lock State",
              "description": "The current state of the lock",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "locked",
                "unlocked",
                "jammed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "lockValue": {
              "title": "Lock Value",
              "description": "The current value of the lock",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "manualOverwrite": {
              "title": "Manual Overwrite",
              "description": "Overwrite the current state of the lock",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/manualoverwrite",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/manualoverwrite",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "lock": {
              "title": "Lock",
              "description": "Lock the door",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/lock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/lock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "unlock": {
              "title": "Unlock",
              "description": "Unlock the door",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/unlock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/unlock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Backdoor Lock",
          "id": "urn:dev:ops:backdoor-lock-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lock for the backdoor",
          "properties": {
            "state": {
              "title": "State",
              "description": "The current state of the lock",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "locked",
                "unlocked",
                "jammed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "manualoverwrite": {
              "title": "Manual Overwrite",
              "description": "Overwrite the current state of the lock",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/manualoverwrite",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/manualoverwrite",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "lock": {
              "title": "Lock",
              "description": "Lock the backdoor",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/lock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/lock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "unlock": {
              "title": "Unlock",
              "description": "Unlock the backdoor",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/unlock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/unlock",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'backdoor/lock/state'; payload: 'unknown'; retain: 'true'\ntopic: 'backdoor/lock/state'; payload: 'locked'; retain: 'true'\ntopic: 'backdoor/lock/state'; payload: 'unlocked'; retain: 'true'\ntopic: 'backdoor/lock/state'; payload: 'jammed'; retain: 'true'\ntopic: 'backdoor/lock/state'; payload: '5419.767'; retain: 'true'\ntopic: 'backdoor/lock/state'; payload: '6858.113'; retain: 'true'\ntopic: 'backdoor/lock/state'; payload: '3329.146'; retain: 'true'\ntopic: 'backdoor/lock/state'; payload: '279.268'; retain: 'true'\ntopic: 'backdoor/lock/state'; payload: '9022.124'; retain: 'true'\ntopic: 'backdoor/lock/manualoverwrite'; payload: ''; retain: 'false'\ntopic: 'backdoor/lock/manualoverwrite'; payload: ''; retain: 'false'\ntopic: 'backdoor/lock/manualoverwrite'; payload: ''; retain: 'false'\ntopic: 'backdoor/lock/manualoverwrite'; payload: ''; retain: 'false'\ntopic: 'backdoor/lock/manualoverwrite'; payload: ''; retain: 'false'\ntopic: 'backdoor/lock/lock'; payload: 'LOCK'; retain: 'false'\ntopic: 'backdoor/lock/unlock'; payload: '455606.351'; retain: 'false'\ntopic: 'backdoor/lock/unlock'; payload: '694562.574'; retain: 'false'\ntopic: 'backdoor/lock/unlock'; payload: '547096.441'; retain: 'false'\ntopic: 'backdoor/lock/unlock'; payload: '589154.835'; retain: 'false'\ntopic: 'backdoor/lock/unlock'; payload: '442139.019'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "SmartMeter",
        "title": "Smart Meter",
        "id": "urn:uuid:40ad5274-50de-45cb-b002-4207a3a59e11",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "A Smart Meter",
        "properties": {
          "status": {
            "title": "Status",
            "description": "Status of the SM",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "OK",
              "ERROR"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "smart_meter/status",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "current": {
            "title": "Current",
            "description": "Current of the L1, L2 and L3",
            "observable": true,
            "type": "object",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {
              "L1": {
                "title": "",
                "description": "Current of L1",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "L2": {
                "title": "",
                "description": "Current of L2",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "L3": {
                "title": "",
                "description": "Current of L3",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              }
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "smart_meter/current",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "power": {
            "title": "Power",
            "description": "Current power consumption of charger",
            "observable": true,
            "type": "number",
            "minimum": -9000,
            "maximum": 9000,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "smart_meter/power",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "energyTotal": {
            "title": "Total Energy",
            "description": "The total energy consumption measured by the SM",
            "observable": true,
            "type": "number",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "smart_meter/power/total",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "energyToday": {
            "title": "Total Energy",
            "description": "The total daily energy consumption measured by the SM",
            "observable": true,
            "type": "number",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "smart_meter/power/today",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "energyFifteenMin": {
            "title": "Total Energy",
            "description": "The energy consumption measured by the SM in the last 15 min",
            "observable": true,
            "type": "number",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "smart_meter/power/15min",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {},
        "actions": {}
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:dev:ops:smart-meter-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that measures and reports energy consumption",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current energy consumption in watts",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "L1",
                  "description": "The current energy consumption on phase L1",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "L2",
                  "description": "The current energy consumption on phase L2",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "L3",
                  "description": "The current energy consumption on phase L3",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The current power consumption in watts",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power_total": {
              "title": "Power Total",
              "description": "The total power consumption in watt-hours",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/total",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/power/total",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power_today": {
              "title": "Power Today",
              "description": "The power consumption today in watt-hours",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/today",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/power/today",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power_15min": {
              "title": "Power 15min",
              "description": "The power consumption in the last 15 minutes in watt-hours",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/15min",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/power/15min",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:dev:ops:smart-meter-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that measures and reports energy consumption",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": null,
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current energy consumption in watts",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "L1",
                  "description": "The current energy consumption on phase L1",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "L2",
                  "description": "The current energy consumption on phase L2",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "L3",
                  "description": "The current energy consumption on phase L3",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": null,
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The current power consumption in watts",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power_total": {
              "title": "Power Total",
              "description": "The total energy consumption in watt-hours",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/total",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/total",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power_today": {
              "title": "Power Today",
              "description": "The energy consumption today in watt-hours",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/today",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/today",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power_15min": {
              "title": "Power 15min",
              "description": "The energy consumption in the last 15 minutes in watt-hours",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/15min",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/15min",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:dev:ops:smart-meter-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter for measuring power consumption",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The status of the smart meter",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": null,
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current power consumption",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "L1",
                  "description": "The current power consumption on phase L1",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "L2",
                  "description": "The current power consumption on phase L2",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "L3",
                  "description": "The current power consumption on phase L3",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": null,
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The current power consumption",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power_total": {
              "title": "Power Total",
              "description": "The total power consumption",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/total",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/total",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power_today": {
              "title": "Power Today",
              "description": "The power consumption today",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/today",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/today",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power_15min": {
              "title": "Power 15min",
              "description": "The power consumption in the last 15 minutes",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/15min",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/15min",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:dev:ops:smart-meter-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that measures and reports energy consumption",
          "properties": {
            "status": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": null,
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": null,
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power_total": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/total",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/total",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power_today": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/today",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/today",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power_15min": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/15min",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/15min",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:dev:ops:smart-meter-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that measures and reports energy consumption",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current energy consumption in watts",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "L1",
                  "description": "The current energy consumption on phase L1",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "L2",
                  "description": "The current energy consumption on phase L2",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "L3",
                  "description": "The current energy consumption on phase L3",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The current power consumption in watts",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "powerTotal": {
              "title": "Power Total",
              "description": "The total energy consumption in watt-hours",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/total",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/power/total",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "powerToday": {
              "title": "Power Today",
              "description": "The energy consumption today in watt-hours",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/today",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/power/today",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power15min": {
              "title": "Power 15min",
              "description": "The energy consumption in the last 15 minutes in watt-hours",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/15min",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/power/15min",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:dev:ops:smart-meter-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that measures and reports energy consumption",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current energy consumption in watts",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "L1",
                  "description": "The current energy consumption on phase L1",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "L2",
                  "description": "The current energy consumption on phase L2",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "L3",
                  "description": "The current energy consumption on phase L3",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The current power consumption in watts",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power_total": {
              "title": "Power Total",
              "description": "The total energy consumption in watt-hours",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/total",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/power/total",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power_today": {
              "title": "Power Today",
              "description": "The energy consumption today in watt-hours",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/today",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/power/today",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power_15min": {
              "title": "Power 15min",
              "description": "The energy consumption in the last 15 minutes in watt-hours",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/15min",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/power/15min",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:dev:ops:smart-meter-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that measures and reports energy consumption",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current energy consumption in watts",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "L1",
                  "description": "The current energy consumption on phase L1",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "L2",
                  "description": "The current energy consumption on phase L2",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "L3",
                  "description": "The current energy consumption on phase L3",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The current power consumption in watts",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "powerTotal": {
              "title": "Power Total",
              "description": "The total energy consumption in watt-hours",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/total",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/power/total",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "powerToday": {
              "title": "Power Today",
              "description": "The energy consumption today in watt-hours",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/today",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/power/today",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power15min": {
              "title": "Power 15min",
              "description": "The energy consumption in the last 15 minutes in watt-hours",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/15min",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/power/15min",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:dev:ops:smart-meter-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that measures and reports energy consumption",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current energy consumption in Watts",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "L1",
                  "description": "The current energy consumption on phase L1",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "L2",
                  "description": "The current energy consumption on phase L2",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "L3",
                  "description": "The current energy consumption on phase L3",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The current power consumption in Watts",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "powerTotal": {
              "title": "Power Total",
              "description": "The total energy consumption in kWh",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/total",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/power/total",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "powerToday": {
              "title": "Power Today",
              "description": "The energy consumption today in kWh",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/today",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/power/today",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power15min": {
              "title": "Power 15min",
              "description": "The energy consumption in the last 15 minutes in kWh",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/15min",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/power/15min",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Meter",
          "id": "urn:dev:ops:smart-meter-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that measures and reports energy consumption",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": null,
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current energy consumption in watts",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "L1",
                  "description": "The current energy consumption on phase L1",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "L2",
                  "description": "The current energy consumption on phase L2",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "L3",
                  "description": "The current energy consumption on phase L3",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": null,
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The current power consumption in watts",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "powerTotal": {
              "title": "Power Total",
              "description": "The total energy consumption in watt-hours",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/total",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/total",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "powerToday": {
              "title": "Power Today",
              "description": "The energy consumption today in watt-hours",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/today",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/today",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power15min": {
              "title": "Power 15min",
              "description": "The energy consumption in the last 15 minutes in watt-hours",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/15min",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/15min",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Meter",
          "id": "urn:dev:ops:smart-meter-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that measures and reports energy consumption",
          "properties": {
            "status": {
              "title": "",
              "description": "The current status of the smart meter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "",
              "description": "The current energy consumption in watts",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "The current energy consumption on phase 1",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "The current energy consumption on phase 2",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "The current energy consumption on phase 3",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "",
              "description": "The current power consumption in watts",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power_total": {
              "title": "",
              "description": "The total energy consumption in watt-hours",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/total",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/power/total",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power_today": {
              "title": "",
              "description": "The energy consumption today in watt-hours",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/today",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/power/today",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power_15min": {
              "title": "",
              "description": "The energy consumption in the last 15 minutes in watt-hours",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/15min",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/power/15min",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        }
      ],
      "msg_log": "topic: 'smart_meter/status'; payload: 'OK'; retain: 'true'\ntopic: 'smart_meter/status'; payload: 'ERROR'; retain: 'true'\ntopic: 'smart_meter/current'; payload: '{'L1': 15.938, 'L2': 3.04, 'L3': 10.262}'; retain: 'true'\ntopic: 'smart_meter/current'; payload: '{'L1': 11.228, 'L2': 3.886, 'L3': 9.277}'; retain: 'true'\ntopic: 'smart_meter/current'; payload: '{'L1': 8.598, 'L2': 7.945, 'L3': 1.07}'; retain: 'true'\ntopic: 'smart_meter/current'; payload: '{'L1': 7.293, 'L2': 12.376, 'L3': 1.228}'; retain: 'true'\ntopic: 'smart_meter/current'; payload: '{'L1': 8.631, 'L2': 4.767, 'L3': 0.938}'; retain: 'true'\ntopic: 'smart_meter/power'; payload: '3424.252'; retain: 'true'\ntopic: 'smart_meter/power'; payload: '-6795.734'; retain: 'true'\ntopic: 'smart_meter/power'; payload: '-6293.09'; retain: 'true'\ntopic: 'smart_meter/power'; payload: '-7656.958'; retain: 'true'\ntopic: 'smart_meter/power'; payload: '3864.419'; retain: 'true'\ntopic: 'smart_meter/power/total'; payload: '182.08'; retain: 'true'\ntopic: 'smart_meter/power/total'; payload: '67.128'; retain: 'true'\ntopic: 'smart_meter/power/total'; payload: '3.772'; retain: 'true'\ntopic: 'smart_meter/power/total'; payload: '70.855'; retain: 'true'\ntopic: 'smart_meter/power/total'; payload: '153.172'; retain: 'true'\ntopic: 'smart_meter/power/today'; payload: '122.414'; retain: 'true'\ntopic: 'smart_meter/power/today'; payload: '171.513'; retain: 'true'\ntopic: 'smart_meter/power/today'; payload: '203.595'; retain: 'true'\ntopic: 'smart_meter/power/today'; payload: '104.508'; retain: 'true'\ntopic: 'smart_meter/power/today'; payload: '228.619'; retain: 'true'\ntopic: 'smart_meter/power/15min'; payload: '75.346'; retain: 'true'\ntopic: 'smart_meter/power/15min'; payload: '106.235'; retain: 'true'\ntopic: 'smart_meter/power/15min'; payload: '198.516'; retain: 'true'\ntopic: 'smart_meter/power/15min'; payload: '243.726'; retain: 'true'\ntopic: 'smart_meter/power/15min'; payload: '82.841'; retain: 'true'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "SmartMeter",
        "title": "Smart Meter",
        "id": "urn:uuid:de06e393-c7ed-473e-ae20-6a38a4798680",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "A Smart Meter",
        "properties": {
          "status": {
            "title": "Status",
            "description": "Status of the SM",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "OK",
              "ERROR"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "smart_meter/status",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "current": {
            "title": "Current",
            "description": "Current of the L1, L2 and L3",
            "observable": true,
            "type": "object",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {
              "L1": {
                "title": "",
                "description": "Current of L1",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "L2": {
                "title": "",
                "description": "Current of L2",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "L3": {
                "title": "",
                "description": "Current of L3",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              }
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "smart_meter/current",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "power": {
            "title": "Power",
            "description": "Current power consumption of charger",
            "observable": true,
            "type": "object",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {
              "total": {
                "title": "Total Energy",
                "description": "The total energy consumption measured by the SM",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "today": {
                "title": "Total Energy",
                "description": "The total daily energy consumption measured by the SM",
                "observable": true,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "now": {
                "title": "Total Energy",
                "description": "The energy consumption measured by the SM in the last 15 min",
                "observable": true,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              }
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "smart_meter/power",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {},
        "actions": {}
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:dev:ops:smart-meter-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that measures energy consumption",
          "properties": {
            "status": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "Total": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Today": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Now": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:dev:ops:smart-meter-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that measures and reports energy consumption",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current energy consumption in watts",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "L1",
                  "description": "The current energy consumption on phase L1",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "L2",
                  "description": "The current energy consumption on phase L2",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "L3",
                  "description": "The current energy consumption on phase L3",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The total, today's, and current power consumption",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "Total": {
                  "title": "Total",
                  "description": "The total power consumption",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Today": {
                  "title": "Today",
                  "description": "Today's power consumption",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Now": {
                  "title": "Now",
                  "description": "The current power consumption",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Meter",
          "id": "urn:dev:ops:smart-meter-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that measures and reports energy consumption",
          "properties": {
            "status": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "Total": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Today": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Now": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:dev:ops:smart-meter-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that measures and reports energy consumption",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The status of the smart meter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current energy consumption",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "L1",
                  "description": "The current energy consumption on phase L1",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "L2",
                  "description": "The current energy consumption on phase L2",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "L3",
                  "description": "The current energy consumption on phase L3",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power consumption",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "Total": {
                  "title": "Total",
                  "description": "The total power consumption",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Today": {
                  "title": "Today",
                  "description": "The power consumption today",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Now": {
                  "title": "Now",
                  "description": "The current power consumption",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:dev:ops:smart-meter-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that measures and reports energy consumption",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current energy consumption in watts",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "L1",
                  "description": "The current energy consumption on phase L1",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "L2",
                  "description": "The current energy consumption on phase L2",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "L3",
                  "description": "The current energy consumption on phase L3",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The total energy consumption in watt-hours",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "Total": {
                  "title": "Total",
                  "description": "The total energy consumption",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Today": {
                  "title": "Today",
                  "description": "The energy consumption today",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Now": {
                  "title": "Now",
                  "description": "The current energy consumption",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:dev:ops:smart-meter-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that measures and reports energy consumption",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current energy consumption",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "L1",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "L2",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "L3",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The total, today's and current power consumption",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "Total": {
                  "title": "Total",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Today": {
                  "title": "Today",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Now": {
                  "title": "Now",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:dev:ops:smart-meter-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that measures and reports energy consumption",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current energy consumption in watts",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "L1",
                  "description": "The current energy consumption on phase L1",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "L2",
                  "description": "The current energy consumption on phase L2",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "L3",
                  "description": "The current energy consumption on phase L3",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The total energy consumption in watt-hours",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "Total": {
                  "title": "Total",
                  "description": "The total energy consumption",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Today": {
                  "title": "Today",
                  "description": "The energy consumption today",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Now": {
                  "title": "Now",
                  "description": "The current energy consumption",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:dev:ops:smart-meter-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that measures current and power consumption",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current consumption of the smart meter",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "L1",
                  "description": "The current consumption of phase L1",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "L2",
                  "description": "The current consumption of phase L2",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "L3",
                  "description": "The current consumption of phase L3",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power consumption of the smart meter",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "Total": {
                  "title": "Total",
                  "description": "The total power consumption",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Today": {
                  "title": "Today",
                  "description": "The power consumption today",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Now": {
                  "title": "Now",
                  "description": "The current power consumption",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:dev:ops:smart-meter-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that measures and reports energy consumption",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The status of the smart meter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current energy consumption",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "L1",
                  "description": "The current energy consumption on phase L1",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "L2",
                  "description": "The current energy consumption on phase L2",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "L3",
                  "description": "The current energy consumption on phase L3",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power consumption",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "Total": {
                  "title": "Total",
                  "description": "The total power consumption",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Today": {
                  "title": "Today",
                  "description": "The power consumption today",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Now": {
                  "title": "Now",
                  "description": "The current power consumption",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:dev:ops:smart-meter-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that measures and reports energy consumption",
          "properties": {
            "status": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "text/plain",
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "Total": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Today": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Now": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        }
      ],
      "msg_log": "topic: 'smart_meter/status'; payload: 'OK'; retain: 'true'\ntopic: 'smart_meter/status'; payload: 'ERROR'; retain: 'true'\ntopic: 'smart_meter/current'; payload: '{'L1': 2.749, 'L2': 9.818, 'L3': 11.424}'; retain: 'true'\ntopic: 'smart_meter/current'; payload: '{'L1': 3.385, 'L2': 11.167, 'L3': 3.462}'; retain: 'true'\ntopic: 'smart_meter/current'; payload: '{'L1': 4.705, 'L2': 12.328, 'L3': 14.607}'; retain: 'true'\ntopic: 'smart_meter/current'; payload: '{'L1': 9.889, 'L2': 10.038, 'L3': 4.599}'; retain: 'true'\ntopic: 'smart_meter/current'; payload: '{'L1': 11.091, 'L2': 14.384, 'L3': 0.377}'; retain: 'true'\ntopic: 'smart_meter/power'; payload: '{'Total': 2466.553, 'Today': 155.059, 'Now': 2.604}'; retain: 'true'\ntopic: 'smart_meter/power'; payload: '{'Total': 586.79, 'Today': 224.388, 'Now': 1.649}'; retain: 'true'\ntopic: 'smart_meter/power'; payload: '{'Total': 620.342, 'Today': 274.324, 'Now': 0.234}'; retain: 'true'\ntopic: 'smart_meter/power'; payload: '{'Total': 2626.274, 'Today': 283.248, 'Now': 1.134}'; retain: 'true'\ntopic: 'smart_meter/power'; payload: '{'Total': 2391.766, 'Today': 111.964, 'Now': 1.791}'; retain: 'true'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "PhotovoltaicInverter",
        "title": "PV Inverter",
        "id": "urn:uuid:1198aaed-ac5a-4fc7-b2bc-340f1b24bc66",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "A Photovoltaic Inverter",
        "properties": {
          "inverterStatus": {
            "title": "Invert Status",
            "description": "Status of the PV inverter",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "00-On sector",
              "01-Power failure / On battery",
              "02-Loss of communication",
              "03-Battery fault",
              "04-System shutdown",
              "05-Tension dip",
              "06-Overvoltage",
              "07-Voltage drop",
              "08-Voltage increase",
              "09-Line noise",
              "10-Frequency variation",
              "11-Transient distortion",
              "12-Harmonic distortion"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "cellar/inverter/status",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "current": {
            "title": "Current",
            "description": "Current current of the L1, L2 and L3",
            "observable": true,
            "type": "object",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {
              "L1": {
                "title": "",
                "description": "Current of L1",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "L2": {
                "title": "",
                "description": "Current of L2",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "L3": {
                "title": "",
                "description": "Current of L3",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              }
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "cellar/inverter/current",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "activePower": {
            "title": "Active Power",
            "description": "Active Power running through the inverter",
            "observable": true,
            "type": "number",
            "minimum": 0,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "cellar/inverter/active_power",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "reactivePower": {
            "title": "Reactive Power",
            "description": "Reactive Power running through the inverter",
            "observable": true,
            "type": "number",
            "minimum": 0,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "cellar/inverter/reactive_power",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "temperature": {
            "title": "Temperature PV Inverter",
            "description": "Internal temperature of PV inverter",
            "observable": true,
            "type": "number",
            "minimum": 0,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "cellar/inverter/temperature",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "enabled": {
            "title": "Inverter Enabled",
            "description": "The inverter was enabled",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "cellar/inverter/temperature",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          },
          "error": {
            "title": "Error Event",
            "description": "An error has been encountered",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "cellar/inverter/error",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "turnOn": {
            "title": "Enable Inverter",
            "description": "Turn on the Inverter",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ON",
                "OFF",
                "0",
                "1"
              ],
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "cellar/inverter/cmnd",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Inverter",
          "id": "urn:dev:ops:cellar-inverter-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart inverter for monitoring and controlling energy production",
          "properties": {
            "status": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "00-On sector",
                "01-Power failure / On battery",
                "02-Loss of communication",
                "03-Battery fault",
                "04-System shutdown",
                "05-Tension dip",
                "06-Overvoltage",
                "07-Voltage drop",
                "08-Voltage increase",
                "09-Line noise",
                "10-Frequency variation",
                "11-Transient distortion",
                "12-Harmonic distortion"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/status",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/current",
                  "contentType": "application/json",
                  "mqv:topic": "cellar/inverter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "active_power": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/active_power",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/active_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "reactive_power": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/reactive_power",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/reactive_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "temperature": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/temperature",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/temperature",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "error": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/error",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/error",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "cmnd": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "ON",
                  "OFF",
                  "0",
                  "1"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Inverter",
          "id": "urn:dev:ops:cellar-inverter-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart inverter that provides real-time data and control",
          "properties": {
            "status": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "00-On sector",
                "01-Power failure / On battery",
                "02-Loss of communication",
                "03-Battery fault",
                "04-System shutdown",
                "05-Tension dip",
                "06-Overvoltage",
                "07-Voltage drop",
                "08-Voltage increase",
                "09-Line noise",
                "10-Frequency variation",
                "11-Transient distortion",
                "12-Harmonic distortion"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/status",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/current",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "active_power": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/active_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/active_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "reactive_power": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/reactive_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/reactive_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "temperature": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/temperature",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/temperature",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "error": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/error",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/error",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "turn_on": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "ON"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "turn_off": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OFF"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Inverter",
          "id": "urn:dev:ops:cellar-inverter-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart inverter that provides real-time monitoring and control of energy usage",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the inverter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "00-On sector",
                "01-Power failure / On battery",
                "02-Loss of communication",
                "03-Battery fault",
                "04-System shutdown",
                "05-Tension dip",
                "06-Overvoltage",
                "07-Voltage drop",
                "08-Voltage increase",
                "09-Line noise",
                "10-Frequency variation",
                "11-Transient distortion",
                "12-Harmonic distortion"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/status",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current energy usage of the inverter",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "L1",
                  "description": "The current energy usage of phase L1",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "L2",
                  "description": "The current energy usage of phase L2",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "L3",
                  "description": "The current energy usage of phase L3",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/current",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "active_power": {
              "title": "Active Power",
              "description": "The active power usage of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/active_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/active_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "reactive_power": {
              "title": "Reactive Power",
              "description": "The reactive power usage of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/reactive_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/reactive_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "temperature": {
              "title": "Temperature",
              "description": "The temperature of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/temperature",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/temperature",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "error": {
              "title": "Error",
              "description": "Any error messages from the inverter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/error",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/error",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "turn_on": {
              "title": "Turn On",
              "description": "Turn on the inverter",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "ON"
                  ]
                }
              ]
            },
            "turn_off": {
              "title": "Turn Off",
              "description": "Turn off the inverter",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "OFF"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Inverter",
          "id": "urn:dev:ops:cellar-inverter-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart inverter device",
          "properties": {
            "status": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "00-On sector",
                "01-Power failure / On battery",
                "02-Loss of communication",
                "03-Battery fault",
                "04-System shutdown",
                "05-Tension dip",
                "06-Overvoltage",
                "07-Voltage drop",
                "08-Voltage increase",
                "09-Line noise",
                "10-Frequency variation",
                "11-Transient distortion",
                "12-Harmonic distortion"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/status",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/current",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "active_power": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/active_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/active_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "reactive_power": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/reactive_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/reactive_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "temperature": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/temperature",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/temperature",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "error": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/error",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/error",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "cmnd": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "ON",
                  "OFF",
                  "0",
                  "1"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Inverter",
          "id": "urn:dev:ops:cellar-inverter-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart inverter that monitors and controls energy production",
          "properties": {
            "status": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "00-On sector",
                "01-Power failure / On battery",
                "02-Loss of communication",
                "03-Battery fault",
                "04-System shutdown",
                "05-Tension dip",
                "06-Overvoltage",
                "07-Voltage drop",
                "08-Voltage increase",
                "09-Line noise",
                "10-Frequency variation",
                "11-Transient distortion",
                "12-Harmonic distortion"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/status",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/current",
                  "contentType": "application/json",
                  "mqv:topic": "cellar/inverter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "active_power": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/active_power",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/active_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "reactive_power": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/reactive_power",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/reactive_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "temperature": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/temperature",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/temperature",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "error": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/error",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/error",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "cmnd": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "ON",
                  "OFF",
                  "0",
                  "1"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Cellar Inverter",
          "id": "urn:dev:ops:cellar-inverter-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart inverter for cellar",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The status of the inverter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "00-On sector",
                "01-Power failure / On battery",
                "02-Loss of communication",
                "03-Battery fault",
                "04-System shutdown",
                "05-Tension dip",
                "06-Overvoltage",
                "07-Voltage drop",
                "08-Voltage increase",
                "09-Line noise",
                "10-Frequency variation",
                "11-Transient distortion",
                "12-Harmonic distortion"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/status",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current of the inverter",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "L1",
                  "description": "The current of L1",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "L2",
                  "description": "The current of L2",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "L3",
                  "description": "The current of L3",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/current",
                  "contentType": "application/json",
                  "mqv:topic": "cellar/inverter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "active_power": {
              "title": "Active Power",
              "description": "The active power of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/active_power",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/active_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "reactive_power": {
              "title": "Reactive Power",
              "description": "The reactive power of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/reactive_power",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/reactive_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "temperature": {
              "title": "Temperature",
              "description": "The temperature of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/temperature",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/temperature",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "error": {
              "title": "Error",
              "description": "The error of the inverter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/error",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/error",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "turn_on": {
              "title": "Turn On",
              "description": "Turn on the inverter",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "ON"
                  ]
                }
              ]
            },
            "turn_off": {
              "title": "Turn Off",
              "description": "Turn off the inverter",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "OFF"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Cellar Inverter",
          "id": "urn:dev:ops:cellar-inverter-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart inverter for monitoring and controlling energy usage in a cellar",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the inverter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "00-On sector",
                "01-Power failure / On battery",
                "02-Loss of communication",
                "03-Battery fault",
                "04-System shutdown",
                "05-Tension dip",
                "06-Overvoltage",
                "07-Voltage drop",
                "08-Voltage increase",
                "09-Line noise",
                "10-Frequency variation",
                "11-Transient distortion",
                "12-Harmonic distortion"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/status",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current energy usage of the inverter",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "L1",
                  "description": "The current energy usage of phase L1",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "L2",
                  "description": "The current energy usage of phase L2",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "L3",
                  "description": "The current energy usage of phase L3",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/current",
                  "contentType": "application/json",
                  "mqv:topic": "cellar/inverter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "active_power": {
              "title": "Active Power",
              "description": "The active power usage of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/active_power",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/active_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "reactive_power": {
              "title": "Reactive Power",
              "description": "The reactive power usage of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/reactive_power",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/reactive_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "temperature": {
              "title": "Temperature",
              "description": "The temperature of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/temperature",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/temperature",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "error": {
              "title": "Error",
              "description": "Any error messages from the inverter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/error",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/error",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "cmnd": {
              "title": "Command",
              "description": "Send a command to the inverter",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "ON",
                  "OFF",
                  "0",
                  "1"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Cellar Inverter",
          "id": "urn:dev:ops:cellar-inverter-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart inverter for cellar",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The status of the inverter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "00-On sector",
                "01-Power failure / On battery",
                "02-Loss of communication",
                "03-Battery fault",
                "04-System shutdown",
                "05-Tension dip",
                "06-Overvoltage",
                "07-Voltage drop",
                "08-Voltage increase",
                "09-Line noise",
                "10-Frequency variation",
                "11-Transient distortion",
                "12-Harmonic distortion"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/status",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current of the inverter",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "L1",
                  "description": "The current of L1",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "L2",
                  "description": "The current of L2",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "L3",
                  "description": "The current of L3",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/current",
                  "contentType": "application/json",
                  "mqv:topic": "cellar/inverter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "active_power": {
              "title": "Active Power",
              "description": "The active power of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/active_power",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/active_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "reactive_power": {
              "title": "Reactive Power",
              "description": "The reactive power of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/reactive_power",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/reactive_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "temperature": {
              "title": "Temperature",
              "description": "The temperature of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/temperature",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/temperature",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "error": {
              "title": "Error",
              "description": "The error of the inverter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/error",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/error",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "cmnd": {
              "title": "Command",
              "description": "Send a command to the inverter",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "ON",
                  "OFF",
                  "0",
                  "1"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Inverter",
          "id": "urn:dev:ops:cellar-inverter-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart inverter that provides real-time data and control",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the inverter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "00-On sector",
                "01-Power failure / On battery",
                "02-Loss of communication",
                "03-Battery fault",
                "04-System shutdown",
                "05-Tension dip",
                "06-Overvoltage",
                "07-Voltage drop",
                "08-Voltage increase",
                "09-Line noise",
                "10-Frequency variation",
                "11-Transient distortion",
                "12-Harmonic distortion"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/status",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current values of the inverter",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/current",
                  "contentType": "application/json",
                  "mqv:topic": "cellar/inverter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "active_power": {
              "title": "Active Power",
              "description": "The active power value of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/active_power",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/active_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "reactive_power": {
              "title": "Reactive Power",
              "description": "The reactive power value of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/reactive_power",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/reactive_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "temperature": {
              "title": "Temperature",
              "description": "The temperature value of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/temperature",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/temperature",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "error": {
              "title": "Error",
              "description": "The error message of the inverter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/error",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/error",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "turn_on": {
              "title": "Turn On",
              "description": "Turn on the inverter",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "ON"
                  ]
                }
              ]
            },
            "turn_off": {
              "title": "Turn Off",
              "description": "Turn off the inverter",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "OFF"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Inverter",
          "id": "urn:dev:ops:cellar-inverter-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart inverter that provides real-time monitoring and control of energy usage",
          "properties": {
            "status": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "00-On sector",
                "01-Power failure / On battery",
                "02-Loss of communication",
                "03-Battery fault",
                "04-System shutdown",
                "05-Tension dip",
                "06-Overvoltage",
                "07-Voltage drop",
                "08-Voltage increase",
                "09-Line noise",
                "10-Frequency variation",
                "11-Transient distortion",
                "12-Harmonic distortion"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/status",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "current": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/current",
                  "contentType": "application/json",
                  "mqv:topic": "cellar/inverter/current",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "active_power": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/active_power",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/active_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "reactive_power": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/reactive_power",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/reactive_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "temperature": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/temperature",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/temperature",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "error": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/error",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/error",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "cmnd": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "ON",
                  "OFF",
                  "0",
                  "1"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": "text/plain",
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'cellar/inverter/status'; payload: '00-On sector'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '01-Power failure / On battery'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '02-Loss of communication'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '03-Battery fault'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '04-System shutdown'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '05-Tension dip'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '06-Overvoltage'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '07-Voltage drop'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '08-Voltage increase'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '09-Line noise'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '10-Frequency variation'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '11-Transient distortion'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '12-Harmonic distortion'; retain: 'true'\ntopic: 'cellar/inverter/current'; payload: '{'L1': 7.919, 'L2': 1.022, 'L3': 5.444}'; retain: 'true'\ntopic: 'cellar/inverter/current'; payload: '{'L1': 7.145, 'L2': 13.143, 'L3': 14.64}'; retain: 'true'\ntopic: 'cellar/inverter/current'; payload: '{'L1': 15.757, 'L2': 8.071, 'L3': 6.725}'; retain: 'true'\ntopic: 'cellar/inverter/current'; payload: '{'L1': 8.365, 'L2': 4.391, 'L3': 15.53}'; retain: 'true'\ntopic: 'cellar/inverter/current'; payload: '{'L1': 14.111, 'L2': 10.208, 'L3': 2.747}'; retain: 'true'\ntopic: 'cellar/inverter/active_power'; payload: '176.443'; retain: 'true'\ntopic: 'cellar/inverter/active_power'; payload: '145.34'; retain: 'true'\ntopic: 'cellar/inverter/active_power'; payload: '86.12'; retain: 'true'\ntopic: 'cellar/inverter/active_power'; payload: '8.909'; retain: 'true'\ntopic: 'cellar/inverter/active_power'; payload: '7.936'; retain: 'true'\ntopic: 'cellar/inverter/reactive_power'; payload: '93.521'; retain: 'true'\ntopic: 'cellar/inverter/reactive_power'; payload: '75.089'; retain: 'true'\ntopic: 'cellar/inverter/reactive_power'; payload: '104.425'; retain: 'true'\ntopic: 'cellar/inverter/reactive_power'; payload: '116.425'; retain: 'true'\ntopic: 'cellar/inverter/reactive_power'; payload: '188.17'; retain: 'true'\ntopic: 'cellar/inverter/temperature'; payload: '224.88'; retain: 'true'\ntopic: 'cellar/inverter/temperature'; payload: '109.019'; retain: 'true'\ntopic: 'cellar/inverter/temperature'; payload: '107.884'; retain: 'true'\ntopic: 'cellar/inverter/temperature'; payload: '175.572'; retain: 'true'\ntopic: 'cellar/inverter/temperature'; payload: '135.011'; retain: 'true'\ntopic: 'cellar/inverter/temperature'; payload: 'true'; retain: 'false'\ntopic: 'cellar/inverter/temperature'; payload: 'false'; retain: 'false'\ntopic: 'cellar/inverter/temperature'; payload: 'true'; retain: 'false'\ntopic: 'cellar/inverter/temperature'; payload: 'false'; retain: 'false'\ntopic: 'cellar/inverter/error'; payload: ''; retain: 'false'\ntopic: 'cellar/inverter/error'; payload: ''; retain: 'false'\ntopic: 'cellar/inverter/error'; payload: ''; retain: 'false'\ntopic: 'cellar/inverter/error'; payload: ''; retain: 'false'\ntopic: 'cellar/inverter/error'; payload: ''; retain: 'false'\ntopic: 'cellar/inverter/cmnd'; payload: 'ON'; retain: 'false'\ntopic: 'cellar/inverter/cmnd'; payload: 'OFF'; retain: 'false'\ntopic: 'cellar/inverter/cmnd'; payload: '0'; retain: 'false'\ntopic: 'cellar/inverter/cmnd'; payload: '1'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "PhotovoltaicDevice",
        "title": "Photovoltaic Device",
        "id": "urn:uuid:f828f65b-401e-475c-bf97-bd288c4aa145",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "A PV Panel",
        "properties": {
          "MaxPressureLoad": {
            "title": "Maximum Pressure",
            "description": "The maximum mechanical pressure that the panel my endure",
            "observable": true,
            "type": "object",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "roof/pv_panel/max_pressure_load",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "NominalPower": {
            "title": "Power",
            "description": "Nominal Power for the panel",
            "observable": true,
            "type": "number",
            "minimum": 0,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "roof/pv_panel/nominal_power",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "MaximumSystemVoltage": {
            "title": "Maximum System Voltage",
            "description": "Maximum System Voltage for which the module is rated",
            "observable": true,
            "type": "number",
            "minimum": 0,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "roof/pv_panel/max_system_voltage",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {},
        "actions": {}
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart PV Panel",
          "id": "urn:dev:ops:roof-pv-panel-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart PV panel with various sensors and controls",
          "properties": {
            "max_pressure_load": {
              "title": "Max Pressure Load",
              "description": "The maximum pressure load of the PV panel",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "hail": {
                  "title": "Hail",
                  "description": "The hail pressure load",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "snow": {
                  "title": "Snow",
                  "description": "The snow pressure load",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "wind": {
                  "title": "Wind",
                  "description": "The wind pressure load",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_pressure_load",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_pressure_load",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "nominal_power": {
              "title": "Nominal Power",
              "description": "The nominal power of the PV panel",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/nominal_power",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/nominal_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "max_system_voltage": {
              "title": "Max System Voltage",
              "description": "The maximum system voltage of the PV panel",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_system_voltage",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_system_voltage",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart PV Panel",
          "id": "urn:dev:ops:smart-pv-panel-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart PV panel with various sensors and actuators",
          "properties": {
            "max_pressure_load": {
              "title": "Max Pressure Load",
              "description": "The maximum pressure load of the PV panel",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "hail": {
                  "title": "Hail",
                  "description": "The maximum hail pressure load",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "snow": {
                  "title": "Snow",
                  "description": "The maximum snow pressure load",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "wind": {
                  "title": "Wind",
                  "description": "The maximum wind pressure load",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_pressure_load",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_pressure_load",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "nominal_power": {
              "title": "Nominal Power",
              "description": "The nominal power of the PV panel",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/nominal_power",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/nominal_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "max_system_voltage": {
              "title": "Max System Voltage",
              "description": "The maximum system voltage of the PV panel",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_system_voltage",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_system_voltage",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Roof PV Panel",
          "id": "urn:dev:ops:smart-roof-pv-panel-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart roof PV panel with various sensors and actuators",
          "properties": {
            "max_pressure_load": {
              "title": "Max Pressure Load",
              "description": "The maximum pressure load of the PV panel",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "hail": {
                  "title": "Hail",
                  "description": "The maximum hail pressure load",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "snow": {
                  "title": "Snow",
                  "description": "The maximum snow pressure load",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "wind": {
                  "title": "Wind",
                  "description": "The maximum wind pressure load",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_pressure_load",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_pressure_load",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "nominal_power": {
              "title": "Nominal Power",
              "description": "The nominal power of the PV panel",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/nominal_power",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/nominal_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "max_system_voltage": {
              "title": "Max System Voltage",
              "description": "The maximum system voltage of the PV panel",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_system_voltage",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_system_voltage",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart PV Panel",
          "id": "urn:dev:ops:roof-pv-panel-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart PV panel with various sensors",
          "properties": {
            "max_pressure_load": {
              "title": "Max Pressure Load",
              "description": "The maximum pressure load of the PV panel",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "hail": {
                  "title": "Hail",
                  "description": "The maximum hail pressure load",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "snow": {
                  "title": "Snow",
                  "description": "The maximum snow pressure load",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "wind": {
                  "title": "Wind",
                  "description": "The maximum wind pressure load",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_pressure_load",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_pressure_load",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "nominal_power": {
              "title": "Nominal Power",
              "description": "The nominal power of the PV panel",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/nominal_power",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/nominal_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "max_system_voltage": {
              "title": "Max System Voltage",
              "description": "The maximum system voltage of the PV panel",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_system_voltage",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_system_voltage",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart PV Panel",
          "id": "urn:dev:ops:pv-panel-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart PV panel with various sensors and controls",
          "properties": {
            "max_pressure_load": {
              "title": "Max Pressure Load",
              "description": "The maximum pressure load of the PV panel",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "hail": {
                  "title": "Hail",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "snow": {
                  "title": "Snow",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "wind": {
                  "title": "Wind",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_pressure_load",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_pressure_load",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "nominal_power": {
              "title": "Nominal Power",
              "description": "The nominal power of the PV panel",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/nominal_power",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/nominal_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "max_system_voltage": {
              "title": "Max System Voltage",
              "description": "The maximum system voltage of the PV panel",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_system_voltage",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_system_voltage",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart PV Panel",
          "id": "urn:dev:ops:roof-pv-panel-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart photovoltaic panel with various sensors",
          "properties": {
            "max_pressure_load": {
              "title": "Max Pressure Load",
              "description": "The maximum pressure load on the PV panel",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "hail": {
                  "title": "Hail",
                  "description": "The hail pressure load",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "snow": {
                  "title": "Snow",
                  "description": "The snow pressure load",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "wind": {
                  "title": "Wind",
                  "description": "The wind pressure load",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_pressure_load",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_pressure_load",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "nominal_power": {
              "title": "Nominal Power",
              "description": "The nominal power of the PV panel",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/nominal_power",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/nominal_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "max_system_voltage": {
              "title": "Max System Voltage",
              "description": "The maximum system voltage of the PV panel",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_system_voltage",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_system_voltage",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart PV Panel",
          "id": "urn:dev:ops:roof-pv-panel-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart PV panel with various sensors",
          "properties": {
            "max_pressure_load": {
              "title": "Max Pressure Load",
              "description": "The maximum pressure load of the PV panel",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "hail": {
                  "title": "Hail",
                  "description": "The hail pressure load",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "snow": {
                  "title": "Snow",
                  "description": "The snow pressure load",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "wind": {
                  "title": "Wind",
                  "description": "The wind pressure load",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_pressure_load",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_pressure_load",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "nominal_power": {
              "title": "Nominal Power",
              "description": "The nominal power of the PV panel",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/nominal_power",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/nominal_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "max_system_voltage": {
              "title": "Max System Voltage",
              "description": "The maximum system voltage of the PV panel",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_system_voltage",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_system_voltage",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "PV Panel",
          "id": "urn:dev:ops:pv-panel-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that monitors and controls a PV panel",
          "properties": {
            "max_pressure_load": {
              "title": "Max Pressure Load",
              "description": "The maximum pressure load of the PV panel",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "hail": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": 0,
                  "maximum": 10,
                  "enum": null,
                  "properties": {}
                },
                "snow": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": 0,
                  "maximum": 10,
                  "enum": null,
                  "properties": {}
                },
                "wind": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": 0,
                  "maximum": 10,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_pressure_load",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_pressure_load",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "nominal_power": {
              "title": "Nominal Power",
              "description": "The nominal power of the PV panel",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": 200,
              "enum": null,
              "properties": {},
              "forms": []
            },
            "max_system_voltage": {
              "title": "Max System Voltage",
              "description": "The maximum system voltage of the PV panel",
              "observable": null,
              "type": "number",
              "minimum": 0,
              "maximum": 300,
              "enum": null,
              "properties": {},
              "forms": []
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart PV Panel",
          "id": "urn:dev:ops:pv-panel-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart PV panel with various sensors and features",
          "properties": {
            "max_pressure_load": {
              "title": "Max Pressure Load",
              "description": "The maximum pressure load of the PV panel",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "hail": {
                  "title": "Hail",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "snow": {
                  "title": "Snow",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "wind": {
                  "title": "Wind",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_pressure_load",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_pressure_load",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "nominal_power": {
              "title": "Nominal Power",
              "description": "The nominal power of the PV panel",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/nominal_power",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/nominal_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "max_system_voltage": {
              "title": "Max System Voltage",
              "description": "The maximum system voltage of the PV panel",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_system_voltage",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_system_voltage",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Roof PV Panel",
          "id": "urn:dev:ops:roof-pv-panel-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart roof PV panel with various sensors and controls",
          "properties": {
            "max_pressure_load": {
              "title": "Max Pressure Load",
              "description": "The maximum pressure load on the PV panel",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "hail": {
                  "title": "Hail",
                  "description": "The hail pressure load",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "snow": {
                  "title": "Snow",
                  "description": "The snow pressure load",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "wind": {
                  "title": "Wind",
                  "description": "The wind pressure load",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_pressure_load",
                  "contentType": null,
                  "mqv:topic": "roof/pv_panel/max_pressure_load",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "nominal_power": {
              "title": "Nominal Power",
              "description": "The nominal power output of the PV panel",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/nominal_power",
                  "contentType": null,
                  "mqv:topic": "roof/pv_panel/nominal_power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "max_system_voltage": {
              "title": "Max System Voltage",
              "description": "The maximum system voltage of the PV panel",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_system_voltage",
                  "contentType": null,
                  "mqv:topic": "roof/pv_panel/max_system_voltage",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        }
      ],
      "msg_log": "topic: 'roof/pv_panel/max_pressure_load'; payload: '{'hail': 4.723, 'snow': 0.79, 'wind': 0.621}'; retain: 'true'\ntopic: 'roof/pv_panel/max_pressure_load'; payload: '{'hail': 4.62, 'snow': 3.308, 'wind': 1.53}'; retain: 'true'\ntopic: 'roof/pv_panel/max_pressure_load'; payload: '{'hail': 4.297, 'snow': 3.564, 'wind': 3.385}'; retain: 'true'\ntopic: 'roof/pv_panel/max_pressure_load'; payload: '{'hail': 4.478, 'snow': 0.171, 'wind': 1.968}'; retain: 'true'\ntopic: 'roof/pv_panel/max_pressure_load'; payload: '{'hail': 2.52, 'snow': 0.317, 'wind': 1.466}'; retain: 'true'\ntopic: 'roof/pv_panel/nominal_power'; payload: '38.192'; retain: 'true'\ntopic: 'roof/pv_panel/nominal_power'; payload: '135.868'; retain: 'true'\ntopic: 'roof/pv_panel/nominal_power'; payload: '106.662'; retain: 'true'\ntopic: 'roof/pv_panel/nominal_power'; payload: '132.977'; retain: 'true'\ntopic: 'roof/pv_panel/nominal_power'; payload: '89.85'; retain: 'true'\ntopic: 'roof/pv_panel/max_system_voltage'; payload: '229.776'; retain: 'true'\ntopic: 'roof/pv_panel/max_system_voltage'; payload: '73.529'; retain: 'true'\ntopic: 'roof/pv_panel/max_system_voltage'; payload: '249.224'; retain: 'true'\ntopic: 'roof/pv_panel/max_system_voltage'; payload: '141.215'; retain: 'true'\ntopic: 'roof/pv_panel/max_system_voltage'; payload: '17.133'; retain: 'true'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "AlarmSiren",
        "title": "Garage Alarm Siren",
        "id": "urn:uuid:be84eecd-42dc-4409-b30c-3bfa046f0e95",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "MQTT activated alarm sirem, (caution loud)",
        "properties": {
          "availability": {
            "title": "Siren Availability",
            "description": "The availability of the sire",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "ONLINE",
              "OFFLINE"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/siren/availability",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "activated": {
            "title": "Siren Activated",
            "description": "The siren was activated",
            "data": {
              "title": "",
              "description": "",
              "observable": false,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "activated"
              ],
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/siren/activate/result",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          },
          "testActivated": {
            "title": "Siren Test Activated",
            "description": "The test alarm was activated (silent)",
            "data": {
              "title": "",
              "description": "",
              "observable": false,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "activated"
              ],
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/siren/test/result",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "activate": {
            "title": "Activate Siren (Hot)",
            "description": "activate Siren",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/siren/activate",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "test": {
            "title": "Activate Siren (Silent)",
            "description": "silently test activation of the siren",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/siren/test",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Siren",
          "id": "urn:dev:ops:garage-siren-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart siren device for garage",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "The availability of the siren",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "activateResult": {
              "title": "Activate Result",
              "description": "The result of activating the siren",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/activate/result",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "testResult": {
              "title": "Test Result",
              "description": "The result of testing the siren",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/test/result",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "activate": {
              "title": "Activate",
              "description": "Activate the siren",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/activate",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "test": {
              "title": "Test",
              "description": "Test the siren",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/test",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSiren",
          "title": "Garage Siren",
          "id": "urn:dev:ops:garage-siren-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart siren device for the garage",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "The availability of the siren",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "activateResult": {
              "title": "Activate Result",
              "description": "The result of the activate action",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/activate/result",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "testResult": {
              "title": "Test Result",
              "description": "The result of the test action",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/test/result",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "activate": {
              "title": "Activate",
              "description": "Activate the siren",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/activate",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "test": {
              "title": "Test",
              "description": "Test the siren",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/test",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSiren",
          "title": "Garage Siren",
          "id": "urn:dev:ops:garage-siren-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart siren device located in the garage",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "The availability of the siren",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "activationResult": {
              "title": "Activation Result",
              "description": "The result of the activation",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/activate/result",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "testResult": {
              "title": "Test Result",
              "description": "The result of the test",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/test/result",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "activate": {
              "title": "Activate",
              "description": "Activate the siren",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/activate",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "test": {
              "title": "Test",
              "description": "Test the siren",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/test",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSiren",
          "title": "Garage Siren",
          "id": "urn:dev:ops:garage-siren-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart siren device located in the garage",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "The availability of the siren",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "activateResult": {
              "title": "Activate Result",
              "description": "The result of activating the siren",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/activate/result",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "testResult": {
              "title": "Test Result",
              "description": "The result of testing the siren",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/test/result",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "activate": {
              "title": "Activate",
              "description": "Activate the siren",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/activate",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "test": {
              "title": "Test",
              "description": "Test the siren",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/test",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Garage Siren",
          "id": "urn:dev:ops:garage-siren-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart garage siren",
          "properties": {
            "availability": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "garage/siren/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "activate/result": {
              "title": "",
              "description": "",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate/result",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "test/result": {
              "title": "",
              "description": "",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test/result",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "activate": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "test": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Garage Siren",
          "id": "urn:dev:ops:garage-siren-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart garage siren",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "The availability of the garage siren",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "activateResult": {
              "title": "Activate Result",
              "description": "The result of activating the garage siren",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/activate/result",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "testResult": {
              "title": "Test Result",
              "description": "The result of testing the garage siren",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/test/result",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "activate": {
              "title": "Activate",
              "description": "Activate the garage siren",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/activate",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "test": {
              "title": "Test",
              "description": "Test the garage siren",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/test",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSiren",
          "title": "Garage Siren",
          "id": "urn:dev:ops:garage-siren-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart siren device located in the garage",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "The availability of the siren",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/availability",
                  "contentType": null,
                  "mqv:topic": "garage/siren/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "activateResult": {
              "title": "Activate Result",
              "description": "The result of activating the siren",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate/result",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate/result",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "testResult": {
              "title": "Test Result",
              "description": "The result of testing the siren",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test/result",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test/result",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "activate": {
              "title": "Activate",
              "description": "Activate the siren",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "test": {
              "title": "Test",
              "description": "Test the siren",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSiren",
          "title": "Garage Siren",
          "id": "garage-siren-123",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart siren device located in the garage",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "The availability of the siren",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "activateResult": {
              "title": "Activate Result",
              "description": "The result of activating the siren",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/activate/result",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "testResult": {
              "title": "Test Result",
              "description": "The result of testing the siren",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/test/result",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "activate": {
              "title": "Activate",
              "description": "Activate the siren",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/activate",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "test": {
              "title": "Test",
              "description": "Test the siren",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/test",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Garage Siren",
          "id": "urn:dev:ops:garage-siren-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart garage siren",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "The availability of the garage siren",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "activateResult": {
              "title": "Activate Result",
              "description": "The result of activating the garage siren",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/activate/result",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "testResult": {
              "title": "Test Result",
              "description": "The result of testing the garage siren",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/test/result",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "activate": {
              "title": "Activate",
              "description": "Activate the garage siren",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/activate",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "test": {
              "title": "Test",
              "description": "Test the garage siren",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "garage/siren/test",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Garage Siren",
          "id": "urn:dev:ops:garage-siren-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart garage siren",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "The availability of the garage siren",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/availability",
                  "contentType": null,
                  "mqv:topic": "garage/siren/availability",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "activateResult": {
              "title": "Activate Result",
              "description": "The result of activating the garage siren",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate/result",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate/result",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "testResult": {
              "title": "Test Result",
              "description": "The result of testing the garage siren",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test/result",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test/result",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "activate": {
              "title": "Activate",
              "description": "Activate the garage siren",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "test": {
              "title": "Test",
              "description": "Test the garage siren",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'garage/siren/availability'; payload: 'ONLINE'; retain: 'true'\ntopic: 'garage/siren/availability'; payload: 'OFFLINE'; retain: 'true'\ntopic: 'garage/siren/activate/result'; payload: 'activated'; retain: 'false'\ntopic: 'garage/siren/test/result'; payload: 'activated'; retain: 'false'\ntopic: 'garage/siren/activate'; payload: 'true'; retain: 'false'\ntopic: 'garage/siren/activate'; payload: 'false'; retain: 'false'\ntopic: 'garage/siren/activate'; payload: 'true'; retain: 'false'\ntopic: 'garage/siren/activate'; payload: 'false'; retain: 'false'\ntopic: 'garage/siren/test'; payload: 'true'; retain: 'false'\ntopic: 'garage/siren/test'; payload: 'false'; retain: 'false'\ntopic: 'garage/siren/test'; payload: 'true'; retain: 'false'\ntopic: 'garage/siren/test'; payload: 'false'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "Switch",
        "title": "Switch",
        "id": "urn:uuid:4819ac0e-ffa5-4d26-a83f-3dcd605f9d29",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "A stateful switch",
        "properties": {
          "state": {
            "title": "Switch State",
            "description": "State of the switch",
            "observable": true,
            "type": "boolean",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "home/downstairs/kitchen/switch004",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {},
        "actions": {}
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Switch",
          "id": "urn:dev:ops:switch-004",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch that can be turned on and off",
          "properties": {
            "switchStatus": {
              "title": "Switch Status",
              "description": "The current status of the switch",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/downstairs/kitchen/switch004",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Switch",
          "id": "urn:dev:ops:switch004",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch that can be controlled remotely",
          "properties": {
            "switchStatus": {
              "title": "Switch Status",
              "description": "The current status of the switch",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/downstairs/kitchen/switch004",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Switch",
          "id": "urn:dev:ops:switch004",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch that can be controlled remotely",
          "properties": {
            "switch": {
              "title": "Switch",
              "description": "The state of the switch",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/downstairs/kitchen/switch004",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Switch",
          "id": "urn:dev:ops:switch004",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch that can be controlled remotely",
          "properties": {
            "switch004": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "true",
                "false"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/downstairs/kitchen/switch004",
                  "mqv:retain": true,
                  "op": [
                    "readproperty",
                    "writeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Switch",
          "id": "urn:dev:ops:switch004",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch that can be controlled remotely",
          "properties": {
            "switch": {
              "title": "Switch",
              "description": "The state of the switch",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/downstairs/kitchen/switch004",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Switch",
          "id": "urn:dev:ops:switch004",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch that can be controlled remotely",
          "properties": {
            "switchStatus": {
              "title": "Switch Status",
              "description": "The current status of the switch",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/downstairs/kitchen/switch004",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Switch",
          "id": "urn:dev:ops:switch-004",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch that can be turned on and off remotely",
          "properties": {
            "switch": {
              "title": "Switch",
              "description": "The state of the switch",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/downstairs/kitchen/switch004",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Switch",
          "id": "urn:dev:ops:switch004",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch that can be controlled remotely",
          "properties": {
            "switch004": {
              "title": "Switch 004",
              "description": "The state of the switch",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/downstairs/kitchen/switch004",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Switch",
          "id": "urn:dev:ops:switch004",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch that can be controlled remotely",
          "properties": {
            "switchStatus": {
              "title": "Switch Status",
              "description": "The current status of the switch",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/downstairs/kitchen/switch004",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Kitchen Switch",
          "id": "urn:dev:ops:KitchenSwitch-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch in the kitchen",
          "properties": {
            "switch": {
              "title": "Switch",
              "description": "The state of the switch",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/downstairs/kitchen/switch004",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        }
      ],
      "msg_log": "topic: 'home/downstairs/kitchen/switch004'; payload: 'true'; retain: 'true'\ntopic: 'home/downstairs/kitchen/switch004'; payload: 'false'; retain: 'true'\ntopic: 'home/downstairs/kitchen/switch004'; payload: 'true'; retain: 'true'\ntopic: 'home/downstairs/kitchen/switch004'; payload: 'false'; retain: 'true'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "Tracker",
        "title": "My Smart Position Tracker",
        "id": "urn:uuid:8ca4d0a0-b788-4d9d-af99-7a032a732f13",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "An automatic window cover",
        "properties": {
          "position": {
            "title": "Tracker Position",
            "description": "The location of the tracker in GPS coordinates",
            "observable": true,
            "type": "object",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {
              "longitude": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "latitude": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "altitude": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              }
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/pos",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "alarm": {
            "title": "Movement Alarm",
            "description": "The tracker has left the set position and radius",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/alarm",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "setPosition": {
            "title": "Set Position",
            "description": "Set the position and radius of the tracker",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "radius": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              }
            },
            "output": {
              "title": "",
              "description": "",
              "observable": false,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/config",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:device:a4567d663eaf",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that tracks its position and sends alarm notifications",
          "properties": {
            "position": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": -180,
                  "maximum": 180,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": -90,
                  "maximum": 90,
                  "enum": null,
                  "properties": {}
                },
                "altitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": 0,
                  "maximum": 10000,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/pos",
                  "contentType": "application/json",
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/pos",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "alarm": {
              "title": "",
              "description": "An alarm notification",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/alarm",
                  "contentType": "application/json",
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/alarm",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "config": {
              "title": "",
              "description": "Configure the device",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "longitude": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": -180,
                    "maximum": 180,
                    "enum": null,
                    "properties": {}
                  },
                  "latitude": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": -90,
                    "maximum": 90,
                    "enum": null,
                    "properties": {}
                  },
                  "radius": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": 0,
                    "maximum": 10000,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/config",
                  "contentType": "application/json",
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/config",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:device:a4567d663eaf",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that tracks its position and sends alarm notifications",
          "properties": {
            "position": {
              "title": "Position",
              "description": "The current position of the device",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": -180,
                  "maximum": 180,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": -90,
                  "maximum": 90,
                  "enum": null,
                  "properties": {}
                },
                "altitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": 0,
                  "maximum": 10000,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/pos",
                  "contentType": "application/json",
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/pos",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "alarm": {
              "title": "Alarm",
              "description": "An alarm notification",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/alarm",
                  "contentType": "application/json",
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/alarm",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "config": {
              "title": "Config",
              "description": "Configure the device",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "longitude": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": -180,
                    "maximum": 180,
                    "enum": null,
                    "properties": {}
                  },
                  "latitude": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": -90,
                    "maximum": 90,
                    "enum": null,
                    "properties": {}
                  },
                  "radius": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": 0,
                    "maximum": 10000,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/config",
                  "contentType": "application/json",
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/config",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:device:a4567d663eaf",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that tracks its location and sends alarm notifications",
          "properties": {
            "pos": {
              "title": "Position",
              "description": "The current position of the device",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": -180,
                  "maximum": 180,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": -90,
                  "maximum": 90,
                  "enum": null,
                  "properties": {}
                },
                "altitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": 0,
                  "maximum": 10000,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/pos",
                  "contentType": "application/json",
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/pos",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "alarm": {
              "title": "Alarm",
              "description": "An alarm notification",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/alarm",
                  "contentType": "application/json",
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/alarm",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "config": {
              "title": "Config",
              "description": "Configure the device",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "longitude": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": -180,
                    "maximum": 180,
                    "enum": null,
                    "properties": {}
                  },
                  "latitude": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": -90,
                    "maximum": 90,
                    "enum": null,
                    "properties": {}
                  },
                  "radius": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": 0,
                    "maximum": 10000,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/config",
                  "contentType": "application/json",
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/config",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:device:a4567d663eaf",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that tracks its position and sends alarm notifications",
          "properties": {
            "position": {
              "title": "",
              "description": "The current position of the device",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": -180,
                  "maximum": 180,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": -90,
                  "maximum": 90,
                  "enum": null,
                  "properties": {}
                },
                "altitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": 0,
                  "maximum": 10000,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/pos",
                  "contentType": "application/json",
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/pos",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "alarm": {
              "title": "",
              "description": "An alarm notification sent by the device",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/alarm",
                  "contentType": "application/json",
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/alarm",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "config": {
              "title": "",
              "description": "Configure the device's position and radius",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "longitude": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": -180,
                    "maximum": 180,
                    "enum": null,
                    "properties": {}
                  },
                  "latitude": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": -90,
                    "maximum": 90,
                    "enum": null,
                    "properties": {}
                  },
                  "radius": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": 0,
                    "maximum": 10000,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/config",
                  "contentType": "application/json",
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/config",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:uuid:a4567d663eaf",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that tracks its position and sends alarm signals",
          "properties": {
            "position": {
              "title": "Position",
              "description": "The current position of the device",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "Longitude",
                  "description": "The longitude of the device",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "Latitude",
                  "description": "The latitude of the device",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "altitude": {
                  "title": "Altitude",
                  "description": "The altitude of the device",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/pos",
                  "contentType": "application/json",
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/pos",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "alarm": {
              "title": "Alarm",
              "description": "An alarm signal sent by the device",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/alarm",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/alarm",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "config": {
              "title": "Config",
              "description": "Configure the device",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "longitude": {
                    "title": "Longitude",
                    "description": "The longitude of the device",
                    "observable": null,
                    "type": "number",
                    "minimum": null,
                    "maximum": null,
                    "enum": null,
                    "properties": {}
                  },
                  "latitude": {
                    "title": "Latitude",
                    "description": "The latitude of the device",
                    "observable": null,
                    "type": "number",
                    "minimum": null,
                    "maximum": null,
                    "enum": null,
                    "properties": {}
                  },
                  "radius": {
                    "title": "Radius",
                    "description": "The radius of the device",
                    "observable": null,
                    "type": "number",
                    "minimum": null,
                    "maximum": null,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/config",
                  "contentType": "application/json",
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/config",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:device:a4567d663eaf",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that tracks its position and sends alarm notifications",
          "properties": {
            "position": {
              "title": "",
              "description": "The current position of the device",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "The longitude of the device's position",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "The latitude of the device's position",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "altitude": {
                  "title": "",
                  "description": "The altitude of the device's position",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/pos",
                  "contentType": "application/json",
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/pos",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "alarm": {
              "title": "",
              "description": "An alarm notification sent by the device",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/alarm",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/alarm",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "config": {
              "title": "",
              "description": "Configure the device's position and radius",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "longitude": {
                    "title": "",
                    "description": "The longitude of the device's position",
                    "observable": null,
                    "type": "number",
                    "minimum": null,
                    "maximum": null,
                    "enum": null,
                    "properties": {}
                  },
                  "latitude": {
                    "title": "",
                    "description": "The latitude of the device's position",
                    "observable": null,
                    "type": "number",
                    "minimum": null,
                    "maximum": null,
                    "enum": null,
                    "properties": {}
                  },
                  "radius": {
                    "title": "",
                    "description": "The radius of the device's position",
                    "observable": null,
                    "type": "number",
                    "minimum": null,
                    "maximum": null,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/config",
                  "contentType": "application/json",
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/config",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:device:a4567d663eaf",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that tracks its location and sends alarm notifications",
          "properties": {
            "pos": {
              "title": "Position",
              "description": "The current position of the device",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "Longitude",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "Latitude",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "altitude": {
                  "title": "Altitude",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/pos",
                  "contentType": "application/json",
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/pos",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "alarm": {
              "title": "Alarm",
              "description": "An alarm notification",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/alarm",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/alarm",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "config": {
              "title": "Configure",
              "description": "Configure the device",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "longitude": {
                    "title": "Longitude",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": null,
                    "maximum": null,
                    "enum": null,
                    "properties": {}
                  },
                  "latitude": {
                    "title": "Latitude",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": null,
                    "maximum": null,
                    "enum": null,
                    "properties": {}
                  },
                  "radius": {
                    "title": "Radius",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": null,
                    "maximum": null,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/config",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/config",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:device:a4567d663eaf",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that tracks its position and sends alarm notifications",
          "properties": {
            "position": {
              "title": "Position",
              "description": "The current position of the device",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "Longitude",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "Latitude",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "altitude": {
                  "title": "Altitude",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/pos",
                  "contentType": "application/json",
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/pos",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "alarm": {
              "title": "Alarm",
              "description": "An alarm notification",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/alarm",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/alarm",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "config": {
              "title": "Config",
              "description": "Configure the device",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "longitude": {
                    "title": "Longitude",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": null,
                    "maximum": null,
                    "enum": null,
                    "properties": {}
                  },
                  "latitude": {
                    "title": "Latitude",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": null,
                    "maximum": null,
                    "enum": null,
                    "properties": {}
                  },
                  "radius": {
                    "title": "Radius",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": null,
                    "maximum": null,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/config",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/config",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:device:a4567d663eaf",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that tracks its location and sends alarm notifications",
          "properties": {
            "location": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": -180,
                  "maximum": 180,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": -90,
                  "maximum": 90,
                  "enum": null,
                  "properties": {}
                },
                "altitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": 0,
                  "maximum": 10000,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/pos",
                  "contentType": "application/json",
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/pos",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "alarm": {
              "title": "",
              "description": "An alarm notification",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/alarm",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/alarm",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "config": {
              "title": "",
              "description": "Configure the device",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "longitude": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": -180,
                    "maximum": 180,
                    "enum": null,
                    "properties": {}
                  },
                  "latitude": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": -90,
                    "maximum": 90,
                    "enum": null,
                    "properties": {}
                  },
                  "radius": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": 0,
                    "maximum": 10000,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/config",
                  "contentType": "application/json",
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/config",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Device",
          "id": "urn:dev:ops:device:a4567d663eaf",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that tracks its position and sends alarm notifications",
          "properties": {
            "pos": {
              "title": "Position",
              "description": "The current position of the device",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "altitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/pos",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/pos",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "alarm": {
              "title": "Alarm",
              "description": "An alarm notification",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/alarm",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/alarm",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "config": {
              "title": "Config",
              "description": "Configure the device",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "longitude": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": null,
                    "maximum": null,
                    "enum": null,
                    "properties": {}
                  },
                  "latitude": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": null,
                    "maximum": null,
                    "enum": null,
                    "properties": {}
                  },
                  "radius": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": null,
                    "maximum": null,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/config",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/config",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'homeassistant/device_tracker/a4567d663eaf/pos'; payload: '{'longitude': 27.481, 'latitude': 26.154, 'altitude': 9.81}'; retain: 'true'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/pos'; payload: '{'longitude': 30.191, 'latitude': 27.365, 'altitude': 1.977}'; retain: 'true'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/pos'; payload: '{'longitude': 32.834, 'latitude': 4.862, 'altitude': 0.303}'; retain: 'true'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/pos'; payload: '{'longitude': 17.406, 'latitude': 27.822, 'altitude': 2.811}'; retain: 'true'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/pos'; payload: '{'longitude': 0.798, 'latitude': 43.776, 'altitude': 3.552}'; retain: 'true'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/alarm'; payload: ''; retain: 'false'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/alarm'; payload: ''; retain: 'false'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/alarm'; payload: ''; retain: 'false'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/alarm'; payload: ''; retain: 'false'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/alarm'; payload: ''; retain: 'false'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/config'; payload: '{'longitude': 36.2, 'latitude': 42.772, 'radius': 21.765}'; retain: 'false'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/config'; payload: '{'longitude': 37.973, 'latitude': 22.779, 'radius': 7.328}'; retain: 'false'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/config'; payload: '{'longitude': 40.628, 'latitude': 29.39, 'radius': 14.156}'; retain: 'false'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/config'; payload: '{'longitude': 31.05, 'latitude': 23.503, 'radius': 14.449}'; retain: 'false'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/config'; payload: '{'longitude': 3.009, 'latitude': 11.025, 'radius': 7.689}'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "VacuumCleaner",
        "title": "Vacuum Cleaner",
        "id": "urn:uuid:b5d392d8-9931-44be-881e-d12410860baa",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "A smart vacuum cleaner",
        "properties": {
          "state": {
            "title": "Vacuum State",
            "description": "The state of the vacuum",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "cleaning",
              "docked",
              "paused",
              "idle",
              "returning",
              "error"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "apartment/vacuum/state",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "battery": {
            "title": "Battery",
            "description": "Battery percentage of the vacuum cleaner",
            "observable": true,
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "apartment/vacuum/bat",
                "mqv:retain": true,
                "op": [
                  "observeproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "stuck": {
            "title": "Vacuum Stuck",
            "description": "The vacuum cleaner is stuck and need assistance",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "apartment/vacuum/stuck",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          },
          "bin": {
            "title": "Vacuum Bin Full",
            "description": "The vacuum cleaner's bin is full",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "apartment/vacuum/bin/full",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "command": {
            "title": "Commands",
            "description": "Send commands to the vacuum",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "start",
                "pause",
                "return",
                "stop",
                "clean_spor",
                "locate"
              ],
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "apartment/vacuum/cmnd",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "pause": {
            "title": "Pause vacuum",
            "description": "Pause the vacuum",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "apartment/vacuum/pause",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Vacuum Cleaner",
          "id": "urn:dev:ops:apartment-vacuum-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT vacuum cleaner",
          "properties": {
            "state": {
              "title": "State",
              "description": "The current state of the vacuum cleaner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "cleaning",
                "docked",
                "paused",
                "idle",
                "returning",
                "error"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/state",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "battery": {
              "title": "Battery",
              "description": "The current battery level of the vacuum cleaner",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bat",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/bat",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "stuck": {
              "title": "Stuck",
              "description": "Whether the vacuum cleaner is stuck or not",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/stuck",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/stuck",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "binFull": {
              "title": "Bin Full",
              "description": "Whether the vacuum cleaner's bin is full or not",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bin/full",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/bin/full",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "pauseEvent": {
              "title": "Pause Event",
              "description": "The vacuum cleaner has been paused",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/pause",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/pause",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "start": {
              "title": "Start",
              "description": "Start the vacuum cleaner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "start"
                  ]
                }
              ]
            },
            "pause": {
              "title": "Pause",
              "description": "Pause the vacuum cleaner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "pause"
                  ]
                }
              ]
            },
            "return": {
              "title": "Return",
              "description": "Return the vacuum cleaner to its dock",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "return"
                  ]
                }
              ]
            },
            "stop": {
              "title": "Stop",
              "description": "Stop the vacuum cleaner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "stop"
                  ]
                }
              ]
            },
            "cleanSpot": {
              "title": "Clean Spot",
              "description": "Clean a specific spot",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "clean_spor"
                  ]
                }
              ]
            },
            "locate": {
              "title": "Locate",
              "description": "Locate the vacuum cleaner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "locate"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Vacuum",
          "id": "urn:dev:ops:apartment-vacuum-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT vacuum cleaner",
          "properties": {
            "state": {
              "title": "State",
              "description": "The current state of the vacuum",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "cleaning",
                "docked",
                "paused",
                "idle",
                "returning",
                "error"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/state",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "battery": {
              "title": "Battery",
              "description": "The current battery level",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bat",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/bat",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "stuck": {
              "title": "Stuck",
              "description": "The vacuum is stuck",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/stuck",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/stuck",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "bin_full": {
              "title": "Bin Full",
              "description": "The bin is full",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bin/full",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/bin/full",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "start": {
              "title": "Start",
              "description": "Start the vacuum",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "start"
                  ]
                }
              ]
            },
            "pause": {
              "title": "Pause",
              "description": "Pause the vacuum",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "pause"
                  ]
                }
              ]
            },
            "return": {
              "title": "Return",
              "description": "Return the vacuum to the dock",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "return"
                  ]
                }
              ]
            },
            "stop": {
              "title": "Stop",
              "description": "Stop the vacuum",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "stop"
                  ]
                }
              ]
            },
            "clean_spor": {
              "title": "Clean Spot",
              "description": "Clean a specific spot",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "clean_spor"
                  ]
                }
              ]
            },
            "locate": {
              "title": "Locate",
              "description": "Locate the vacuum",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "locate"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Vacuum Cleaner",
          "id": "urn:dev:ops:apartment-vacuum-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT vacuum cleaner",
          "properties": {
            "state": {
              "title": "State",
              "description": "The current state of the vacuum cleaner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "cleaning",
                "docked",
                "paused",
                "idle",
                "returning",
                "error"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/state",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "battery": {
              "title": "Battery",
              "description": "The current battery level of the vacuum cleaner",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bat",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/bat",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "stuck": {
              "title": "Stuck",
              "description": "Whether the vacuum cleaner is stuck or not",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/stuck",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/stuck",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "binFull": {
              "title": "Bin Full",
              "description": "Whether the vacuum cleaner's bin is full or not",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bin/full",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/bin/full",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "pauseChanged": {
              "title": "Pause Changed",
              "description": "The pause state of the vacuum cleaner has changed",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/pause",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/pause",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "start": {
              "title": "Start",
              "description": "Start the vacuum cleaner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "pause": {
              "title": "Pause",
              "description": "Pause the vacuum cleaner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "return": {
              "title": "Return",
              "description": "Return the vacuum cleaner to its dock",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "stop": {
              "title": "Stop",
              "description": "Stop the vacuum cleaner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "cleanSpot": {
              "title": "Clean Spot",
              "description": "Clean a specific spot",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "locate": {
              "title": "Locate",
              "description": "Locate the vacuum cleaner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Vacuum",
          "id": "urn:dev:ops:apartment-vacuum-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart vacuum cleaner",
          "properties": {
            "state": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "cleaning",
                "docked",
                "paused",
                "idle",
                "returning",
                "error"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/state",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "battery": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bat",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/bat",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "stuck": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/stuck",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/stuck",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "binFull": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bin/full",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/bin/full",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "pause": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/pause",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/pause",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "start": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "start"
                  ]
                }
              ]
            },
            "pause": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "pause"
                  ]
                }
              ]
            },
            "return": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "return"
                  ]
                }
              ]
            },
            "stop": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "stop"
                  ]
                }
              ]
            },
            "cleanSpor": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "clean_spor"
                  ]
                }
              ]
            },
            "locate": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "locate"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Vacuum",
          "id": "urn:dev:ops:apartment-vacuum-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT vacuum cleaner",
          "properties": {
            "state": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "cleaning",
                "docked",
                "paused",
                "idle",
                "returning",
                "error"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/state",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "battery": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bat",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/bat",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "stuck": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/stuck",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/stuck",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "binFull": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bin/full",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/bin/full",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "start": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "start"
                  ]
                }
              ]
            },
            "pause": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "pause"
                  ]
                }
              ]
            },
            "return": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "return"
                  ]
                }
              ]
            },
            "stop": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "stop"
                  ]
                }
              ]
            },
            "cleanSpot": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "clean_spor"
                  ]
                }
              ]
            },
            "locate": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "locate"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Vacuum",
          "id": "urn:dev:ops:apartment-vacuum-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart vacuum cleaner",
          "properties": {
            "state": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "cleaning",
                "docked",
                "paused",
                "idle",
                "returning",
                "error"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/state",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "battery": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bat",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/bat",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "stuck": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/stuck",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/stuck",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "binFull": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bin/full",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/bin/full",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "start": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "start"
                  ]
                }
              ]
            },
            "pause": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "pause"
                  ]
                }
              ]
            },
            "return": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "return"
                  ]
                }
              ]
            },
            "stop": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "stop"
                  ]
                }
              ]
            },
            "cleanSpot": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "clean_spor"
                  ]
                }
              ]
            },
            "locate": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "locate"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Vacuum",
          "id": "urn:dev:ops:apartment-vacuum-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart vacuum cleaner",
          "properties": {
            "state": {
              "title": "State",
              "description": "The current state of the vacuum",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "cleaning",
                "docked",
                "paused",
                "idle",
                "returning",
                "error"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/state",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "battery": {
              "title": "Battery",
              "description": "The current battery level",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bat",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/bat",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "stuck": {
              "title": "Stuck",
              "description": "The vacuum is stuck",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/stuck",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/stuck",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "bin_full": {
              "title": "Bin Full",
              "description": "The vacuum's bin is full",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bin/full",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/bin/full",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "start": {
              "title": "Start",
              "description": "Start the vacuum",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "start"
                  ]
                }
              ]
            },
            "pause": {
              "title": "Pause",
              "description": "Pause the vacuum",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "pause"
                  ]
                }
              ]
            },
            "return": {
              "title": "Return",
              "description": "Return the vacuum to its dock",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "return"
                  ]
                }
              ]
            },
            "stop": {
              "title": "Stop",
              "description": "Stop the vacuum",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "stop"
                  ]
                }
              ]
            },
            "clean_spor": {
              "title": "Clean Spot",
              "description": "Clean a specific spot",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "clean_spor"
                  ]
                }
              ]
            },
            "locate": {
              "title": "Locate",
              "description": "Locate the vacuum",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "locate"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Vacuum Cleaner",
          "id": "urn:dev:ops:apartment-vacuum-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT vacuum cleaner",
          "properties": {
            "state": {
              "title": "State",
              "description": "The current state of the vacuum cleaner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "cleaning",
                "docked",
                "paused",
                "idle",
                "returning",
                "error"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/state",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "battery": {
              "title": "Battery",
              "description": "The current battery level of the vacuum cleaner",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bat",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/bat",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "stuck": {
              "title": "Stuck",
              "description": "Whether the vacuum cleaner is stuck or not",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/stuck",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/stuck",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "binFull": {
              "title": "Bin Full",
              "description": "Whether the vacuum cleaner's bin is full or not",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bin/full",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/bin/full",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "start": {
              "title": "Start",
              "description": "Start the vacuum cleaner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "start"
                  ]
                }
              ]
            },
            "pause": {
              "title": "Pause",
              "description": "Pause the vacuum cleaner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "pause"
                  ]
                }
              ]
            },
            "return": {
              "title": "Return",
              "description": "Return the vacuum cleaner to its dock",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "return"
                  ]
                }
              ]
            },
            "stop": {
              "title": "Stop",
              "description": "Stop the vacuum cleaner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "stop"
                  ]
                }
              ]
            },
            "cleanSpot": {
              "title": "Clean Spot",
              "description": "Clean a specific spot",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "clean_spor"
                  ]
                }
              ]
            },
            "locate": {
              "title": "Locate",
              "description": "Locate the vacuum cleaner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "locate"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Vacuum",
          "id": "urn:dev:ops:apartment-vacuum-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT vacuum cleaner",
          "properties": {
            "state": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "cleaning",
                "docked",
                "paused",
                "idle",
                "returning",
                "error"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/state",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "battery": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bat",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/bat",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "stuck": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/stuck",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/stuck",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "binFull": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bin/full",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/bin/full",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "start": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "start"
                  ]
                }
              ]
            },
            "pause": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "pause"
                  ]
                }
              ]
            },
            "return": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "return"
                  ]
                }
              ]
            },
            "stop": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "stop"
                  ]
                }
              ]
            },
            "cleanSpor": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "clean_spor"
                  ]
                }
              ]
            },
            "locate": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": "application/json",
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "locate"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Vacuum Cleaner",
          "id": "urn:dev:ops:apartment-vacuum-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT vacuum cleaner",
          "properties": {
            "state": {
              "title": "State",
              "description": "The current state of the vacuum cleaner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "cleaning",
                "docked",
                "paused",
                "idle",
                "returning",
                "error"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/state",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/state",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "battery": {
              "title": "Battery",
              "description": "The current battery level of the vacuum cleaner",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bat",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/bat",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "stuck": {
              "title": "Stuck",
              "description": "Whether the vacuum cleaner is stuck or not",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/stuck",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/stuck",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "binFull": {
              "title": "Bin Full",
              "description": "Whether the vacuum cleaner's bin is full or not",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bin/full",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/bin/full",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "start": {
              "title": "Start",
              "description": "Start the vacuum cleaner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "start"
                  ]
                }
              ]
            },
            "pause": {
              "title": "Pause",
              "description": "Pause the vacuum cleaner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "pause"
                  ]
                }
              ]
            },
            "return": {
              "title": "Return",
              "description": "Return the vacuum cleaner to its dock",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "return"
                  ]
                }
              ]
            },
            "stop": {
              "title": "Stop",
              "description": "Stop the vacuum cleaner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "stop"
                  ]
                }
              ]
            },
            "cleanSpot": {
              "title": "Clean Spot",
              "description": "Clean a specific spot",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "clean_spor"
                  ]
                }
              ]
            },
            "locate": {
              "title": "Locate",
              "description": "Locate the vacuum cleaner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "locate"
                  ]
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'apartment/vacuum/state'; payload: 'cleaning'; retain: 'true'\ntopic: 'apartment/vacuum/state'; payload: 'docked'; retain: 'true'\ntopic: 'apartment/vacuum/state'; payload: 'paused'; retain: 'true'\ntopic: 'apartment/vacuum/state'; payload: 'idle'; retain: 'true'\ntopic: 'apartment/vacuum/state'; payload: 'returning'; retain: 'true'\ntopic: 'apartment/vacuum/state'; payload: 'error'; retain: 'true'\ntopic: 'apartment/vacuum/bat'; payload: '94'; retain: 'true'\ntopic: 'apartment/vacuum/bat'; payload: '87'; retain: 'true'\ntopic: 'apartment/vacuum/bat'; payload: '98'; retain: 'true'\ntopic: 'apartment/vacuum/bat'; payload: '99'; retain: 'true'\ntopic: 'apartment/vacuum/bat'; payload: '96'; retain: 'true'\ntopic: 'apartment/vacuum/stuck'; payload: ''; retain: 'false'\ntopic: 'apartment/vacuum/stuck'; payload: ''; retain: 'false'\ntopic: 'apartment/vacuum/stuck'; payload: ''; retain: 'false'\ntopic: 'apartment/vacuum/stuck'; payload: ''; retain: 'false'\ntopic: 'apartment/vacuum/stuck'; payload: ''; retain: 'false'\ntopic: 'apartment/vacuum/bin/full'; payload: ''; retain: 'false'\ntopic: 'apartment/vacuum/bin/full'; payload: ''; retain: 'false'\ntopic: 'apartment/vacuum/bin/full'; payload: ''; retain: 'false'\ntopic: 'apartment/vacuum/bin/full'; payload: ''; retain: 'false'\ntopic: 'apartment/vacuum/bin/full'; payload: ''; retain: 'false'\ntopic: 'apartment/vacuum/cmnd'; payload: 'start'; retain: 'false'\ntopic: 'apartment/vacuum/cmnd'; payload: 'pause'; retain: 'false'\ntopic: 'apartment/vacuum/cmnd'; payload: 'return'; retain: 'false'\ntopic: 'apartment/vacuum/cmnd'; payload: 'stop'; retain: 'false'\ntopic: 'apartment/vacuum/cmnd'; payload: 'clean_spor'; retain: 'false'\ntopic: 'apartment/vacuum/cmnd'; payload: 'locate'; retain: 'false'\ntopic: 'apartment/vacuum/pause'; payload: 'true'; retain: 'false'\ntopic: 'apartment/vacuum/pause'; payload: 'false'; retain: 'false'\ntopic: 'apartment/vacuum/pause'; payload: 'true'; retain: 'false'\ntopic: 'apartment/vacuum/pause'; payload: 'false'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "WindowCover",
        "title": "My Smart Window Cover",
        "id": "urn:uuid:8504295f-d7e3-4c34-9c1d-d380816a6022",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "An automatic window cover",
        "properties": {
          "position": {
            "title": "Cover position",
            "description": "Position of the cover, it is either open or closed",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "OPEN",
              "CLOSED"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "home/cover/pos",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "positionChange": {
            "title": "Position Change",
            "description": "The position of the window cover was changed",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPENING",
                "CLOSING"
              ],
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "home/cover/chg",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          },
          "sunLight": {
            "title": "Sun light detection",
            "description": "The window cover has detected sunlight",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "home/cover/light",
                "mqv:retain": true,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "command": {
            "title": "Cover Commands",
            "description": "Change the cover position",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPEN",
                "CLOSE"
              ],
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": false,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "home/cover/cmd",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Cover",
          "id": "urn:dev:ops:cover-1234567890",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT cover device",
          "properties": {
            "position": {
              "title": "Position",
              "description": "The current position of the cover",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPEN",
                "CLOSED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/pos",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "light": {
              "title": "Light",
              "description": "The current light level of the cover",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/light",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "change": {
              "title": "Change",
              "description": "The cover is changing its position",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPENING",
                  "CLOSING"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/chg",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "open": {
              "title": "Open",
              "description": "Open the cover",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": [
                    "open"
                  ]
                }
              ]
            },
            "close": {
              "title": "Close",
              "description": "Close the cover",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": [
                    "close"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Cover",
          "id": "urn:dev:ops:cover-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT cover device",
          "properties": {
            "position": {
              "title": "Position",
              "description": "The current position of the cover",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPEN",
                "CLOSED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/pos",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "light": {
              "title": "Light",
              "description": "The current light level of the cover",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/light",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "change": {
              "title": "Change",
              "description": "The cover is changing position",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPENING",
                  "CLOSING"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/chg",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "open": {
              "title": "Open",
              "description": "Open the cover",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "close": {
              "title": "Close",
              "description": "Close the cover",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Cover",
          "id": "urn:dev:ops:cover-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT cover device",
          "properties": {
            "pos": {
              "title": "Position",
              "description": "The position of the cover",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPEN",
                "CLOSED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "text/plain",
                  "mqv:topic": "home/cover/pos",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "light": {
              "title": "Light",
              "description": "The light level of the cover",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "text/plain",
                  "mqv:topic": "home/cover/light",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "chg": {
              "title": "Change",
              "description": "The cover is changing",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPENING",
                  "CLOSING"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "text/plain",
                  "mqv:topic": "home/cover/chg",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "cmd": {
              "title": "Command",
              "description": "Send a command to the cover",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPEN",
                  "CLOSE"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "text/plain",
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Cover",
          "id": "urn:dev:ops:cover-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT cover device",
          "properties": {
            "coverPosition": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPEN",
                "CLOSED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/pos",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "coverLight": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/light",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "coverChange": {
              "title": "",
              "description": "",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPENING",
                  "CLOSING"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/chg",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "openCover": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "closeCover": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Cover",
          "id": "urn:dev:ops:cover-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart cover device that can be controlled and monitored remotely",
          "properties": {
            "coverPosition": {
              "title": "Cover Position",
              "description": "The current position of the cover",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPEN",
                "CLOSED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/pos",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "lightLevel": {
              "title": "Light Level",
              "description": "The current light level of the cover",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/light",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "coverChange": {
              "title": "Cover Change",
              "description": "The cover is changing position",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPENING",
                  "CLOSING"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/chg",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "openCover": {
              "title": "Open Cover",
              "description": "Opens the cover",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "closeCover": {
              "title": "Close Cover",
              "description": "Closes the cover",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Cover",
          "id": "urn:dev:ops:cover-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart cover that can be controlled remotely",
          "properties": {
            "position": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPEN",
                "CLOSED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/pos",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "light": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/light",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "positionChanged": {
              "title": "",
              "description": "",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPENING",
                  "CLOSING"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/chg",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "changePosition": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPEN",
                  "CLOSE"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Cover",
          "id": "urn:dev:ops:smart-cover-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart cover device that can be controlled remotely",
          "properties": {
            "position": {
              "title": "Position",
              "description": "The current position of the cover",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPEN",
                "CLOSED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/pos",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "light": {
              "title": "Light",
              "description": "The current light level of the cover",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/light",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "positionChanged": {
              "title": "Position Changed",
              "description": "The position of the cover has changed",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPENING",
                  "CLOSING"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/chg",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "changePosition": {
              "title": "Change Position",
              "description": "Change the position of the cover",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPEN",
                  "CLOSE"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Cover",
          "id": "urn:dev:ops:cover-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart cover device that can be controlled remotely",
          "properties": {
            "position": {
              "title": "Position",
              "description": "The current position of the cover",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPEN",
                "CLOSED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/pos",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "light": {
              "title": "Light",
              "description": "The current light level of the cover",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/light",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "change": {
              "title": "Change",
              "description": "The cover is changing position",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPENING",
                  "CLOSING"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/chg",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "open": {
              "title": "Open",
              "description": "Open the cover",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "close": {
              "title": "Close",
              "description": "Close the cover",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart IoT Cover",
          "id": "urn:dev:ops:cover-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT cover device",
          "properties": {
            "position": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPEN",
                "CLOSED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/pos",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "light": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/light",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "change": {
              "title": "",
              "description": "",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPENING",
                  "CLOSING"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/chg",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "open": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": [
                    "open"
                  ]
                }
              ]
            },
            "close": {
              "title": "",
              "description": "",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": [
                    "close"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Cover",
          "id": "urn:dev:ops:cover-1234",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart cover device",
          "properties": {
            "pos": {
              "title": "Position",
              "description": "The current position of the cover",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPEN",
                "CLOSED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/pos",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "light": {
              "title": "Light",
              "description": "The current light level of the cover",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/light",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "chg": {
              "title": "Change",
              "description": "Change the position of the cover",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPENING",
                  "CLOSING"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/chg",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            },
            "cmd": {
              "title": "Command",
              "description": "Send a command to the cover",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPEN",
                  "CLOSE"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": "application/json",
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'home/cover/pos'; payload: 'OPEN'; retain: 'true'\ntopic: 'home/cover/pos'; payload: 'CLOSED'; retain: 'true'\ntopic: 'home/cover/chg'; payload: 'OPENING'; retain: 'false'\ntopic: 'home/cover/chg'; payload: 'CLOSING'; retain: 'false'\ntopic: 'home/cover/light'; payload: 'LOW'; retain: 'true'\ntopic: 'home/cover/light'; payload: 'MEDIUM'; retain: 'true'\ntopic: 'home/cover/light'; payload: 'HIGH'; retain: 'true'\ntopic: 'home/cover/cmd'; payload: 'OPEN'; retain: 'false'\ntopic: 'home/cover/cmd'; payload: 'CLOSE'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    }
  ]
}