{
  "model": "gpt-4o",
  "temperature": 0.4,
  "number_of_retries": 10,
  "number_of_loops": 10,
  "time_elapsed": "00:44:56.414197Z",
  "results": [
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "HouseAlarm",
        "title": "Alarm Control Panel",
        "id": "urn:uuid:b9ce7480-3a89-4eb7-8754-e4bb6462f893",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "The alarm control panel of the house",
        "properties": {
          "state": {
            "title": "Sensor Status",
            "description": "Status of the Sensor",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "disarmed",
              "armed_home",
              "armed_away",
              "armed_night",
              "armed_vacation",
              "armed_custom_bypass",
              "pending",
              "triggered"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "home/alarm",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {},
        "actions": {
          "arm": {
            "title": "Arm",
            "description": "Arm",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "DISARM",
                "ARM_HOME",
                "ARM_AWAY",
                "ARM_NIGHT",
                "ARM_VACATION",
                "ARM_CUSTOM_BYPASS"
              ],
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "home/alarm/set",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartAlarmSystem",
          "title": "Smart Home Alarm System",
          "id": "urn:smart-home:alarm-system",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart home alarm system that can be armed and disarmed remotely.",
          "properties": {
            "alarmStatus": {
              "title": "Alarm Status",
              "description": "The current status of the alarm system.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "disarmed",
                "armed_home",
                "armed_away",
                "armed_night",
                "armed_vacation",
                "armed_custom_bypass",
                "pending",
                "triggered"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/alarm",
                  "contentType": null,
                  "mqv:topic": "home/alarm",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setAlarm": {
              "title": "Set Alarm",
              "description": "Set the alarm system to a specific mode.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DISARM",
                  "ARM_HOME",
                  "ARM_AWAY",
                  "ARM_NIGHT",
                  "ARM_VACATION",
                  "ARM_CUSTOM_BYPASS"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/alarm/set",
                  "contentType": null,
                  "mqv:topic": "home/alarm/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartAlarmSystem",
          "title": "Smart Home Alarm System",
          "id": "urn:smart:home:alarm",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart home alarm system with various arming modes and states.",
          "properties": {
            "alarmState": {
              "title": "Alarm State",
              "description": "The current state of the alarm system.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "disarmed",
                "armed_home",
                "armed_away",
                "armed_night",
                "armed_vacation",
                "armed_custom_bypass",
                "pending",
                "triggered"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/alarm",
                  "contentType": null,
                  "mqv:topic": "home/alarm",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setAlarmMode": {
              "title": "Set Alarm Mode",
              "description": "Set the mode of the alarm system.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DISARM",
                  "ARM_HOME",
                  "ARM_AWAY",
                  "ARM_NIGHT",
                  "ARM_VACATION",
                  "ARM_CUSTOM_BYPASS"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/alarm/set",
                  "contentType": null,
                  "mqv:topic": "home/alarm/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "AlarmSystem",
          "title": "Smart Home Alarm System",
          "id": "urn:smart-home:alarm-system",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart home alarm system that can be armed and disarmed remotely.",
          "properties": {
            "alarmStatus": {
              "title": "Alarm Status",
              "description": "Current status of the alarm system.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "disarmed",
                "armed_home",
                "armed_away",
                "armed_night",
                "armed_vacation",
                "armed_custom_bypass",
                "pending",
                "triggered"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/alarm",
                  "contentType": null,
                  "mqv:topic": "home/alarm",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setAlarm": {
              "title": "Set Alarm",
              "description": "Set the alarm system to a specific mode.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DISARM",
                  "ARM_HOME",
                  "ARM_AWAY",
                  "ARM_NIGHT",
                  "ARM_VACATION",
                  "ARM_CUSTOM_BYPASS"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/alarm/set",
                  "contentType": null,
                  "mqv:topic": "home/alarm/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "AlarmSystem",
          "title": "Smart Home Alarm System",
          "id": "urn:smart-home:alarm-system",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart home alarm system that can be armed and disarmed remotely.",
          "properties": {
            "alarmState": {
              "title": "Alarm State",
              "description": "The current state of the alarm system.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "disarmed",
                "armed_home",
                "armed_away",
                "armed_night",
                "armed_vacation",
                "armed_custom_bypass",
                "pending",
                "triggered"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/alarm",
                  "contentType": null,
                  "mqv:topic": "home/alarm",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setAlarmState": {
              "title": "Set Alarm State",
              "description": "Set the state of the alarm system.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DISARM",
                  "ARM_HOME",
                  "ARM_AWAY",
                  "ARM_NIGHT",
                  "ARM_VACATION",
                  "ARM_CUSTOM_BYPASS"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/alarm/set",
                  "contentType": null,
                  "mqv:topic": "home/alarm/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartAlarmSystem",
          "title": "Smart IoT Alarm Device",
          "id": "urn:smart:alarm:device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for managing home alarm systems.",
          "properties": {
            "alarmStatus": {
              "title": "Alarm Status",
              "description": "Current status of the alarm system.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "disarmed",
                "armed_home",
                "armed_away",
                "armed_night",
                "armed_vacation",
                "armed_custom_bypass",
                "pending",
                "triggered"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/alarm",
                  "contentType": null,
                  "mqv:topic": "home/alarm",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setAlarm": {
              "title": "Set Alarm",
              "description": "Set the alarm to a specific mode.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DISARM",
                  "ARM_HOME",
                  "ARM_AWAY",
                  "ARM_NIGHT",
                  "ARM_VACATION",
                  "ARM_CUSTOM_BYPASS"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/alarm/set",
                  "contentType": null,
                  "mqv:topic": "home/alarm/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartAlarmSystem",
          "title": "Smart Home Alarm System",
          "id": "urn:smart-home:alarm-system",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart home alarm system that can be armed or disarmed remotely.",
          "properties": {
            "alarmStatus": {
              "title": "Alarm Status",
              "description": "Current status of the alarm system.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "disarmed",
                "armed_home",
                "armed_away",
                "armed_night",
                "armed_vacation",
                "armed_custom_bypass",
                "pending",
                "triggered"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/alarm",
                  "contentType": null,
                  "mqv:topic": "home/alarm",
                  "mqv:retain": true,
                  "op": [
                    "observe"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setAlarm": {
              "title": "Set Alarm",
              "description": "Set the alarm to a specific mode.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DISARM",
                  "ARM_HOME",
                  "ARM_AWAY",
                  "ARM_NIGHT",
                  "ARM_VACATION",
                  "ARM_CUSTOM_BYPASS"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/alarm/set",
                  "contentType": null,
                  "mqv:topic": "home/alarm/set",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSecuritySystem",
          "title": "Smart Home Alarm System",
          "id": "urn:smart:home:alarm:system",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for managing home alarm states.",
          "properties": {
            "alarmState": {
              "title": "Alarm State",
              "description": "Current state of the home alarm system.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "disarmed",
                "armed_home",
                "armed_away",
                "armed_night",
                "armed_vacation",
                "armed_custom_bypass",
                "pending",
                "triggered"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/alarm",
                  "contentType": "text/plain",
                  "mqv:topic": "home/alarm",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setAlarmState": {
              "title": "Set Alarm State",
              "description": "Set the state of the home alarm system.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DISARM",
                  "ARM_HOME",
                  "ARM_AWAY",
                  "ARM_NIGHT",
                  "ARM_VACATION",
                  "ARM_CUSTOM_BYPASS"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/alarm/set",
                  "contentType": "text/plain",
                  "mqv:topic": "home/alarm/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartAlarmSystem",
          "title": "Smart Alarm System",
          "id": "urn:smart:alarm:system",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart alarm system for home security",
          "properties": {
            "alarmStatus": {
              "title": "Alarm Status",
              "description": "Current status of the alarm system",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "disarmed",
                "armed_home",
                "armed_away",
                "armed_night",
                "armed_vacation",
                "armed_custom_bypass",
                "pending",
                "triggered"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/alarm",
                  "contentType": null,
                  "mqv:topic": "home/alarm",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setAlarm": {
              "title": "Set Alarm",
              "description": "Set the alarm to a specific mode",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DISARM",
                  "ARM_HOME",
                  "ARM_AWAY",
                  "ARM_NIGHT",
                  "ARM_VACATION",
                  "ARM_CUSTOM_BYPASS"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/alarm/set",
                  "contentType": null,
                  "mqv:topic": "home/alarm/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartAlarmSystem",
          "title": "Smart Alarm System",
          "id": "urn:smart:alarm:system",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for managing home alarm states.",
          "properties": {
            "alarmState": {
              "title": "Alarm State",
              "description": "Current state of the alarm system.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "disarmed",
                "armed_home",
                "armed_away",
                "armed_night",
                "armed_vacation",
                "armed_custom_bypass",
                "pending",
                "triggered"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/alarm",
                  "contentType": null,
                  "mqv:topic": "home/alarm",
                  "mqv:retain": true,
                  "op": [
                    "observe",
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setAlarmState": {
              "title": "Set Alarm State",
              "description": "Set the state of the alarm system.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DISARM",
                  "ARM_HOME",
                  "ARM_AWAY",
                  "ARM_NIGHT",
                  "ARM_VACATION",
                  "ARM_CUSTOM_BYPASS"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/alarm/set",
                  "contentType": null,
                  "mqv:topic": "home/alarm/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartAlarmSystem",
          "title": "Smart Home Alarm System",
          "id": "urn:smart:home:alarm",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart home alarm system that can be armed and disarmed remotely.",
          "properties": {
            "alarmStatus": {
              "title": "Alarm Status",
              "description": "Current status of the alarm system",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "disarmed",
                "armed_home",
                "armed_away",
                "armed_night",
                "armed_vacation",
                "armed_custom_bypass",
                "pending",
                "triggered"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/alarm",
                  "contentType": null,
                  "mqv:topic": "home/alarm",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setAlarmMode": {
              "title": "Set Alarm Mode",
              "description": "Set the mode of the alarm system",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "DISARM",
                  "ARM_HOME",
                  "ARM_AWAY",
                  "ARM_NIGHT",
                  "ARM_VACATION",
                  "ARM_CUSTOM_BYPASS"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/alarm/set",
                  "contentType": null,
                  "mqv:topic": "home/alarm/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'home/alarm'; payload: 'disarmed'; retain: 'true'\ntopic: 'home/alarm'; payload: 'armed_home'; retain: 'true'\ntopic: 'home/alarm'; payload: 'armed_away'; retain: 'true'\ntopic: 'home/alarm'; payload: 'armed_night'; retain: 'true'\ntopic: 'home/alarm'; payload: 'armed_vacation'; retain: 'true'\ntopic: 'home/alarm'; payload: 'armed_custom_bypass'; retain: 'true'\ntopic: 'home/alarm'; payload: 'pending'; retain: 'true'\ntopic: 'home/alarm'; payload: 'triggered'; retain: 'true'\ntopic: 'home/alarm/set'; payload: 'DISARM'; retain: 'false'\ntopic: 'home/alarm/set'; payload: 'ARM_HOME'; retain: 'false'\ntopic: 'home/alarm/set'; payload: 'ARM_AWAY'; retain: 'false'\ntopic: 'home/alarm/set'; payload: 'ARM_NIGHT'; retain: 'false'\ntopic: 'home/alarm/set'; payload: 'ARM_VACATION'; retain: 'false'\ntopic: 'home/alarm/set'; payload: 'ARM_CUSTOM_BYPASS'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "WindowContact",
        "title": "Binary Window Contact",
        "id": "urn:uuid:24abed48-e9e3-4839-b1a4-f189f763ec89",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "A sensor that monitors the state of a window",
        "properties": {
          "state": {
            "title": "Window Sensor Status",
            "description": "The state of the Window",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "open",
              "closed",
              "unknown"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "home-assistant/window/contact",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "availability": {
            "title": "Sensor Availability",
            "description": "Availability status of the sensor",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "unavailable",
              "available"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "home-assistant/window/availability",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {},
        "actions": {}
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartWindowSensor",
          "title": "Smart Window Sensor",
          "id": "urn:smart:window:sensor",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring window status and availability.",
          "properties": {
            "contact": {
              "title": "Window Contact",
              "description": "Indicates the contact status of the window.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "open",
                "closed",
                "unknown"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home-assistant/window/contact",
                  "contentType": null,
                  "mqv:topic": "home-assistant/window/contact",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            },
            "availability": {
              "title": "Device Availability",
              "description": "Indicates the availability status of the window sensor.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unavailable",
                "available"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home-assistant/window/availability",
                  "contentType": null,
                  "mqv:topic": "home-assistant/window/availability",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartWindowSensor",
          "title": "Smart Window Sensor",
          "id": "urn:smart-window-sensor",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart sensor that monitors the state of a window and its availability.",
          "properties": {
            "contact": {
              "title": "Window Contact",
              "description": "Indicates whether the window is open, closed, or in an unknown state.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "open",
                "closed",
                "unknown"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home-assistant/window/contact",
                  "contentType": null,
                  "mqv:topic": "home-assistant/window/contact",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "availability": {
              "title": "Window Availability",
              "description": "Indicates whether the window sensor is available or unavailable.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unavailable",
                "available"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home-assistant/window/availability",
                  "contentType": null,
                  "mqv:topic": "home-assistant/window/availability",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Window Sensor",
          "id": "urn:smart-window-sensor",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring window state and availability.",
          "properties": {
            "contact": {
              "title": "Window Contact",
              "description": "Indicates whether the window is open, closed, or unknown.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "open",
                "closed",
                "unknown"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home-assistant/window/contact",
                  "contentType": null,
                  "mqv:topic": "home-assistant/window/contact",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "availability": {
              "title": "Window Availability",
              "description": "Indicates whether the window sensor is available or unavailable.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home-assistant/window/availability",
                  "contentType": null,
                  "mqv:topic": "home-assistant/window/availability",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartWindowSensor",
          "title": "Smart Window Sensor",
          "id": "urn:smart-window-sensor",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring window contact and availability status.",
          "properties": {
            "contact": {
              "title": "Window Contact",
              "description": "Indicates whether the window is open, closed, or unknown.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "open",
                "closed",
                "unknown"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home-assistant/window/contact",
                  "contentType": null,
                  "mqv:topic": "home-assistant/window/contact",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "availability": {
              "title": "Window Availability",
              "description": "Indicates whether the window sensor is available or unavailable.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home-assistant/window/availability",
                  "contentType": null,
                  "mqv:topic": "home-assistant/window/availability",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartWindowSensor",
          "title": "Smart Window Sensor",
          "id": "urn:smart-window-sensor",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart window sensor that detects the state of the window and its availability.",
          "properties": {
            "contact": {
              "title": "Window Contact State",
              "description": "Indicates whether the window is open, closed, or in an unknown state.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "open",
                "closed",
                "unknown"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home-assistant/window/contact",
                  "contentType": null,
                  "mqv:topic": "home-assistant/window/contact",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "availability": {
              "title": "Window Sensor Availability",
              "description": "Indicates whether the window sensor is available or unavailable.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home-assistant/window/availability",
                  "contentType": null,
                  "mqv:topic": "home-assistant/window/availability",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartWindowSensor",
          "title": "Smart Window Sensor",
          "id": "urn:smart-window-sensor",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "An IoT device that monitors the state of a window and its availability.",
          "properties": {
            "contact": {
              "title": "Window Contact",
              "description": "Indicates whether the window is open, closed, or unknown.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "open",
                "closed",
                "unknown"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home-assistant/window/contact",
                  "contentType": null,
                  "mqv:topic": "home-assistant/window/contact",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "availability": {
              "title": "Window Availability",
              "description": "Indicates whether the window sensor is available or unavailable.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home-assistant/window/availability",
                  "contentType": null,
                  "mqv:topic": "home-assistant/window/availability",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartWindowSensor",
          "title": "Smart Window Sensor",
          "id": "urn:smart-window-sensor",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that monitors the status of a window and its availability.",
          "properties": {
            "windowContact": {
              "title": "Window Contact",
              "description": "Indicates whether the window is open, closed, or unknown.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "open",
                "closed",
                "unknown"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home-assistant/window/contact",
                  "contentType": null,
                  "mqv:topic": "home-assistant/window/contact",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "windowAvailability": {
              "title": "Window Availability",
              "description": "Indicates whether the window sensor is available or unavailable.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home-assistant/window/availability",
                  "contentType": null,
                  "mqv:topic": "home-assistant/window/availability",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartWindowSensor",
          "title": "Smart Window Sensor",
          "id": "urn:smart-window-sensor",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring window status and availability.",
          "properties": {
            "windowContact": {
              "title": "Window Contact",
              "description": "Indicates whether the window is open, closed, or in an unknown state.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "open",
                "closed",
                "unknown"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home-assistant/window/contact",
                  "contentType": null,
                  "mqv:topic": "home-assistant/window/contact",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "windowAvailability": {
              "title": "Window Availability",
              "description": "Indicates whether the window sensor is available or unavailable.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home-assistant/window/availability",
                  "contentType": null,
                  "mqv:topic": "home-assistant/window/availability",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartWindowSensor",
          "title": "Smart Window Sensor",
          "id": "urn:smart-window-sensor",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart sensor that detects the state of a window and its availability.",
          "properties": {
            "contact": {
              "title": "Window Contact",
              "description": "Indicates whether the window is open, closed, or unknown.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "open",
                "closed",
                "unknown"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home-assistant/window/contact",
                  "contentType": null,
                  "mqv:topic": "home-assistant/window/contact",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "availability": {
              "title": "Window Availability",
              "description": "Indicates whether the window sensor is available or unavailable.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home-assistant/window/availability",
                  "contentType": null,
                  "mqv:topic": "home-assistant/window/availability",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartWindowSensor",
          "title": "Smart Window Sensor",
          "id": "urn:smart-window-sensor",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that monitors the state of a window and its availability.",
          "properties": {
            "contact": {
              "title": "Window Contact",
              "description": "Indicates whether the window is open, closed, or in an unknown state.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "open",
                "closed",
                "unknown"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home-assistant/window/contact",
                  "contentType": null,
                  "mqv:topic": "home-assistant/window/contact",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "availability": {
              "title": "Window Availability",
              "description": "Indicates whether the window sensor is available or unavailable.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home-assistant/window/availability",
                  "contentType": null,
                  "mqv:topic": "home-assistant/window/availability",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        }
      ],
      "msg_log": "topic: 'home-assistant/window/contact'; payload: 'open'; retain: 'true'\ntopic: 'home-assistant/window/contact'; payload: 'closed'; retain: 'true'\ntopic: 'home-assistant/window/contact'; payload: 'unknown'; retain: 'true'\ntopic: 'home-assistant/window/availability'; payload: 'unavailable'; retain: 'true'\ntopic: 'home-assistant/window/availability'; payload: 'available'; retain: 'true'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "SmartButton",
        "title": "Smart Push Button",
        "id": "urn:uuid:6f06a2fb-706e-41b4-9245-917c38c5c61f",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "A smart push button that can be used to automate stuff",
        "properties": {
          "availability": {
            "title": "Button Availability",
            "description": "Availability status of the button",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "unavailable",
              "available"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "home/bedroom/switch1/availability",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "pressed": {
            "title": "Button Press",
            "description": "Button Press",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "home/bedroom/switch1/pressed",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {}
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSwitch",
          "title": "Bedroom Switch 1",
          "id": "urn:home:bedroom:switch1",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch located in the bedroom.",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates whether the switch is available or unavailable.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/bedroom/switch1/availability",
                  "contentType": null,
                  "mqv:topic": "home/bedroom/switch1/availability",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "pressed": {
              "title": "Pressed",
              "description": "Indicates when the switch has been pressed.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/bedroom/switch1/pressed",
                  "contentType": null,
                  "mqv:topic": "home/bedroom/switch1/pressed",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSwitch",
          "title": "Bedroom Switch 1",
          "id": "urn:home:bedroom:switch1",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch located in the bedroom.",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates if the switch is available or unavailable",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/bedroom/switch1/availability",
                  "contentType": null,
                  "mqv:topic": "home/bedroom/switch1/availability",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "pressed": {
              "title": "Pressed",
              "description": "Indicates when the switch is pressed",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/bedroom/switch1/pressed",
                  "contentType": null,
                  "mqv:topic": "home/bedroom/switch1/pressed",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSwitch",
          "title": "Bedroom Switch 1",
          "id": "urn:uuid:bedroom-switch-1",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch located in the bedroom.",
          "properties": {
            "availability": {
              "title": "Switch Availability",
              "description": "Indicates if the switch is available or unavailable.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/bedroom/switch1/availability",
                  "contentType": null,
                  "mqv:topic": "home/bedroom/switch1/availability",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "pressed": {
              "title": "Switch Pressed",
              "description": "Event triggered when the switch is pressed.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/bedroom/switch1/pressed",
                  "contentType": null,
                  "mqv:topic": "home/bedroom/switch1/pressed",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSwitch",
          "title": "Bedroom Switch",
          "id": "urn:home:bedroom:switch1",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch located in the bedroom.",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates if the switch is available or unavailable.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/bedroom/switch1/availability",
                  "contentType": null,
                  "mqv:topic": "home/bedroom/switch1/availability",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "pressed": {
              "title": "Pressed",
              "description": "Event triggered when the switch is pressed.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/bedroom/switch1/pressed",
                  "contentType": null,
                  "mqv:topic": "home/bedroom/switch1/pressed",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSwitch",
          "title": "Bedroom Switch",
          "id": "urn:home:bedroom:switch1",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch located in the bedroom that can be pressed and reports availability.",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates whether the switch is available or unavailable.",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/bedroom/switch1/availability",
                  "contentType": null,
                  "mqv:topic": "home/bedroom/switch1/availability",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "pressed": {
              "title": "Pressed",
              "description": "An event that is triggered when the switch is pressed.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/bedroom/switch1/pressed",
                  "contentType": null,
                  "mqv:topic": "home/bedroom/switch1/pressed",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSwitch",
          "title": "Bedroom Switch 1",
          "id": "urn:home:bedroom:switch1",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch located in the bedroom with availability and press detection.",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates whether the switch is available or unavailable.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/bedroom/switch1/availability",
                  "contentType": "text/plain",
                  "mqv:topic": "home/bedroom/switch1/availability",
                  "mqv:retain": true,
                  "op": [
                    "observe",
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "pressed": {
              "title": "Pressed",
              "description": "Event triggered when the switch is pressed.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/bedroom/switch1/pressed",
                  "contentType": "text/plain",
                  "mqv:topic": "home/bedroom/switch1/pressed",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSwitch",
          "title": "Bedroom Switch",
          "id": "urn:home:bedroom:switch1",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch located in the bedroom.",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates if the switch is available or unavailable.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/bedroom/switch1/availability",
                  "contentType": null,
                  "mqv:topic": "home/bedroom/switch1/availability",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "pressed": {
              "title": "Pressed",
              "description": "Event triggered when the switch is pressed.",
              "data": {
                "title": "",
                "description": "No data is sent with the pressed event.",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/bedroom/switch1/pressed",
                  "contentType": null,
                  "mqv:topic": "home/bedroom/switch1/pressed",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSwitch",
          "title": "Bedroom Switch 1",
          "id": "urn:home:bedroom:switch1",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch located in the bedroom.",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates if the switch is available or unavailable.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/bedroom/switch1/availability",
                  "contentType": null,
                  "mqv:topic": "home/bedroom/switch1/availability",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "pressed": {
              "title": "Pressed",
              "description": "Triggered when the switch is pressed.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/bedroom/switch1/pressed",
                  "contentType": null,
                  "mqv:topic": "home/bedroom/switch1/pressed",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSwitch",
          "title": "Bedroom Switch",
          "id": "urn:home:bedroom:switch1",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch located in the bedroom",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates if the switch is available or unavailable",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/bedroom/switch1/availability",
                  "contentType": null,
                  "mqv:topic": "home/bedroom/switch1/availability",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "pressed": {
              "title": "Pressed",
              "description": "Event triggered when the switch is pressed",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/bedroom/switch1/pressed",
                  "contentType": null,
                  "mqv:topic": "home/bedroom/switch1/pressed",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSwitch",
          "title": "Bedroom Switch",
          "id": "urn:home:bedroom:switch1",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch located in the bedroom.",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates if the switch is available or unavailable.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "available",
                "unavailable"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/bedroom/switch1/availability",
                  "contentType": null,
                  "mqv:topic": "home/bedroom/switch1/availability",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "pressed": {
              "title": "Pressed",
              "description": "Event triggered when the switch is pressed.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/bedroom/switch1/pressed",
                  "contentType": null,
                  "mqv:topic": "home/bedroom/switch1/pressed",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        }
      ],
      "msg_log": "topic: 'home/bedroom/switch1/availability'; payload: 'unavailable'; retain: 'true'\ntopic: 'home/bedroom/switch1/availability'; payload: 'available'; retain: 'true'\ntopic: 'home/bedroom/switch1/pressed'; payload: ''; retain: 'false'\ntopic: 'home/bedroom/switch1/pressed'; payload: ''; retain: 'false'\ntopic: 'home/bedroom/switch1/pressed'; payload: ''; retain: 'false'\ntopic: 'home/bedroom/switch1/pressed'; payload: ''; retain: 'false'\ntopic: 'home/bedroom/switch1/pressed'; payload: ''; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "Doorbell",
        "title": "My Frontdoor Dorbell",
        "id": "urn:uuid:bc4c5201-1540-4229-871f-37c9ea7058a1",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "The front doorbell",
        "properties": {
          "availability": {
            "title": "Availability",
            "description": "Availability status of the doorbell",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "ONLINE",
              "OFFLINE"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "home/front/db/avail",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "ring": {
            "title": "Doorbell Ringed",
            "description": "Doorbell ringed",
            "data": {
              "title": "Timestamp",
              "description": "POSIX timestamp when the bell was rung",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "home/front/db/ring",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {}
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDoorbell",
          "title": "Smart Doorbell",
          "id": "urn:smart:doorbell:001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart doorbell device that reports availability and ring events.",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates whether the doorbell is online or offline.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/front/db/avail",
                  "contentType": null,
                  "mqv:topic": "home/front/db/avail",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "ring": {
              "title": "Ring Event",
              "description": "An event that is triggered when the doorbell rings.",
              "data": {
                "title": "",
                "description": "Timestamp of the ring event.",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/front/db/ring",
                  "contentType": null,
                  "mqv:topic": "home/front/db/ring",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDoorbell",
          "title": "Front Door Smart Doorbell",
          "id": "urn:home:front:db",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart doorbell at the front door that can detect availability and ring events.",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates if the doorbell is online or offline.",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/front/db/avail",
                  "contentType": null,
                  "mqv:topic": "home/front/db/avail",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "ring": {
              "title": "Ring Event",
              "description": "Triggered when the doorbell rings.",
              "data": {
                "title": "",
                "description": "Timestamp of the ring event.",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/front/db/ring",
                  "contentType": null,
                  "mqv:topic": "home/front/db/ring",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDoorbell",
          "title": "Smart Doorbell",
          "id": "urn:smart:doorbell",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart doorbell device that can report its availability and log ring events.",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates whether the doorbell is online or offline.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/front/db/avail",
                  "contentType": null,
                  "mqv:topic": "home/front/db/avail",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "ring": {
              "title": "Ring Event",
              "description": "An event that is triggered when the doorbell rings.",
              "data": {
                "title": "",
                "description": "Timestamp of the ring event.",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/front/db/ring",
                  "contentType": null,
                  "mqv:topic": "home/front/db/ring",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDoorbell",
          "title": "Smart Doorbell",
          "id": "urn:smart:doorbell",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart doorbell that reports its availability and logs ring events.",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates whether the doorbell is online or offline.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/front/db/avail",
                  "contentType": null,
                  "mqv:topic": "home/front/db/avail",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "ring": {
              "title": "Ring Event",
              "description": "An event that logs the timestamp when the doorbell rings.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/front/db/ring",
                  "contentType": null,
                  "mqv:topic": "home/front/db/ring",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDoorbell",
          "title": "Smart Doorbell",
          "id": "urn:smart:doorbell:001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart doorbell device that reports its availability status and logs ring events.",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "The online/offline status of the doorbell.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/front/db/avail",
                  "contentType": null,
                  "mqv:topic": "home/front/db/avail",
                  "mqv:retain": true,
                  "op": [
                    "observe",
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "ring": {
              "title": "Ring Event",
              "description": "An event triggered when the doorbell is rung.",
              "data": {
                "title": "Timestamp",
                "description": "The timestamp when the doorbell was rung.",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/front/db/ring",
                  "contentType": null,
                  "mqv:topic": "home/front/db/ring",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDoorbell",
          "title": "Smart Doorbell",
          "id": "urn:dev:ops:smart-doorbell-001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart doorbell that can report its availability and log ring events.",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates whether the doorbell is online or offline.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/front/db/avail",
                  "contentType": null,
                  "mqv:topic": "home/front/db/avail",
                  "mqv:retain": true,
                  "op": [
                    "observe",
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "ring": {
              "title": "Ring Event",
              "description": "Emits a timestamp when the doorbell rings.",
              "data": {
                "title": "",
                "description": "Timestamp of the ring event.",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/front/db/ring",
                  "contentType": null,
                  "mqv:topic": "home/front/db/ring",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDoorbell",
          "title": "Smart Doorbell",
          "id": "urn:smart:doorbell:front",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart doorbell located at the front door",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates if the doorbell is online or offline",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/front/db/avail",
                  "contentType": null,
                  "mqv:topic": "home/front/db/avail",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "ring": {
              "title": "Ring Event",
              "description": "Triggered when the doorbell rings",
              "data": {
                "title": "Timestamp",
                "description": "The timestamp when the doorbell was rung",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/front/db/ring",
                  "contentType": null,
                  "mqv:topic": "home/front/db/ring",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDoorbell",
          "title": "Smart Doorbell",
          "id": "urn:smart:doorbell:001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart doorbell that reports its availability and logs ring events.",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates whether the doorbell is online or offline.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/front/db/avail",
                  "contentType": null,
                  "mqv:topic": "home/front/db/avail",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "ring": {
              "title": "Ring Event",
              "description": "Event triggered when the doorbell rings.",
              "data": {
                "title": "",
                "description": "Timestamp of the ring event.",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/front/db/ring",
                  "contentType": null,
                  "mqv:topic": "home/front/db/ring",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDoorbell",
          "title": "Smart Doorbell",
          "id": "urn:smart:doorbell",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart doorbell device that can report its availability and ring events.",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates whether the doorbell is online or offline.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/front/db/avail",
                  "contentType": null,
                  "mqv:topic": "home/front/db/avail",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "ring": {
              "title": "Ring Event",
              "description": "An event that occurs when the doorbell rings.",
              "data": {
                "title": "",
                "description": "Timestamp of the ring event.",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/front/db/ring",
                  "contentType": null,
                  "mqv:topic": "home/front/db/ring",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDoorbell",
          "title": "Smart Doorbell",
          "id": "urn:smart:doorbell",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart doorbell that reports its availability status and logs ring events.",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates whether the doorbell is online or offline.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/front/db/avail",
                  "contentType": null,
                  "mqv:topic": "home/front/db/avail",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "ringEvent": {
              "title": "Ring Event",
              "description": "Triggered when the doorbell rings.",
              "data": {
                "title": "",
                "description": "Timestamp of the ring event.",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/front/db/ring",
                  "contentType": null,
                  "mqv:topic": "home/front/db/ring",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        }
      ],
      "msg_log": "topic: 'home/front/db/avail'; payload: 'ONLINE'; retain: 'true'\ntopic: 'home/front/db/avail'; payload: 'OFFLINE'; retain: 'true'\ntopic: 'home/front/db/ring'; payload: '1734510816'; retain: 'false'\ntopic: 'home/front/db/ring'; payload: '1734511116'; retain: 'false'\ntopic: 'home/front/db/ring'; payload: '1734511416'; retain: 'false'\ntopic: 'home/front/db/ring'; payload: '1734511716'; retain: 'false'\ntopic: 'home/front/db/ring'; payload: '1734512016'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "ElectricVehicle",
        "title": "Electric Vehilce",
        "id": "urn:uuid:609e0187-2c32-47d5-ab77-2c831aab3bc5",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "An electric vehicle",
        "properties": {
          "chargeStatus": {
            "title": "Status Code",
            "description": "charge status compliant to SAE_J1772",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "A",
              "B",
              "C",
              "D",
              "E",
              "F"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/charge/status",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "SoC": {
            "title": "State of Charge",
            "description": "State of Charge of EV in percent",
            "observable": true,
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/soc",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "charged": {
            "title": "Charged",
            "description": "Energy that has been charged",
            "observable": true,
            "type": "number",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/charged",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "capacity": {
            "title": "Capacity",
            "description": "Capacity of the EV battery",
            "observable": true,
            "type": "number",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/capacity",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "range": {
            "title": "Range",
            "description": "Range in km that is left",
            "observable": true,
            "type": "number",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/range",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "odometer": {
            "title": "Odometer",
            "description": "Number of km that the EV has been driven",
            "observable": true,
            "type": "number",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/odometer",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "power": {
            "title": "Power",
            "description": "Current power consumption of charger",
            "observable": true,
            "type": "number",
            "minimum": -3600,
            "maximum": 3600,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/charger/power",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "charging": {
            "title": "EV Charging",
            "description": "Charging event EV",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "START",
                "STOP"
              ],
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/charging",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "setChargeLimit": {
            "title": "Charging Limit",
            "description": "Set the charging limit of EV",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/charging/limit",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartEVCharger",
          "title": "Smart EV Charger",
          "id": "urn:smart:ev:charger",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring and controlling EV charging in a garage.",
          "properties": {
            "chargeStatus": {
              "title": "Charge Status",
              "description": "The current status of the EV charging process.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charge/status",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charge/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "stateOfCharge": {
              "title": "State of Charge",
              "description": "The current state of charge of the EV battery.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/soc",
                  "contentType": null,
                  "mqv:topic": "garage/ev/soc",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "chargedEnergy": {
              "title": "Charged Energy",
              "description": "The amount of energy charged into the EV.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charged",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charged",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "batteryCapacity": {
              "title": "Battery Capacity",
              "description": "The total capacity of the EV battery.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/capacity",
                  "contentType": null,
                  "mqv:topic": "garage/ev/capacity",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "range": {
              "title": "Range",
              "description": "The estimated range of the EV based on current charge.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/range",
                  "contentType": null,
                  "mqv:topic": "garage/ev/range",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "odometer": {
              "title": "Odometer",
              "description": "The total distance traveled by the EV.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/odometer",
                  "contentType": null,
                  "mqv:topic": "garage/ev/odometer",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "chargerPower": {
              "title": "Charger Power",
              "description": "The current power of the charger.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "startCharging": {
              "title": "Start Charging",
              "description": "Start the EV charging process.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "START"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "stopCharging": {
              "title": "Stop Charging",
              "description": "Stop the EV charging process.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "STOP"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setChargingLimit": {
              "title": "Set Charging Limit",
              "description": "Set the charging limit for the EV.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 10,
                "maximum": 85,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging/limit",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging/limit",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartEVCharger",
          "title": "Smart EV Charger",
          "id": "urn:garage:ev:charger",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring and controlling electric vehicle charging in a garage.",
          "properties": {
            "chargeStatus": {
              "title": "Charge Status",
              "description": "Current status of the EV charging process",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charge/status",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charge/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "stateOfCharge": {
              "title": "State of Charge",
              "description": "Current state of charge of the EV battery in percentage",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/soc",
                  "contentType": null,
                  "mqv:topic": "garage/ev/soc",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "energyCharged": {
              "title": "Energy Charged",
              "description": "Total energy charged to the EV in kWh",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charged",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charged",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "batteryCapacity": {
              "title": "Battery Capacity",
              "description": "Total capacity of the EV battery in kWh",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/capacity",
                  "contentType": null,
                  "mqv:topic": "garage/ev/capacity",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "range": {
              "title": "Range",
              "description": "Estimated range of the EV in kilometers",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/range",
                  "contentType": null,
                  "mqv:topic": "garage/ev/range",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "odometer": {
              "title": "Odometer",
              "description": "Total distance traveled by the EV in kilometers",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/odometer",
                  "contentType": null,
                  "mqv:topic": "garage/ev/odometer",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "chargerPower": {
              "title": "Charger Power",
              "description": "Current power level of the charger in watts",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "charging": {
              "title": "Charging",
              "description": "Event indicating the start or stop of charging",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "START",
                  "STOP"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "setChargingLimit": {
              "title": "Set Charging Limit",
              "description": "Action to set the charging limit",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging/limit",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging/limit",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartEVCharger",
          "title": "Smart EV Charger",
          "id": "urn:smart-ev-charger",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring and controlling EV charging in the garage.",
          "properties": {
            "chargeStatus": {
              "title": "Charge Status",
              "description": "The current status of the EV charging process.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charge/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "stateOfCharge": {
              "title": "State of Charge",
              "description": "The current state of charge of the EV battery.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "garage/ev/soc",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "chargedAmount": {
              "title": "Charged Amount",
              "description": "The amount of energy charged into the EV battery.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charged",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "batteryCapacity": {
              "title": "Battery Capacity",
              "description": "The total capacity of the EV battery.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "garage/ev/capacity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "range": {
              "title": "Range",
              "description": "The estimated range of the EV based on the current charge.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "garage/ev/range",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "odometer": {
              "title": "Odometer",
              "description": "The total distance traveled by the EV.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "garage/ev/odometer",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "chargerPower": {
              "title": "Charger Power",
              "description": "The current power output of the charger.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {
            "chargingEvent": {
              "title": "Charging Event",
              "description": "An event indicating the start or stop of the charging process.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "START",
                  "STOP"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          },
          "actions": {
            "setChargingLimit": {
              "title": "Set Charging Limit",
              "description": "Set a limit for the charging process.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging/limit",
                  "mqv:retain": false,
                  "op": []
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartEVCharger",
          "title": "Smart EV Charger",
          "id": "urn:example:smart-ev-charger",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring and controlling EV charging in a garage.",
          "properties": {
            "chargeStatus": {
              "title": "Charge Status",
              "description": "The current status of the EV charging process.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charge/status",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charge/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "stateOfCharge": {
              "title": "State of Charge",
              "description": "The current state of charge of the EV battery.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/soc",
                  "contentType": null,
                  "mqv:topic": "garage/ev/soc",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "chargedEnergy": {
              "title": "Charged Energy",
              "description": "The amount of energy charged into the EV battery.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charged",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charged",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "batteryCapacity": {
              "title": "Battery Capacity",
              "description": "The total capacity of the EV battery.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/capacity",
                  "contentType": null,
                  "mqv:topic": "garage/ev/capacity",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "range": {
              "title": "Range",
              "description": "The estimated range of the EV based on current charge.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/range",
                  "contentType": null,
                  "mqv:topic": "garage/ev/range",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "odometer": {
              "title": "Odometer",
              "description": "The total distance traveled by the EV.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/odometer",
                  "contentType": null,
                  "mqv:topic": "garage/ev/odometer",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "chargerPower": {
              "title": "Charger Power",
              "description": "The current power level of the charger.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "startStopCharging": {
              "title": "Start/Stop Charging",
              "description": "Action to start or stop the charging process.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "START",
                  "STOP"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setChargingLimit": {
              "title": "Set Charging Limit",
              "description": "Set the limit for the charging process.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging/limit",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging/limit",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartEVCharger",
          "title": "Smart EV Charger",
          "id": "urn:smart:ev:charger",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring and controlling EV charging.",
          "properties": {
            "chargeStatus": {
              "title": "Charge Status",
              "description": "The current status of the EV charging process.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charge/status",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charge/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "stateOfCharge": {
              "title": "State of Charge",
              "description": "The current state of charge of the EV battery.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/soc",
                  "contentType": null,
                  "mqv:topic": "garage/ev/soc",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "chargedEnergy": {
              "title": "Charged Energy",
              "description": "The amount of energy charged to the EV.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charged",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charged",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "batteryCapacity": {
              "title": "Battery Capacity",
              "description": "The total capacity of the EV battery.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/capacity",
                  "contentType": null,
                  "mqv:topic": "garage/ev/capacity",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "estimatedRange": {
              "title": "Estimated Range",
              "description": "The estimated range of the EV based on current charge.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/range",
                  "contentType": null,
                  "mqv:topic": "garage/ev/range",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "odometer": {
              "title": "Odometer",
              "description": "The total distance traveled by the EV.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/odometer",
                  "contentType": null,
                  "mqv:topic": "garage/ev/odometer",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "chargerPower": {
              "title": "Charger Power",
              "description": "The current power level of the charger.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "startStopCharging": {
              "title": "Start/Stop Charging",
              "description": "Action to start or stop the charging process.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "START",
                  "STOP"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setChargingLimit": {
              "title": "Set Charging Limit",
              "description": "Set the charging limit for the EV.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging/limit",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging/limit",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartEVCharger",
          "title": "Smart EV Charger",
          "id": "urn:smart:ev:charger",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring and controlling electric vehicle charging in a garage.",
          "properties": {
            "chargeStatus": {
              "title": "Charge Status",
              "description": "The current status of the EV charging process.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charge/status",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charge/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "stateOfCharge": {
              "title": "State of Charge",
              "description": "The current state of charge of the EV battery as a percentage.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/soc",
                  "contentType": null,
                  "mqv:topic": "garage/ev/soc",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "chargedEnergy": {
              "title": "Charged Energy",
              "description": "The total energy charged into the EV battery.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charged",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charged",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "batteryCapacity": {
              "title": "Battery Capacity",
              "description": "The total capacity of the EV battery.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/capacity",
                  "contentType": null,
                  "mqv:topic": "garage/ev/capacity",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "range": {
              "title": "Range",
              "description": "The estimated range of the EV based on current charge.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/range",
                  "contentType": null,
                  "mqv:topic": "garage/ev/range",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "odometer": {
              "title": "Odometer",
              "description": "The total distance traveled by the EV.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/odometer",
                  "contentType": null,
                  "mqv:topic": "garage/ev/odometer",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "chargerPower": {
              "title": "Charger Power",
              "description": "The current power output of the charger.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "chargingState": {
              "title": "Charging State",
              "description": "Event indicating the start or stop of the charging process.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "START",
                  "STOP"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "setChargingLimit": {
              "title": "Set Charging Limit",
              "description": "Set the limit for charging the EV battery.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging/limit",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging/limit",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartEVCharger",
          "title": "Smart EV Charger",
          "id": "urn:smart:ev:charger",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring and controlling EV charging.",
          "properties": {
            "chargeStatus": {
              "title": "Charge Status",
              "description": "The current status of the EV charging process.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charge/status",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charge/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "stateOfCharge": {
              "title": "State of Charge",
              "description": "The current state of charge of the EV battery in percentage.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/soc",
                  "contentType": null,
                  "mqv:topic": "garage/ev/soc",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "energyCharged": {
              "title": "Energy Charged",
              "description": "The total energy charged to the EV battery in kWh.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charged",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charged",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "batteryCapacity": {
              "title": "Battery Capacity",
              "description": "The total capacity of the EV battery in kWh.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/capacity",
                  "contentType": null,
                  "mqv:topic": "garage/ev/capacity",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "range": {
              "title": "Range",
              "description": "The estimated range of the EV in kilometers.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/range",
                  "contentType": null,
                  "mqv:topic": "garage/ev/range",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "odometer": {
              "title": "Odometer",
              "description": "The total distance traveled by the EV in kilometers.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/odometer",
                  "contentType": null,
                  "mqv:topic": "garage/ev/odometer",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "chargerPower": {
              "title": "Charger Power",
              "description": "The current power of the charger in watts.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "charging": {
              "title": "Charging Event",
              "description": "Event indicating the start or stop of the charging process.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "START",
                  "STOP"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "setChargingLimit": {
              "title": "Set Charging Limit",
              "description": "Set the charging limit for the EV battery.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging/limit",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging/limit",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartEVCharger",
          "title": "Smart EV Charger",
          "id": "urn:smart-ev-charger",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring and controlling EV charging in a garage.",
          "properties": {
            "chargeStatus": {
              "title": "Charge Status",
              "description": "The current status of the EV charge.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charge/status",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charge/status",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "stateOfCharge": {
              "title": "State of Charge",
              "description": "The current state of charge of the EV battery.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/soc",
                  "contentType": null,
                  "mqv:topic": "garage/ev/soc",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "chargedEnergy": {
              "title": "Charged Energy",
              "description": "The total energy charged to the EV.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charged",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charged",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "batteryCapacity": {
              "title": "Battery Capacity",
              "description": "The capacity of the EV battery.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/capacity",
                  "contentType": null,
                  "mqv:topic": "garage/ev/capacity",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "range": {
              "title": "Range",
              "description": "The estimated range of the EV.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/range",
                  "contentType": null,
                  "mqv:topic": "garage/ev/range",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "odometer": {
              "title": "Odometer",
              "description": "The total distance traveled by the EV.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/odometer",
                  "contentType": null,
                  "mqv:topic": "garage/ev/odometer",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "chargerPower": {
              "title": "Charger Power",
              "description": "The current power of the charger.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "startStopCharging": {
              "title": "Start/Stop Charging",
              "description": "Action to start or stop charging the EV.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "START",
                  "STOP"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setChargingLimit": {
              "title": "Set Charging Limit",
              "description": "Action to set the charging limit.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging/limit",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging/limit",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "IoTDevice",
          "title": "Smart EV Charger",
          "id": "urn:smart-ev-charger",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring and controlling EV charging in a garage.",
          "properties": {
            "chargeStatus": {
              "title": "Charge Status",
              "description": "The current status of the EV charging process.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charge/status",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charge/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "stateOfCharge": {
              "title": "State of Charge",
              "description": "The current state of charge of the EV battery.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/soc",
                  "contentType": null,
                  "mqv:topic": "garage/ev/soc",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "chargedEnergy": {
              "title": "Charged Energy",
              "description": "The amount of energy charged into the EV battery.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charged",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charged",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "batteryCapacity": {
              "title": "Battery Capacity",
              "description": "The total capacity of the EV battery.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/capacity",
                  "contentType": null,
                  "mqv:topic": "garage/ev/capacity",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "range": {
              "title": "Range",
              "description": "The estimated range of the EV based on current charge.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/range",
                  "contentType": null,
                  "mqv:topic": "garage/ev/range",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "odometer": {
              "title": "Odometer",
              "description": "The total distance traveled by the EV.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/odometer",
                  "contentType": null,
                  "mqv:topic": "garage/ev/odometer",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "chargerPower": {
              "title": "Charger Power",
              "description": "The current power output/input of the charger.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "charging": {
              "title": "Charging Event",
              "description": "Event indicating the start or stop of the charging process.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "START",
                  "STOP"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "setChargingLimit": {
              "title": "Set Charging Limit",
              "description": "Set the charging limit for the EV.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging/limit",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging/limit",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartEVCharger",
          "title": "Smart EV Charger",
          "id": "urn:example:smartevcharger",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring and controlling electric vehicle charging in a garage.",
          "properties": {
            "chargeStatus": {
              "title": "Charge Status",
              "description": "The current status of the EV charging process.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charge/status",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charge/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "stateOfCharge": {
              "title": "State of Charge",
              "description": "The current state of charge of the EV battery as a percentage.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/soc",
                  "contentType": null,
                  "mqv:topic": "garage/ev/soc",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "chargedEnergy": {
              "title": "Charged Energy",
              "description": "The amount of energy charged into the EV battery.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charged",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charged",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "batteryCapacity": {
              "title": "Battery Capacity",
              "description": "The total capacity of the EV battery.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/capacity",
                  "contentType": null,
                  "mqv:topic": "garage/ev/capacity",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "estimatedRange": {
              "title": "Estimated Range",
              "description": "The estimated driving range of the EV based on the current state of charge.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/range",
                  "contentType": null,
                  "mqv:topic": "garage/ev/range",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "odometer": {
              "title": "Odometer",
              "description": "The total distance traveled by the EV.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/odometer",
                  "contentType": null,
                  "mqv:topic": "garage/ev/odometer",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "chargerPower": {
              "title": "Charger Power",
              "description": "The current power output of the charger.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "charging": {
              "title": "Charging Control",
              "description": "Start or stop the charging process.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "START",
                  "STOP"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setChargingLimit": {
              "title": "Set Charging Limit",
              "description": "Set the charging limit for the EV battery.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charging/limit",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charging/limit",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'garage/ev/charge/status'; payload: 'A'; retain: 'true'\ntopic: 'garage/ev/charge/status'; payload: 'B'; retain: 'true'\ntopic: 'garage/ev/charge/status'; payload: 'C'; retain: 'true'\ntopic: 'garage/ev/charge/status'; payload: 'D'; retain: 'true'\ntopic: 'garage/ev/charge/status'; payload: 'E'; retain: 'true'\ntopic: 'garage/ev/charge/status'; payload: 'F'; retain: 'true'\ntopic: 'garage/ev/soc'; payload: '11.981'; retain: 'true'\ntopic: 'garage/ev/soc'; payload: '90.793'; retain: 'true'\ntopic: 'garage/ev/soc'; payload: '25.688'; retain: 'true'\ntopic: 'garage/ev/soc'; payload: '29.505'; retain: 'true'\ntopic: 'garage/ev/soc'; payload: '70.093'; retain: 'true'\ntopic: 'garage/ev/charged'; payload: '183.682'; retain: 'true'\ntopic: 'garage/ev/charged'; payload: '107.479'; retain: 'true'\ntopic: 'garage/ev/charged'; payload: '127.188'; retain: 'true'\ntopic: 'garage/ev/charged'; payload: '115.69'; retain: 'true'\ntopic: 'garage/ev/charged'; payload: '233.386'; retain: 'true'\ntopic: 'garage/ev/capacity'; payload: '195.145'; retain: 'true'\ntopic: 'garage/ev/capacity'; payload: '138.033'; retain: 'true'\ntopic: 'garage/ev/capacity'; payload: '206.522'; retain: 'true'\ntopic: 'garage/ev/capacity'; payload: '146.89'; retain: 'true'\ntopic: 'garage/ev/capacity'; payload: '220.74'; retain: 'true'\ntopic: 'garage/ev/range'; payload: '48.105'; retain: 'true'\ntopic: 'garage/ev/range'; payload: '162.327'; retain: 'true'\ntopic: 'garage/ev/range'; payload: '54.173'; retain: 'true'\ntopic: 'garage/ev/range'; payload: '40.41'; retain: 'true'\ntopic: 'garage/ev/range'; payload: '153.996'; retain: 'true'\ntopic: 'garage/ev/odometer'; payload: '245.846'; retain: 'true'\ntopic: 'garage/ev/odometer'; payload: '113.924'; retain: 'true'\ntopic: 'garage/ev/odometer'; payload: '68.962'; retain: 'true'\ntopic: 'garage/ev/odometer'; payload: '169.253'; retain: 'true'\ntopic: 'garage/ev/odometer'; payload: '136.31'; retain: 'true'\ntopic: 'garage/ev/charger/power'; payload: '510.28'; retain: 'true'\ntopic: 'garage/ev/charger/power'; payload: '-3359.705'; retain: 'true'\ntopic: 'garage/ev/charger/power'; payload: '953.082'; retain: 'true'\ntopic: 'garage/ev/charger/power'; payload: '-1676.384'; retain: 'true'\ntopic: 'garage/ev/charger/power'; payload: '-3210.695'; retain: 'true'\ntopic: 'garage/ev/charging'; payload: 'START'; retain: 'false'\ntopic: 'garage/ev/charging'; payload: 'STOP'; retain: 'false'\ntopic: 'garage/ev/charging/limit'; payload: '48'; retain: 'false'\ntopic: 'garage/ev/charging/limit'; payload: '70'; retain: 'false'\ntopic: 'garage/ev/charging/limit'; payload: '10'; retain: 'false'\ntopic: 'garage/ev/charging/limit'; payload: '20'; retain: 'false'\ntopic: 'garage/ev/charging/limit'; payload: '85'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "EvCharger",
        "title": "EV Charger",
        "id": "urn:uuid:bacf4c15-8bae-4a33-b067-4c88b802f7c7",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "An EV charger",
        "properties": {
          "chargerStatus": {
            "title": "Status Code",
            "description": "Status of the charger SAE_J1772",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "A",
              "B",
              "C",
              "D",
              "E",
              "F"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/charger/status",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "current": {
            "title": "Current",
            "description": "Current current of the L1, L2 and L3",
            "observable": true,
            "type": "object",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {
              "L1": {
                "title": "",
                "description": "Current of L1",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "L2": {
                "title": "",
                "description": "Current of L2",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "L3": {
                "title": "",
                "description": "Current of L3",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              }
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/charger/current",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "power": {
            "title": "Power",
            "description": "Current power consumption of charger",
            "observable": true,
            "type": "number",
            "minimum": -3600,
            "maximum": 3600,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/charger/power",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "enabled": {
            "title": "Charger Enabled",
            "description": "Whether the charger is enabled or disabled",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/ev/charger/enabled",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "enable": {
            "title": "Enable Charger",
            "description": "Enable/disable EV charger",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/charger/enable",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "maxCurrent": {
            "title": "Max Current Charger",
            "description": "Set the max. current of EV charger (A)",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/charger/maxCurrent",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartEVCharger",
          "title": "Smart EV Charger",
          "id": "urn:smart:ev:charger",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart electric vehicle charger located in the garage.",
          "properties": {
            "status": {
              "title": "Charger Status",
              "description": "The current status of the charger.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current Levels",
              "description": "The current levels for each phase.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The current power being used by the charger.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            },
            "enabled": {
              "title": "Charger Enabled",
              "description": "Indicates if the charger is enabled.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/enabled",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "enableCharger": {
              "title": "Enable Charger",
              "description": "Action to enable or disable the charger.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "garage/charger/enable",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setMaxCurrent": {
              "title": "Set Maximum Current",
              "description": "Set the maximum current for the charger.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 200,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "garage/charger/maxCurrent",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartEVCharger",
          "title": "Smart EV Charger",
          "id": "urn:garage:ev:charger",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for managing electric vehicle charging in a garage.",
          "properties": {
            "status": {
              "title": "Charger Status",
              "description": "The current status of the EV charger.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/status",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current per Phase",
              "description": "The current in amperes for each phase (L1, L2, L3).",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/current",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power in watts being used by the charger.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "enabled": {
              "title": "Charger Enabled",
              "description": "Indicates whether the charger is enabled.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/enabled",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/enabled",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "enableCharger": {
              "title": "Enable Charger",
              "description": "Action to enable or disable the charger.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/enable",
                  "contentType": null,
                  "mqv:topic": "garage/charger/enable",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setMaxCurrent": {
              "title": "Set Maximum Current",
              "description": "Action to set the maximum current for the charger.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 200,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/maxCurrent",
                  "contentType": null,
                  "mqv:topic": "garage/charger/maxCurrent",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartEVCharger",
          "title": "Smart EV Charger",
          "id": "urn:smart:ev:charger",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring and controlling an electric vehicle charger in a garage.",
          "properties": {
            "status": {
              "title": "Charger Status",
              "description": "The current status of the EV charger.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/status",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/status",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current per Phase",
              "description": "The current in amperes for each phase.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/current",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/current",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power in watts being consumed or generated by the charger.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "enabled": {
              "title": "Charger Enabled",
              "description": "Indicates whether the charger is enabled.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/enabled",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/enabled",
                  "mqv:retain": false,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "maxCurrent": {
              "title": "Maximum Current",
              "description": "The maximum current setting for the charger.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/maxCurrent",
                  "contentType": null,
                  "mqv:topic": "garage/charger/maxCurrent",
                  "mqv:retain": false,
                  "op": [
                    "readproperty",
                    "writeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "enableCharger": {
              "title": "Enable Charger",
              "description": "Enable or disable the EV charger.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/enable",
                  "contentType": null,
                  "mqv:topic": "garage/charger/enable",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartEVCharger",
          "title": "Smart EV Charger",
          "id": "urn:smart:ev:charger",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for managing electric vehicle charging in a garage.",
          "properties": {
            "status": {
              "title": "Charger Status",
              "description": "The status of the charger.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/status",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current in amperes for each line.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/current",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power in watts.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "enabled": {
              "title": "Charger Enabled",
              "description": "Indicates if the charger is enabled.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/enabled",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/enabled",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "enableCharger": {
              "title": "Enable Charger",
              "description": "Enable or disable the charger.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/enable",
                  "contentType": null,
                  "mqv:topic": "garage/charger/enable",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setMaxCurrent": {
              "title": "Set Maximum Current",
              "description": "Set the maximum current for the charger.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 200,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/maxCurrent",
                  "contentType": null,
                  "mqv:topic": "garage/charger/maxCurrent",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartEVCharger",
          "title": "Smart EV Charger",
          "id": "urn:garage:ev:charger",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart EV charger located in the garage with various monitoring and control capabilities.",
          "properties": {
            "status": {
              "title": "Charger Status",
              "description": "Current status of the charger.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/status",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/status",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "Current readings for each phase.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/current",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/current",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "Current power consumption or generation.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "enabled": {
              "title": "Charger Enabled",
              "description": "Indicates if the charger is enabled.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/enabled",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/enabled",
                  "mqv:retain": false,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "enableCharger": {
              "title": "Enable Charger",
              "description": "Enable or disable the charger.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/enable",
                  "contentType": null,
                  "mqv:topic": "garage/charger/enable",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setMaxCurrent": {
              "title": "Set Max Current",
              "description": "Set the maximum current for the charger.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/maxCurrent",
                  "contentType": null,
                  "mqv:topic": "garage/charger/maxCurrent",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartEVCharger",
          "title": "Smart EV Charger",
          "id": "urn:uuid:123e4567-e89b-12d3-a456-426614174000",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for managing electric vehicle charging in a garage.",
          "properties": {
            "status": {
              "title": "Charger Status",
              "description": "The current status of the EV charger.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/status",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Charger Current",
              "description": "The current levels for each phase of the EV charger.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/current",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Charger Power",
              "description": "The power consumption or generation of the EV charger.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "enabled": {
              "title": "Charger Enabled",
              "description": "Indicates whether the charger is enabled.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/enabled",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/enabled",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "enableCharger": {
              "title": "Enable Charger",
              "description": "Enable or disable the charger.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/enable",
                  "contentType": null,
                  "mqv:topic": "garage/charger/enable",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setMaxCurrent": {
              "title": "Set Max Current",
              "description": "Set the maximum current for the charger.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 200,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/maxCurrent",
                  "contentType": null,
                  "mqv:topic": "garage/charger/maxCurrent",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartEVCharger",
          "title": "Smart EV Charger",
          "id": "urn:garage:ev:charger",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for managing and monitoring an electric vehicle charger in a garage.",
          "properties": {
            "status": {
              "title": "Charger Status",
              "description": "The current status of the EV charger.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/status",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current per Phase",
              "description": "The current being drawn by the charger on each phase.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/current",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power Consumption",
              "description": "The power consumption of the charger.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "enabled": {
              "title": "Charger Enabled",
              "description": "Indicates if the charger is enabled.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/enabled",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/enabled",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "enableCharger": {
              "title": "Enable Charger",
              "description": "Enable or disable the charger.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/enable",
                  "contentType": null,
                  "mqv:topic": "garage/charger/enable",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setMaxCurrent": {
              "title": "Set Maximum Current",
              "description": "Set the maximum current for the charger.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/maxCurrent",
                  "contentType": null,
                  "mqv:topic": "garage/charger/maxCurrent",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartEVCharger",
          "title": "Garage EV Charger",
          "id": "urn:garage:ev:charger",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for managing electric vehicle charging in the garage.",
          "properties": {
            "status": {
              "title": "Charger Status",
              "description": "The current status of the EV charger.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/status",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current per Phase",
              "description": "The current in amperes for each phase.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/current",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power Consumption",
              "description": "The power consumption of the charger in watts.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "enabled": {
              "title": "Charger Enabled",
              "description": "Indicates whether the charger is enabled.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/enabled",
                  "contentType": "application/json",
                  "mqv:topic": "garage/ev/charger/enabled",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "enableCharger": {
              "title": "Enable Charger",
              "description": "Enable or disable the EV charger.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/enable",
                  "contentType": "application/json",
                  "mqv:topic": "garage/charger/enable",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setMaxCurrent": {
              "title": "Set Maximum Current",
              "description": "Set the maximum current for the charger.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/maxCurrent",
                  "contentType": "application/json",
                  "mqv:topic": "garage/charger/maxCurrent",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartEVCharger",
          "title": "Smart EV Charger",
          "id": "urn:smart-ev-charger",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for managing electric vehicle charging in a garage.",
          "properties": {
            "status": {
              "title": "Charger Status",
              "description": "The current status of the EV charger.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/status",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current Per Phase",
              "description": "The current in amperes for each phase.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/current",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power in watts.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "enabled": {
              "title": "Charger Enabled",
              "description": "Indicates whether the charger is enabled.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/enabled",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/enabled",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "enableCharger": {
              "title": "Enable Charger",
              "description": "Enable or disable the EV charger.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/enable",
                  "contentType": null,
                  "mqv:topic": "garage/charger/enable",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setMaxCurrent": {
              "title": "Set Maximum Current",
              "description": "Set the maximum current for the charger.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 200,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/maxCurrent",
                  "contentType": null,
                  "mqv:topic": "garage/charger/maxCurrent",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartEVCharger",
          "title": "Smart EV Charger",
          "id": "urn:garage:ev:charger",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for managing electric vehicle charging in a garage.",
          "properties": {
            "status": {
              "title": "Charger Status",
              "description": "The current status of the EV charger",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "A",
                "B",
                "C",
                "D",
                "E",
                "F"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/status",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current in amperes on each line",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/current",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power in watts",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/power",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            },
            "enabled": {
              "title": "Charger Enabled",
              "description": "Indicates whether the charger is enabled",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/ev/charger/enabled",
                  "contentType": null,
                  "mqv:topic": "garage/ev/charger/enabled",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "enableCharger": {
              "title": "Enable Charger",
              "description": "Enable or disable the charger",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/enable",
                  "contentType": null,
                  "mqv:topic": "garage/charger/enable",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setMaxCurrent": {
              "title": "Set Maximum Current",
              "description": "Set the maximum current for the charger",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 200,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/charger/maxCurrent",
                  "contentType": null,
                  "mqv:topic": "garage/charger/maxCurrent",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'garage/ev/charger/status'; payload: 'A'; retain: 'true'\ntopic: 'garage/ev/charger/status'; payload: 'B'; retain: 'true'\ntopic: 'garage/ev/charger/status'; payload: 'C'; retain: 'true'\ntopic: 'garage/ev/charger/status'; payload: 'D'; retain: 'true'\ntopic: 'garage/ev/charger/status'; payload: 'E'; retain: 'true'\ntopic: 'garage/ev/charger/status'; payload: 'F'; retain: 'true'\ntopic: 'garage/ev/charger/current'; payload: '{'L1': 7.046, 'L2': 12.644, 'L3': 12.285}'; retain: 'true'\ntopic: 'garage/ev/charger/current'; payload: '{'L1': 4.575, 'L2': 9.97, 'L3': 8.413}'; retain: 'true'\ntopic: 'garage/ev/charger/current'; payload: '{'L1': 9.419, 'L2': 15.252, 'L3': 11.1}'; retain: 'true'\ntopic: 'garage/ev/charger/current'; payload: '{'L1': 5.271, 'L2': 9.896, 'L3': 11.727}'; retain: 'true'\ntopic: 'garage/ev/charger/current'; payload: '{'L1': 7.19, 'L2': 9.132, 'L3': 0.023}'; retain: 'true'\ntopic: 'garage/ev/charger/power'; payload: '1922.638'; retain: 'true'\ntopic: 'garage/ev/charger/power'; payload: '3107.269'; retain: 'true'\ntopic: 'garage/ev/charger/power'; payload: '-2396.405'; retain: 'true'\ntopic: 'garage/ev/charger/power'; payload: '307.131'; retain: 'true'\ntopic: 'garage/ev/charger/power'; payload: '976.703'; retain: 'true'\ntopic: 'garage/ev/charger/enabled'; payload: 'true'; retain: 'false'\ntopic: 'garage/ev/charger/enabled'; payload: 'false'; retain: 'false'\ntopic: 'garage/ev/charger/enabled'; payload: 'true'; retain: 'false'\ntopic: 'garage/ev/charger/enabled'; payload: 'false'; retain: 'false'\ntopic: 'garage/charger/enable'; payload: 'true'; retain: 'false'\ntopic: 'garage/charger/enable'; payload: 'false'; retain: 'false'\ntopic: 'garage/charger/enable'; payload: 'true'; retain: 'false'\ntopic: 'garage/charger/enable'; payload: 'false'; retain: 'false'\ntopic: 'garage/charger/maxCurrent'; payload: '133'; retain: 'false'\ntopic: 'garage/charger/maxCurrent'; payload: '184'; retain: 'false'\ntopic: 'garage/charger/maxCurrent'; payload: '50'; retain: 'false'\ntopic: 'garage/charger/maxCurrent'; payload: '144'; retain: 'false'\ntopic: 'garage/charger/maxCurrent'; payload: '192'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "CeilingFan",
        "title": "Bedroom Ceiling Fan",
        "id": "urn:uuid:94daccad-98e6-43f5-b757-3ab122650b81",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "A ceiling fan with different modes",
        "properties": {
          "state": {
            "title": "Fan State",
            "description": "State of the fan",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "UNKNOWN",
              "ON",
              "OFF"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "bedroom_fan/ceil/status",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "oscillationState": {
            "title": "Oscillation State",
            "description": "Whether the fan is oscillating or not",
            "observable": true,
            "type": "boolean",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "bedroom_fan/ceil/oscillation",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "staling": {
            "title": "Fan Staling",
            "description": "The fan has stalled",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "STALED",
                "OPERATIONAL"
              ],
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "bedroom_fan/ceil/staling",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "setMode": {
            "title": "Fan Mode",
            "description": "Set the fan mode",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "auto",
                "smart",
                "woosh",
                "eco",
                "night",
                "breeze"
              ],
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "bedroom_fan/ceil/set/mode",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "setSpeed": {
            "title": "Fan speed",
            "description": "Set the fan speed in percent",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "bedroom_fan/ceil/set/speed",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartFan",
          "title": "Bedroom Ceiling Fan",
          "id": "urn:uuid:bedroom_fan_ceil",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart ceiling fan located in the bedroom with multiple modes and oscillation feature.",
          "properties": {
            "status": {
              "title": "Fan Status",
              "description": "The current status of the fan.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/status",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/status",
                  "mqv:retain": true,
                  "op": [
                    "readproperty",
                    "observeproperty"
                  ]
                }
              ]
            },
            "oscillation": {
              "title": "Oscillation",
              "description": "Indicates if the fan oscillation is on or off.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/oscillation",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/oscillation",
                  "mqv:retain": true,
                  "op": [
                    "readproperty",
                    "observeproperty"
                  ]
                }
              ]
            },
            "staling": {
              "title": "Staling Status",
              "description": "Indicates the staling status of the fan.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "STALED",
                "OPERATIONAL"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/staling",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/staling",
                  "mqv:retain": false,
                  "op": [
                    "readproperty",
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setMode": {
              "title": "Set Mode",
              "description": "Set the fan mode.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "auto",
                  "smart",
                  "woosh",
                  "eco",
                  "night",
                  "breeze"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setSpeed": {
              "title": "Set Speed",
              "description": "Set the fan speed as a percentage.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/speed",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/speed",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartFan",
          "title": "Bedroom Ceiling Fan",
          "id": "urn:uuid:bedroom_fan_ceil",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart ceiling fan located in the bedroom with various functionalities including status monitoring, oscillation control, staling detection, mode setting, and speed adjustment.",
          "properties": {
            "status": {
              "title": "Fan Status",
              "description": "Indicates the current status of the fan.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/status",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/status",
                  "mqv:retain": true,
                  "op": [
                    "observe"
                  ]
                }
              ]
            },
            "oscillation": {
              "title": "Oscillation",
              "description": "Indicates whether the fan oscillation is on or off.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/oscillation",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/oscillation",
                  "mqv:retain": true,
                  "op": [
                    "observe"
                  ]
                }
              ]
            },
            "staling": {
              "title": "Staling Status",
              "description": "Indicates the staling status of the fan.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "STALED",
                "OPERATIONAL"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/staling",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/staling",
                  "mqv:retain": false,
                  "op": [
                    "observe"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setMode": {
              "title": "Set Mode",
              "description": "Sets the operating mode of the fan.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "auto",
                  "smart",
                  "woosh",
                  "eco",
                  "night",
                  "breeze"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setSpeed": {
              "title": "Set Speed",
              "description": "Sets the speed of the fan.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/speed",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/speed",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "Bedroom Ceiling Fan",
          "id": "urn:bedroom_fan:ceil",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart ceiling fan located in the bedroom with multiple modes and speed settings.",
          "properties": {
            "status": {
              "title": "Fan Status",
              "description": "Indicates the current status of the fan.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/status",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "oscillation": {
              "title": "Oscillation",
              "description": "Indicates whether the fan is oscillating.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/oscillation",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/oscillation",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "staling": {
              "title": "Staling Status",
              "description": "Indicates the staling status of the fan.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "STALED",
                "OPERATIONAL"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/staling",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/staling",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setMode": {
              "title": "Set Mode",
              "description": "Sets the mode of the fan.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "auto",
                  "smart",
                  "woosh",
                  "eco",
                  "night",
                  "breeze"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setSpeed": {
              "title": "Set Speed",
              "description": "Sets the speed of the fan.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/speed",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/speed",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartFan",
          "title": "Bedroom Ceiling Fan",
          "id": "urn:example:bedroom_fan:ceil",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart ceiling fan located in the bedroom with various modes and oscillation features.",
          "properties": {
            "status": {
              "title": "Fan Status",
              "description": "The current status of the fan.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/status",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            },
            "oscillation": {
              "title": "Oscillation",
              "description": "Indicates if the fan is oscillating.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/oscillation",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/oscillation",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            },
            "staling": {
              "title": "Staling Status",
              "description": "Indicates if the fan is staling or operational.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "STALED",
                "OPERATIONAL"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/staling",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/staling",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setMode": {
              "title": "Set Fan Mode",
              "description": "Set the mode of the fan.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "auto",
                  "smart",
                  "woosh",
                  "eco",
                  "night",
                  "breeze"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setSpeed": {
              "title": "Set Fan Speed",
              "description": "Set the speed of the fan.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/speed",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/speed",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartFan",
          "title": "Bedroom Ceiling Fan",
          "id": "urn:bedroom_fan:ceil",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart ceiling fan in the bedroom with various modes and speed settings.",
          "properties": {
            "status": {
              "title": "Fan Status",
              "description": "The current status of the fan.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/status",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "oscillation": {
              "title": "Oscillation",
              "description": "The oscillation status of the fan.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/oscillation",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/oscillation",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "staling": {
              "title": "Staling Status",
              "description": "The staling status of the fan.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "STALED",
                "OPERATIONAL"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/staling",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/staling",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setMode": {
              "title": "Set Fan Mode",
              "description": "Set the mode of the fan.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "auto",
                  "smart",
                  "woosh",
                  "eco",
                  "night",
                  "breeze"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setSpeed": {
              "title": "Set Fan Speed",
              "description": "Set the speed of the fan.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/speed",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/speed",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartFan",
          "title": "Bedroom Ceiling Fan",
          "id": "urn:uuid:bedroom_fan_ceil",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart ceiling fan installed in the bedroom with various operational modes and settings.",
          "properties": {
            "status": {
              "title": "Fan Status",
              "description": "The current status of the fan.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/status",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "oscillation": {
              "title": "Oscillation",
              "description": "Indicates if the fan is oscillating.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/oscillation",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/oscillation",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "staling": {
              "title": "Staling Status",
              "description": "The staling status of the fan.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "STALED",
                "OPERATIONAL"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/staling",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/staling",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setMode": {
              "title": "Set Mode",
              "description": "Set the operational mode of the fan.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "auto",
                  "smart",
                  "woosh",
                  "eco",
                  "night",
                  "breeze"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setSpeed": {
              "title": "Set Speed",
              "description": "Set the speed of the fan.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/speed",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/speed",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartFan",
          "title": "Bedroom Ceiling Fan",
          "id": "urn:smart:bedroom:fan:ceiling",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart ceiling fan in the bedroom with various modes and speed settings.",
          "properties": {
            "status": {
              "title": "Fan Status",
              "description": "Current status of the fan",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/status",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/status",
                  "mqv:retain": true,
                  "op": [
                    "readproperty",
                    "observeproperty"
                  ]
                }
              ]
            },
            "oscillation": {
              "title": "Oscillation",
              "description": "Oscillation status of the fan",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/oscillation",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/oscillation",
                  "mqv:retain": true,
                  "op": [
                    "readproperty",
                    "observeproperty"
                  ]
                }
              ]
            },
            "staling": {
              "title": "Staling Status",
              "description": "Indicates if the fan is operational or staled",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "STALED",
                "OPERATIONAL"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/staling",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/staling",
                  "mqv:retain": false,
                  "op": [
                    "readproperty",
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setMode": {
              "title": "Set Mode",
              "description": "Set the operating mode of the fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "auto",
                  "smart",
                  "woosh",
                  "eco",
                  "night",
                  "breeze"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setSpeed": {
              "title": "Set Speed",
              "description": "Set the speed of the fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/speed",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/speed",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartFan",
          "title": "Bedroom Ceiling Fan",
          "id": "urn:bedroom:fan:ceiling",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart ceiling fan located in the bedroom with various modes and oscillation control.",
          "properties": {
            "status": {
              "title": "Fan Status",
              "description": "The current status of the fan.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/status",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "oscillation": {
              "title": "Fan Oscillation",
              "description": "Indicates whether the fan is oscillating.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/oscillation",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/oscillation",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "staling": {
              "title": "Fan Staling Status",
              "description": "The operational status of the fan.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "STALED",
                "OPERATIONAL"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/staling",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/staling",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setMode": {
              "title": "Set Fan Mode",
              "description": "Set the mode of the fan.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "auto",
                  "smart",
                  "woosh",
                  "eco",
                  "night",
                  "breeze"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setSpeed": {
              "title": "Set Fan Speed",
              "description": "Set the speed of the fan.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/speed",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/speed",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartFan",
          "title": "Bedroom Ceiling Fan",
          "id": "urn:smartfan:bedroom:ceiling",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart ceiling fan installed in the bedroom with various operational modes and settings.",
          "properties": {
            "status": {
              "title": "Fan Status",
              "description": "Indicates the current status of the fan.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/status",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "oscillation": {
              "title": "Oscillation Status",
              "description": "Indicates whether the fan is oscillating.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/oscillation",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/oscillation",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "staling": {
              "title": "Staling Status",
              "description": "Indicates the staling status of the fan.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "STALED",
                "OPERATIONAL"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/staling",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/staling",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setMode": {
              "title": "Set Mode",
              "description": "Sets the operational mode of the fan.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "auto",
                  "smart",
                  "woosh",
                  "eco",
                  "night",
                  "breeze"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setSpeed": {
              "title": "Set Speed",
              "description": "Sets the speed of the fan.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/speed",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/speed",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartFan",
          "title": "Bedroom Ceiling Fan",
          "id": "urn:bedroom:fan:ceiling",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart ceiling fan in the bedroom with multiple settings and modes.",
          "properties": {
            "status": {
              "title": "Fan Status",
              "description": "The current status of the fan.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/status",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "oscillation": {
              "title": "Oscillation",
              "description": "Indicates whether the fan oscillation is on or off.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/oscillation",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/oscillation",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "staling": {
              "title": "Staling Status",
              "description": "The staling status of the fan.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "STALED",
                "OPERATIONAL"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/staling",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/staling",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setMode": {
              "title": "Set Mode",
              "description": "Set the fan mode.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "auto",
                  "smart",
                  "woosh",
                  "eco",
                  "night",
                  "breeze"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setSpeed": {
              "title": "Set Speed",
              "description": "Set the fan speed as a percentage.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/speed",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/speed",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'bedroom_fan/ceil/status'; payload: 'UNKNOWN'; retain: 'true'\ntopic: 'bedroom_fan/ceil/status'; payload: 'ON'; retain: 'true'\ntopic: 'bedroom_fan/ceil/status'; payload: 'OFF'; retain: 'true'\ntopic: 'bedroom_fan/ceil/oscillation'; payload: 'true'; retain: 'true'\ntopic: 'bedroom_fan/ceil/oscillation'; payload: 'false'; retain: 'true'\ntopic: 'bedroom_fan/ceil/oscillation'; payload: 'true'; retain: 'true'\ntopic: 'bedroom_fan/ceil/oscillation'; payload: 'false'; retain: 'true'\ntopic: 'bedroom_fan/ceil/staling'; payload: 'STALED'; retain: 'false'\ntopic: 'bedroom_fan/ceil/staling'; payload: 'OPERATIONAL'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'auto'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'smart'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'woosh'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'eco'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'night'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'breeze'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/speed'; payload: '37.948'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/speed'; payload: '63.736'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/speed'; payload: '94.008'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/speed'; payload: '49.482'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/speed'; payload: '88.284'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "AirHumidifier",
        "title": "Air Humidifier",
        "id": "urn:uuid:5676e5b0-9e2d-473c-879f-1e226ce3192c",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "An air humidifier with multiple modes",
        "properties": {
          "state": {
            "title": "Fan State",
            "description": "State of the fan",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "UNKNOWN",
              "ON",
              "OFF",
              "IDLE"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "living_room/humidifier/status",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "humidity": {
            "title": "Air Humidity",
            "description": "Current air humidity in percent",
            "observable": true,
            "type": "integer",
            "minimum": 5,
            "maximum": 95,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "living_room/humidifier/humidity",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "targetReached": {
            "title": "Target Reached",
            "description": "The humidity target has been reached",
            "data": {
              "title": "Timestamp",
              "description": "POSIX timestamp when the target was reached",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "living_room/humidifier/target/ok",
                "mqv:retain": true,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          },
          "belowThreshold": {
            "title": "Below Threshold",
            "description": "The humidity is below the threshold",
            "data": {
              "title": "Timestamp",
              "description": "POSIX timestamp when the threshold was reached",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "living_room/humidifier/threshold/ok",
                "mqv:retain": true,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "setTarget": {
            "title": "Target Humidity",
            "description": "Set the humidity target",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "living_room/humidifier/target/set",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "setThreshold": {
            "title": "Threshold Humidity",
            "description": "Set the threshold target",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "living_room/humidifier/threshold/set",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "setMode": {
            "title": "Humidifier Mode",
            "description": "Set the mode of the humidifier",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "normal",
                "eco",
                "away",
                "boost",
                "comfort",
                "home",
                "sleep",
                "auto",
                "baby"
              ],
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "bedroom_fan/ceil/set/mode",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "setState": {
            "title": "Humidifier State",
            "description": "Set the state of the humidifier",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "on",
                "off"
              ],
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "bedroom_fan/ceil/set/mode",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "Smart Humidifier and Fan",
          "id": "urn:smart:humidifier:fan",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart humidifier and ceiling fan system for living room and bedroom.",
          "properties": {
            "humidifierStatus": {
              "title": "Humidifier Status",
              "description": "The current status of the humidifier",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF",
                "IDLE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/status",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "currentHumidity": {
              "title": "Current Humidity",
              "description": "The current humidity level in the living room",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/humidity",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/humidity",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "targetHumidity": {
              "title": "Target Humidity",
              "description": "The target humidity level set in the living room",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/target/ok",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/target/ok",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "humidityThreshold": {
              "title": "Humidity Threshold",
              "description": "The threshold humidity level for alerts",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/threshold/ok",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/threshold/ok",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setTargetHumidity": {
              "title": "Set Target Humidity",
              "description": "Set a new target humidity level",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/target/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setHumidityThreshold": {
              "title": "Set Humidity Threshold",
              "description": "Set a new humidity threshold level",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/threshold/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setFanMode": {
              "title": "Set Fan Mode",
              "description": "Set the mode of the bedroom ceiling fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "normal",
                  "eco",
                  "away",
                  "boost",
                  "comfort",
                  "home",
                  "sleep",
                  "auto",
                  "baby",
                  "on",
                  "off"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartHumidifierFan",
          "title": "Living Room Humidifier and Bedroom Fan",
          "id": "urn:smart:humidifier:fan",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart humidifier for the living room and a ceiling fan for the bedroom with various functionalities.",
          "properties": {
            "humidifierStatus": {
              "title": "Humidifier Status",
              "description": "The current status of the living room humidifier.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF",
                "IDLE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/status",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/status",
                  "mqv:retain": true,
                  "op": [
                    "observe"
                  ]
                }
              ]
            },
            "currentHumidity": {
              "title": "Current Humidity",
              "description": "The current humidity level in the living room.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/humidity",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/humidity",
                  "mqv:retain": true,
                  "op": [
                    "observe"
                  ]
                }
              ]
            },
            "targetHumidity": {
              "title": "Target Humidity",
              "description": "The target humidity level setting for the living room humidifier.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/target/ok",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/target/ok",
                  "mqv:retain": true,
                  "op": [
                    "observe"
                  ]
                }
              ]
            },
            "humidityThreshold": {
              "title": "Humidity Threshold",
              "description": "The humidity threshold setting for the living room humidifier.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/threshold/ok",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/threshold/ok",
                  "mqv:retain": true,
                  "op": [
                    "observe"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setTargetHumidity": {
              "title": "Set Target Humidity",
              "description": "Set the target humidity level for the living room humidifier.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/target/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            },
            "setHumidityThreshold": {
              "title": "Set Humidity Threshold",
              "description": "Set the humidity threshold for the living room humidifier.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/threshold/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            },
            "setFanMode": {
              "title": "Set Fan Mode",
              "description": "Set the mode for the bedroom ceiling fan.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "normal",
                  "eco",
                  "away",
                  "boost",
                  "comfort",
                  "home",
                  "sleep",
                  "auto",
                  "baby",
                  "on",
                  "off"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "Smart IoT Device",
          "id": "urn:uuid:smart-iot-device-001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for managing living room humidifier and bedroom fan.",
          "properties": {
            "humidifierStatus": {
              "title": "Humidifier Status",
              "description": "The current status of the living room humidifier.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF",
                "IDLE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/status",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "humidity": {
              "title": "Humidity",
              "description": "The current humidity level in the living room.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/humidity",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/humidity",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "targetHumidity": {
              "title": "Target Humidity",
              "description": "The target humidity level for the living room humidifier.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/target/ok",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/target/ok",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "humidityThreshold": {
              "title": "Humidity Threshold",
              "description": "The threshold for humidity level in the living room.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/threshold/ok",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/threshold/ok",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setTargetHumidity": {
              "title": "Set Target Humidity",
              "description": "Set the target humidity level for the living room humidifier.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/target/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setHumidityThreshold": {
              "title": "Set Humidity Threshold",
              "description": "Set the threshold for humidity level in the living room.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/threshold/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setFanMode": {
              "title": "Set Fan Mode",
              "description": "Set the mode for the bedroom ceiling fan.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "normal",
                  "eco",
                  "away",
                  "boost",
                  "comfort",
                  "home",
                  "sleep",
                  "auto",
                  "baby",
                  "on",
                  "off"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "Smart Humidifier and Fan",
          "id": "urn:smart:humidifier:fan",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart humidifier and fan system for living room and bedroom.",
          "properties": {
            "humidifierStatus": {
              "title": "Humidifier Status",
              "description": "Current status of the humidifier",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF",
                "IDLE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/status",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "currentHumidity": {
              "title": "Current Humidity",
              "description": "Current humidity level in the living room",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/humidity",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/humidity",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "targetHumidity": {
              "title": "Target Humidity",
              "description": "Target humidity level set for the living room",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/target/ok",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/target/ok",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "thresholdHumidity": {
              "title": "Threshold Humidity",
              "description": "Threshold humidity level for the living room",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/threshold/ok",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/threshold/ok",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setTargetHumidity": {
              "title": "Set Target Humidity",
              "description": "Set a new target humidity level for the living room",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/target/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setThresholdHumidity": {
              "title": "Set Threshold Humidity",
              "description": "Set a new threshold humidity level for the living room",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/threshold/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setFanMode": {
              "title": "Set Fan Mode",
              "description": "Set the operating mode of the bedroom fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "normal",
                  "eco",
                  "away",
                  "boost",
                  "comfort",
                  "home",
                  "sleep",
                  "auto",
                  "baby",
                  "on",
                  "off"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartHumidifierAndFan",
          "title": "Smart Humidifier and Fan",
          "id": "urn:smart:humidifier:fan",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart humidifier and fan system for living room and bedroom.",
          "properties": {
            "status": {
              "title": "Humidifier Status",
              "description": "The current status of the humidifier",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF",
                "IDLE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/status",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "humidity": {
              "title": "Current Humidity",
              "description": "The current humidity level reported by the humidifier",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/humidity",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/humidity",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "targetHumidity": {
              "title": "Target Humidity",
              "description": "The target humidity level set for the humidifier",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/target/ok",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/target/ok",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "thresholdHumidity": {
              "title": "Threshold Humidity",
              "description": "The threshold humidity level for the humidifier",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/threshold/ok",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/threshold/ok",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setTargetHumidity": {
              "title": "Set Target Humidity",
              "description": "Set the target humidity level for the humidifier",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/target/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setThresholdHumidity": {
              "title": "Set Threshold Humidity",
              "description": "Set the threshold humidity level for the humidifier",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/threshold/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setFanMode": {
              "title": "Set Fan Mode",
              "description": "Set the mode of the bedroom fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "normal",
                  "eco",
                  "away",
                  "boost",
                  "comfort",
                  "home",
                  "sleep",
                  "auto",
                  "baby",
                  "on",
                  "off"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "Smart Humidifier and Fan",
          "id": "urn:smart:humidifier-fan",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart humidifier and fan system in the living room and bedroom.",
          "properties": {
            "status": {
              "title": "Humidifier Status",
              "description": "The current status of the humidifier.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF",
                "IDLE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/status",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "humidity": {
              "title": "Current Humidity",
              "description": "The current humidity level reported by the humidifier.",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/humidity",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/humidity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "targetHumidity": {
              "title": "Target Humidity",
              "description": "The target humidity level set for the humidifier.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/target/ok",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/target/ok",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "thresholdHumidity": {
              "title": "Threshold Humidity",
              "description": "The threshold humidity level for the humidifier.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/threshold/ok",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/threshold/ok",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setTargetHumidity": {
              "title": "Set Target Humidity",
              "description": "Set a new target humidity level for the humidifier.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/target/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setThresholdHumidity": {
              "title": "Set Threshold Humidity",
              "description": "Set a new threshold humidity level for the humidifier.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/threshold/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setFanMode": {
              "title": "Set Fan Mode",
              "description": "Set the mode of the bedroom ceiling fan.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "normal",
                  "eco",
                  "away",
                  "boost",
                  "comfort",
                  "home",
                  "sleep",
                  "auto",
                  "baby",
                  "on",
                  "off"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "Smart Humidifier and Fan",
          "id": "urn:smart:humidifier:fan",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart humidifier and fan system for living room and bedroom.",
          "properties": {
            "humidifierStatus": {
              "title": "Humidifier Status",
              "description": "The current status of the humidifier.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF",
                "IDLE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/status",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "currentHumidity": {
              "title": "Current Humidity",
              "description": "The current humidity level in the living room.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/humidity",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/humidity",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "targetHumidity": {
              "title": "Target Humidity",
              "description": "The target humidity level set for the humidifier.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/target/ok",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/target/ok",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "humidityThreshold": {
              "title": "Humidity Threshold",
              "description": "The threshold humidity level for the humidifier.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/threshold/ok",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/threshold/ok",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setTargetHumidity": {
              "title": "Set Target Humidity",
              "description": "Set a new target humidity level for the humidifier.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/target/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setHumidityThreshold": {
              "title": "Set Humidity Threshold",
              "description": "Set a new humidity threshold for the humidifier.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/threshold/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setFanMode": {
              "title": "Set Fan Mode",
              "description": "Set the operation mode of the bedroom ceiling fan.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "normal",
                  "eco",
                  "away",
                  "boost",
                  "comfort",
                  "home",
                  "sleep",
                  "auto",
                  "baby",
                  "on",
                  "off"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "Smart Humidifier and Fan",
          "id": "urn:smart:device:humidifier_fan",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart humidifier and fan system for living room and bedroom.",
          "properties": {
            "humidifierStatus": {
              "title": "Humidifier Status",
              "description": "Current status of the humidifier.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF",
                "IDLE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/status",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "currentHumidity": {
              "title": "Current Humidity",
              "description": "Current humidity level in the living room.",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/humidity",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/humidity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "targetHumidity": {
              "title": "Target Humidity",
              "description": "Target humidity level to be achieved.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/target/ok",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/target/ok",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "humidityThreshold": {
              "title": "Humidity Threshold",
              "description": "Threshold for humidity level.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/threshold/ok",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/threshold/ok",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setTargetHumidity": {
              "title": "Set Target Humidity",
              "description": "Set a new target humidity level.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/target/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setHumidityThreshold": {
              "title": "Set Humidity Threshold",
              "description": "Set a new threshold for humidity.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/threshold/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setFanMode": {
              "title": "Set Fan Mode",
              "description": "Set the mode of the bedroom fan.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "normal",
                  "eco",
                  "away",
                  "boost",
                  "comfort",
                  "home",
                  "sleep",
                  "auto",
                  "baby",
                  "on",
                  "off"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartHumidifierAndFan",
          "title": "Living Room Humidifier and Bedroom Fan",
          "id": "urn:living_room:humidifier:bedroom_fan",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart humidifier for the living room and a ceiling fan for the bedroom, both controllable via MQTT.",
          "properties": {
            "status": {
              "title": "Humidifier Status",
              "description": "Current status of the humidifier",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF",
                "IDLE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/status",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/status",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "humidity": {
              "title": "Current Humidity",
              "description": "Current humidity level in the living room",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/humidity",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/humidity",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "targetHumidity": {
              "title": "Target Humidity",
              "description": "Target humidity level set for the humidifier",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/target/ok",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/target/ok",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            },
            "humidityThreshold": {
              "title": "Humidity Threshold",
              "description": "Humidity threshold level for the humidifier",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/threshold/ok",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/threshold/ok",
                  "mqv:retain": true,
                  "op": []
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setTargetHumidity": {
              "title": "Set Target Humidity",
              "description": "Set the target humidity level for the humidifier",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/target/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setHumidityThreshold": {
              "title": "Set Humidity Threshold",
              "description": "Set the humidity threshold level for the humidifier",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/threshold/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setFanMode": {
              "title": "Set Fan Mode",
              "description": "Set the mode for the bedroom ceiling fan",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "normal",
                  "eco",
                  "away",
                  "boost",
                  "comfort",
                  "home",
                  "sleep",
                  "auto",
                  "baby",
                  "on",
                  "off"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartIoTDevice",
          "title": "Living Room Humidifier and Bedroom Fan",
          "id": "urn:example:smart-iot-device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for controlling a humidifier in the living room and a fan in the bedroom.",
          "properties": {
            "humidifierStatus": {
              "title": "Humidifier Status",
              "description": "The current status of the humidifier.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "ON",
                "OFF",
                "IDLE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/status",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "currentHumidity": {
              "title": "Current Humidity",
              "description": "The current humidity level in the living room.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/humidity",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/humidity",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "targetHumidity": {
              "title": "Target Humidity",
              "description": "The target humidity level set for the humidifier.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/target/ok",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/target/ok",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "humidityThreshold": {
              "title": "Humidity Threshold",
              "description": "The humidity threshold level for the humidifier.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/threshold/ok",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/threshold/ok",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setTargetHumidity": {
              "title": "Set Target Humidity",
              "description": "Set the target humidity level for the humidifier.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/target/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/target/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setHumidityThreshold": {
              "title": "Set Humidity Threshold",
              "description": "Set the humidity threshold level for the humidifier.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/living_room/humidifier/threshold/set",
                  "contentType": null,
                  "mqv:topic": "living_room/humidifier/threshold/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setFanMode": {
              "title": "Set Fan Mode",
              "description": "Set the mode for the bedroom fan.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "normal",
                  "eco",
                  "away",
                  "boost",
                  "comfort",
                  "home",
                  "sleep",
                  "auto",
                  "baby",
                  "on",
                  "off"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/bedroom_fan/ceil/set/mode",
                  "contentType": null,
                  "mqv:topic": "bedroom_fan/ceil/set/mode",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'living_room/humidifier/status'; payload: 'UNKNOWN'; retain: 'true'\ntopic: 'living_room/humidifier/status'; payload: 'ON'; retain: 'true'\ntopic: 'living_room/humidifier/status'; payload: 'OFF'; retain: 'true'\ntopic: 'living_room/humidifier/status'; payload: 'IDLE'; retain: 'true'\ntopic: 'living_room/humidifier/humidity'; payload: '22'; retain: 'true'\ntopic: 'living_room/humidifier/humidity'; payload: '53'; retain: 'true'\ntopic: 'living_room/humidifier/humidity'; payload: '88'; retain: 'true'\ntopic: 'living_room/humidifier/humidity'; payload: '24'; retain: 'true'\ntopic: 'living_room/humidifier/humidity'; payload: '38'; retain: 'true'\ntopic: 'living_room/humidifier/target/ok'; payload: '1734511259'; retain: 'true'\ntopic: 'living_room/humidifier/target/ok'; payload: '1734511559'; retain: 'true'\ntopic: 'living_room/humidifier/target/ok'; payload: '1734511859'; retain: 'true'\ntopic: 'living_room/humidifier/target/ok'; payload: '1734512159'; retain: 'true'\ntopic: 'living_room/humidifier/target/ok'; payload: '1734512459'; retain: 'true'\ntopic: 'living_room/humidifier/threshold/ok'; payload: '164'; retain: 'true'\ntopic: 'living_room/humidifier/threshold/ok'; payload: '100'; retain: 'true'\ntopic: 'living_room/humidifier/threshold/ok'; payload: '110'; retain: 'true'\ntopic: 'living_room/humidifier/threshold/ok'; payload: '146'; retain: 'true'\ntopic: 'living_room/humidifier/threshold/ok'; payload: '140'; retain: 'true'\ntopic: 'living_room/humidifier/target/set'; payload: '89'; retain: 'false'\ntopic: 'living_room/humidifier/target/set'; payload: '97'; retain: 'false'\ntopic: 'living_room/humidifier/target/set'; payload: '30'; retain: 'false'\ntopic: 'living_room/humidifier/target/set'; payload: '54'; retain: 'false'\ntopic: 'living_room/humidifier/target/set'; payload: '95'; retain: 'false'\ntopic: 'living_room/humidifier/threshold/set'; payload: '72'; retain: 'false'\ntopic: 'living_room/humidifier/threshold/set'; payload: '15'; retain: 'false'\ntopic: 'living_room/humidifier/threshold/set'; payload: '62'; retain: 'false'\ntopic: 'living_room/humidifier/threshold/set'; payload: '32'; retain: 'false'\ntopic: 'living_room/humidifier/threshold/set'; payload: '21'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'normal'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'eco'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'away'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'boost'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'comfort'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'home'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'sleep'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'auto'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'baby'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'on'; retain: 'false'\ntopic: 'bedroom_fan/ceil/set/mode'; payload: 'off'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "AirConditioner",
        "title": "Air Conditioner",
        "id": "urn:uuid:981e557a-e3a9-4482-bbcb-d76649830bd8",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "An AC unit in the office room",
        "properties": {
          "state": {
            "title": "AC State",
            "description": "State of the AC unit",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "UNKNOWN",
              "COOL",
              "OFF",
              "STANDBY",
              "FAN_ONLY"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "upstairs/office/ac/status",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "swing": {
            "title": "Swing state",
            "description": "State of the AC unit",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "ON",
              "OFF"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "upstairs/office/ac/swing",
                "mqv:retain": false,
                "op": [
                  "observeproperty"
                ]
              }
            ]
          },
          "fanMode": {
            "title": "Fan Mode",
            "description": "Fan mode of the AC unit",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "OFF",
              "LOW",
              "MEDIUM",
              "HIGH"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "upstairs/office/ac/fan",
                "mqv:retain": false,
                "op": [
                  "observeproperty"
                ]
              }
            ]
          },
          "temperature": {
            "title": "Air temperature",
            "description": "Current air temperature",
            "observable": true,
            "type": "integer",
            "minimum": 0,
            "maximum": 68,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "upstairs/office/ac/temp",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "setPoint": {
            "title": "Target temperature reached",
            "description": "The target temperature has been reached",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "upstairs/office/ac/setpoint/ok",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "setTemp": {
            "title": "Target Humidity",
            "description": "Set the humidity target",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "integer",
              "minimum": 0,
              "maximum": 50,
              "enum": null,
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "upstairs/office/ac/setpoint/set",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "setPower": {
            "title": "AC Power Mode",
            "description": "Set the power mode of the AC unit",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "eco",
                "sleep",
                "full"
              ],
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "upstairs/office/ac/mode/set",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "setFan": {
            "title": "Fan Mode",
            "description": "Set the fan mode of the AC unit",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "off",
                "low",
                "medium",
                "high"
              ],
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "upstairs/office/ac/fan/set",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "AirConditioner",
          "title": "Smart Air Conditioner",
          "id": "urn:upstairs:office:ac",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart air conditioner located in the upstairs office.",
          "properties": {
            "status": {
              "title": "AC Status",
              "description": "Current status of the air conditioner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "COOL",
                "OFF",
                "STANDBY",
                "FAN_ONLY"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/status",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "swing": {
              "title": "Swing Mode",
              "description": "Swing mode status of the air conditioner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/swing",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/swing",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "fan": {
              "title": "Fan Speed",
              "description": "Current fan speed of the air conditioner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OFF",
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/fan",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "temperature": {
              "title": "Current Temperature",
              "description": "Current temperature reading from the air conditioner.",
              "observable": null,
              "type": "integer",
              "minimum": 12,
              "maximum": 60,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/temp",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/temp",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "setpointOk": {
              "title": "Setpoint Acknowledgement",
              "description": "Acknowledgement event for temperature setpoint.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/ok",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/setpoint/ok",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "setTemperature": {
              "title": "Set Temperature",
              "description": "Set the desired temperature of the air conditioner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 11,
                "maximum": 34,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/setpoint/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setMode": {
              "title": "Set Mode",
              "description": "Set the mode of the air conditioner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "eco",
                  "sleep",
                  "full"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/mode/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/mode/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setFanSpeed": {
              "title": "Set Fan Speed",
              "description": "Set the fan speed of the air conditioner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "off",
                  "low",
                  "medium",
                  "high"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/fan/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "AirConditioner",
          "title": "Smart Air Conditioner",
          "id": "urn:smart-iot-device:ac:upstairs-office",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart air conditioner located in the upstairs office.",
          "properties": {
            "status": {
              "title": "AC Status",
              "description": "The current status of the air conditioner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "COOL",
                "OFF",
                "STANDBY",
                "FAN_ONLY"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/status",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "swing": {
              "title": "Swing Mode",
              "description": "The swing mode of the air conditioner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/swing",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/swing",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "fan": {
              "title": "Fan Speed",
              "description": "The fan speed of the air conditioner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OFF",
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/fan",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "temperature": {
              "title": "Current Temperature",
              "description": "The current temperature measured by the air conditioner.",
              "observable": null,
              "type": "integer",
              "minimum": 12,
              "maximum": 60,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/temp",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/temp",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "setpointAcknowledged": {
              "title": "Setpoint Acknowledged",
              "description": "Event triggered when a temperature setpoint is acknowledged.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/ok",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/setpoint/ok",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "setTemperature": {
              "title": "Set Temperature",
              "description": "Set the desired temperature of the air conditioner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 11,
                "maximum": 34,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/setpoint/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setMode": {
              "title": "Set Mode",
              "description": "Set the mode of the air conditioner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "eco",
                  "sleep",
                  "full"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/mode/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/mode/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setFanSpeed": {
              "title": "Set Fan Speed",
              "description": "Set the fan speed of the air conditioner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "off",
                  "low",
                  "medium",
                  "high"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/fan/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "AirConditioner",
          "title": "Upstairs Office AC",
          "id": "urn:upstairs:office:ac",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart air conditioner located in the upstairs office.",
          "properties": {
            "status": {
              "title": "AC Status",
              "description": "The current status of the air conditioner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "COOL",
                "OFF",
                "STANDBY",
                "FAN_ONLY"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/status",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            },
            "swing": {
              "title": "Swing Mode",
              "description": "The swing mode of the air conditioner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/swing",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/swing",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            },
            "fan": {
              "title": "Fan Speed",
              "description": "The fan speed of the air conditioner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OFF",
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/fan",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            },
            "temperature": {
              "title": "Current Temperature",
              "description": "The current temperature measured by the air conditioner.",
              "observable": null,
              "type": "integer",
              "minimum": 12,
              "maximum": 60,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/temp",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/temp",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "setpointAcknowledged": {
              "title": "Setpoint Acknowledged",
              "description": "Event triggered when the setpoint is acknowledged.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/ok",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/setpoint/ok",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "setTemperature": {
              "title": "Set Temperature",
              "description": "Set the desired temperature of the air conditioner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 11,
                "maximum": 34,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/setpoint/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setMode": {
              "title": "Set Mode",
              "description": "Set the operating mode of the air conditioner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "eco",
                  "sleep",
                  "full"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/mode/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/mode/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setFanSpeed": {
              "title": "Set Fan Speed",
              "description": "Set the fan speed of the air conditioner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "off",
                  "low",
                  "medium",
                  "high"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/fan/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "AirConditioner",
          "title": "Upstairs Office Air Conditioner",
          "id": "urn:upstairs:office:ac",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart air conditioner located in the upstairs office.",
          "properties": {
            "status": {
              "title": "AC Status",
              "description": "Current status of the air conditioner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "COOL",
                "OFF",
                "STANDBY",
                "FAN_ONLY"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/status",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "swing": {
              "title": "Swing Mode",
              "description": "Swing mode of the air conditioner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/swing",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/swing",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "fan": {
              "title": "Fan Speed",
              "description": "Fan speed of the air conditioner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OFF",
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/fan",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "temperature": {
              "title": "Current Temperature",
              "description": "Current temperature reading from the air conditioner.",
              "observable": null,
              "type": "integer",
              "minimum": 12,
              "maximum": 60,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/temp",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/temp",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "setpointAcknowledged": {
              "title": "Setpoint Acknowledged",
              "description": "Acknowledgment that a setpoint has been received.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/ok",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/setpoint/ok",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "setTemperature": {
              "title": "Set Temperature",
              "description": "Set the desired temperature.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 11,
                "maximum": 34,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/setpoint/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setMode": {
              "title": "Set Mode",
              "description": "Set the operating mode of the air conditioner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "eco",
                  "sleep",
                  "full"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/mode/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/mode/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setFanSpeed": {
              "title": "Set Fan Speed",
              "description": "Set the fan speed of the air conditioner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "off",
                  "low",
                  "medium",
                  "high"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/fan/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "AirConditioner",
          "title": "Upstairs Office Air Conditioner",
          "id": "urn:upstairs:office:ac",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart air conditioner located in the upstairs office.",
          "properties": {
            "status": {
              "title": "AC Status",
              "description": "Current status of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "COOL",
                "OFF",
                "STANDBY",
                "FAN_ONLY"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/status",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "swing": {
              "title": "Swing Mode",
              "description": "Swing mode of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/swing",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/swing",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "fan": {
              "title": "Fan Speed",
              "description": "Current fan speed of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OFF",
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/fan",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "temperature": {
              "title": "Temperature",
              "description": "Current temperature reading from the air conditioner",
              "observable": null,
              "type": "integer",
              "minimum": 12,
              "maximum": 60,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/temp",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/temp",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "setpointAcknowledgement": {
              "title": "Setpoint Acknowledgement",
              "description": "Acknowledgement for setpoint changes",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/ok",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/setpoint/ok",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "setTemperature": {
              "title": "Set Temperature",
              "description": "Set the desired temperature on the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 11,
                "maximum": 34,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/setpoint/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setMode": {
              "title": "Set Mode",
              "description": "Set the operating mode of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "eco",
                  "sleep",
                  "full"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/mode/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/mode/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setFanSpeed": {
              "title": "Set Fan Speed",
              "description": "Set the fan speed of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "off",
                  "low",
                  "medium",
                  "high"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/fan/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "AirConditioner",
          "title": "Smart Office Air Conditioner",
          "id": "urn:upstairs:office:ac",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart air conditioner located in the upstairs office",
          "properties": {
            "status": {
              "title": "AC Status",
              "description": "Current status of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "COOL",
                "OFF",
                "STANDBY",
                "FAN_ONLY"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/status",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/status",
                  "mqv:retain": true,
                  "op": [
                    "readproperty",
                    "observeproperty"
                  ]
                }
              ]
            },
            "swing": {
              "title": "Swing Mode",
              "description": "Swing mode of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/swing",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/swing",
                  "mqv:retain": false,
                  "op": [
                    "readproperty",
                    "writeproperty"
                  ]
                }
              ]
            },
            "fan": {
              "title": "Fan Speed",
              "description": "Fan speed of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OFF",
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/fan",
                  "mqv:retain": false,
                  "op": [
                    "readproperty",
                    "writeproperty"
                  ]
                }
              ]
            },
            "temperature": {
              "title": "Current Temperature",
              "description": "Current temperature reading from the air conditioner",
              "observable": null,
              "type": "integer",
              "minimum": 12,
              "maximum": 60,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/temp",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/temp",
                  "mqv:retain": true,
                  "op": [
                    "readproperty",
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "setpointOk": {
              "title": "Setpoint Acknowledged",
              "description": "Notification that the setpoint has been acknowledged",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/ok",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/setpoint/ok",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "setTemperature": {
              "title": "Set Temperature",
              "description": "Set the desired temperature for the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 11,
                "maximum": 34,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/setpoint/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setMode": {
              "title": "Set Mode",
              "description": "Set the operational mode of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "eco",
                  "sleep",
                  "full"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/mode/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/mode/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setFanSpeed": {
              "title": "Set Fan Speed",
              "description": "Set the fan speed of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "off",
                  "low",
                  "medium",
                  "high"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/fan/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "AirConditioner",
          "title": "Smart Office AC",
          "id": "urn:upstairs:office:ac",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart air conditioner located in the upstairs office",
          "properties": {
            "status": {
              "title": "AC Status",
              "description": "Current status of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "COOL",
                "OFF",
                "STANDBY",
                "FAN_ONLY"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/status",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "swing": {
              "title": "Swing Mode",
              "description": "Swing mode of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/swing",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/swing",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "fan": {
              "title": "Fan Speed",
              "description": "Current fan speed of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OFF",
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/fan",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "temperature": {
              "title": "Current Temperature",
              "description": "Current temperature reading from the air conditioner",
              "observable": null,
              "type": "integer",
              "minimum": 12,
              "maximum": 60,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/temp",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/temp",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "setpointAcknowledged": {
              "title": "Setpoint Acknowledged",
              "description": "Acknowledgment of setpoint change",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/ok",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/setpoint/ok",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "setTemperature": {
              "title": "Set Temperature",
              "description": "Set the desired temperature of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 11,
                "maximum": 34,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/setpoint/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setMode": {
              "title": "Set Mode",
              "description": "Set the operation mode of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "eco",
                  "sleep",
                  "full"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/mode/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/mode/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setFanSpeed": {
              "title": "Set Fan Speed",
              "description": "Set the fan speed of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "off",
                  "low",
                  "medium",
                  "high"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/fan/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "AirConditioner",
          "title": "Smart Office Air Conditioner",
          "id": "urn:upstairs:office:ac",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart air conditioner located in the upstairs office.",
          "properties": {
            "status": {
              "title": "AC Status",
              "description": "The current status of the air conditioner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "COOL",
                "OFF",
                "STANDBY",
                "FAN_ONLY"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/status",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/status",
                  "mqv:retain": true,
                  "op": [
                    "observe",
                    "read"
                  ]
                }
              ]
            },
            "swing": {
              "title": "Swing Mode",
              "description": "The swing mode of the air conditioner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/swing",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/swing",
                  "mqv:retain": false,
                  "op": [
                    "observe",
                    "read"
                  ]
                }
              ]
            },
            "fan": {
              "title": "Fan Speed",
              "description": "The fan speed of the air conditioner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OFF",
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/fan",
                  "mqv:retain": false,
                  "op": [
                    "observe",
                    "read"
                  ]
                }
              ]
            },
            "temperature": {
              "title": "Current Temperature",
              "description": "The current temperature measured by the air conditioner.",
              "observable": null,
              "type": "integer",
              "minimum": 12,
              "maximum": 60,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/temp",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/temp",
                  "mqv:retain": true,
                  "op": [
                    "observe",
                    "read"
                  ]
                }
              ]
            }
          },
          "events": {
            "setpointConfirmation": {
              "title": "Setpoint Confirmation",
              "description": "Confirmation event for the setpoint action.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/ok",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/setpoint/ok",
                  "mqv:retain": false,
                  "op": [
                    "observe"
                  ]
                }
              ]
            }
          },
          "actions": {
            "setTemperature": {
              "title": "Set Temperature",
              "description": "Set the desired temperature for the air conditioner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 11,
                "maximum": 34,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/setpoint/set",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            },
            "setMode": {
              "title": "Set Mode",
              "description": "Set the operating mode of the air conditioner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "eco",
                  "sleep",
                  "full"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/mode/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/mode/set",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            },
            "setFanSpeed": {
              "title": "Set Fan Speed",
              "description": "Set the fan speed of the air conditioner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "off",
                  "low",
                  "medium",
                  "high"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/fan/set",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartAC",
          "title": "Upstairs Office Air Conditioner",
          "id": "urn:upstairs:office:ac",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart air conditioner located in the upstairs office",
          "properties": {
            "status": {
              "title": "AC Status",
              "description": "Current status of the air conditioner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "COOL",
                "OFF",
                "STANDBY",
                "FAN_ONLY"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/status",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "swing": {
              "title": "Swing Mode",
              "description": "Swing mode status",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/swing",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/swing",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "fan": {
              "title": "Fan Speed",
              "description": "Current fan speed setting",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OFF",
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/fan",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "temperature": {
              "title": "Current Temperature",
              "description": "Current temperature reading",
              "observable": null,
              "type": "integer",
              "minimum": 12,
              "maximum": 60,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/temp",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/temp",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "setpointOk": {
              "title": "Setpoint Confirmation",
              "description": "Confirmation that the setpoint has been acknowledged",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/ok",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/setpoint/ok",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "setTemperature": {
              "title": "Set Temperature",
              "description": "Set the desired temperature",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 11,
                "maximum": 34,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/setpoint/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setMode": {
              "title": "Set Mode",
              "description": "Set the operating mode of the air conditioner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "eco",
                  "sleep",
                  "full"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/mode/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/mode/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setFanSpeed": {
              "title": "Set Fan Speed",
              "description": "Set the fan speed",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "off",
                  "low",
                  "medium",
                  "high"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/fan/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "AirConditioner",
          "title": "Smart AC in Upstairs Office",
          "id": "urn:smart:ac:upstairs:office",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart air conditioner located in the upstairs office.",
          "properties": {
            "status": {
              "title": "AC Status",
              "description": "Current status of the air conditioner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNKNOWN",
                "COOL",
                "OFF",
                "STANDBY",
                "FAN_ONLY"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/status",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "swing": {
              "title": "Swing Mode",
              "description": "Swing mode of the air conditioner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ON",
                "OFF"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/swing",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/swing",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "fan": {
              "title": "Fan Speed",
              "description": "Fan speed of the air conditioner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OFF",
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/fan",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "temperature": {
              "title": "Current Temperature",
              "description": "Current measured temperature by the air conditioner.",
              "observable": null,
              "type": "integer",
              "minimum": 12,
              "maximum": 60,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/temp",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/temp",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "setpointAcknowledged": {
              "title": "Setpoint Acknowledged",
              "description": "Acknowledgement of the setpoint command.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/ok",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/setpoint/ok",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "setTemperature": {
              "title": "Set Temperature",
              "description": "Set the desired temperature for the air conditioner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 11,
                "maximum": 34,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/setpoint/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/setpoint/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setMode": {
              "title": "Set Mode",
              "description": "Set the operating mode of the air conditioner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "eco",
                  "sleep",
                  "full"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/mode/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/mode/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setFanSpeed": {
              "title": "Set Fan Speed",
              "description": "Set the fan speed of the air conditioner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "off",
                  "low",
                  "medium",
                  "high"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/upstairs/office/ac/fan/set",
                  "contentType": null,
                  "mqv:topic": "upstairs/office/ac/fan/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'upstairs/office/ac/status'; payload: 'UNKNOWN'; retain: 'true'\ntopic: 'upstairs/office/ac/status'; payload: 'COOL'; retain: 'true'\ntopic: 'upstairs/office/ac/status'; payload: 'OFF'; retain: 'true'\ntopic: 'upstairs/office/ac/status'; payload: 'STANDBY'; retain: 'true'\ntopic: 'upstairs/office/ac/status'; payload: 'FAN_ONLY'; retain: 'true'\ntopic: 'upstairs/office/ac/swing'; payload: 'ON'; retain: 'false'\ntopic: 'upstairs/office/ac/swing'; payload: 'OFF'; retain: 'false'\ntopic: 'upstairs/office/ac/fan'; payload: 'OFF'; retain: 'false'\ntopic: 'upstairs/office/ac/fan'; payload: 'LOW'; retain: 'false'\ntopic: 'upstairs/office/ac/fan'; payload: 'MEDIUM'; retain: 'false'\ntopic: 'upstairs/office/ac/fan'; payload: 'HIGH'; retain: 'false'\ntopic: 'upstairs/office/ac/temp'; payload: '50'; retain: 'true'\ntopic: 'upstairs/office/ac/temp'; payload: '25'; retain: 'true'\ntopic: 'upstairs/office/ac/temp'; payload: '12'; retain: 'true'\ntopic: 'upstairs/office/ac/temp'; payload: '29'; retain: 'true'\ntopic: 'upstairs/office/ac/temp'; payload: '60'; retain: 'true'\ntopic: 'upstairs/office/ac/setpoint/ok'; payload: ''; retain: 'false'\ntopic: 'upstairs/office/ac/setpoint/ok'; payload: ''; retain: 'false'\ntopic: 'upstairs/office/ac/setpoint/ok'; payload: ''; retain: 'false'\ntopic: 'upstairs/office/ac/setpoint/ok'; payload: ''; retain: 'false'\ntopic: 'upstairs/office/ac/setpoint/ok'; payload: ''; retain: 'false'\ntopic: 'upstairs/office/ac/setpoint/set'; payload: '34'; retain: 'false'\ntopic: 'upstairs/office/ac/setpoint/set'; payload: '11'; retain: 'false'\ntopic: 'upstairs/office/ac/setpoint/set'; payload: '26'; retain: 'false'\ntopic: 'upstairs/office/ac/setpoint/set'; payload: '25'; retain: 'false'\ntopic: 'upstairs/office/ac/setpoint/set'; payload: '28'; retain: 'false'\ntopic: 'upstairs/office/ac/mode/set'; payload: 'eco'; retain: 'false'\ntopic: 'upstairs/office/ac/mode/set'; payload: 'sleep'; retain: 'false'\ntopic: 'upstairs/office/ac/mode/set'; payload: 'full'; retain: 'false'\ntopic: 'upstairs/office/ac/fan/set'; payload: 'off'; retain: 'false'\ntopic: 'upstairs/office/ac/fan/set'; payload: 'low'; retain: 'false'\ntopic: 'upstairs/office/ac/fan/set'; payload: 'medium'; retain: 'false'\ntopic: 'upstairs/office/ac/fan/set'; payload: 'high'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "SmartSensor",
        "title": "MyIlluminanceSensor",
        "id": "urn:uuid:f63a9095-ae49-43db-a9ce-f620df21b8a6",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "An illuminance Sensor",
        "properties": {
          "status": {
            "title": "Sensor Status",
            "description": "Status of the Sensor",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "unknown",
              "normal",
              "fault"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "application/deviceid/sensor/operation",
                "mqv:retain": false,
                "op": [
                  "observeproperty"
                ]
              }
            ]
          },
          "uptime": {
            "title": "Sensor Uptime",
            "description": "Uptime of the Sensor",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "application/deviceid/sensor/uptime",
                "mqv:retain": true,
                "op": [
                  "observeproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "illuminance": {
            "title": "Illuminance measurement",
            "description": "Illuminance measurement",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "application/deviceid/sensor/illuminance",
                "mqv:retain": true,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "calibrate": {
            "title": "Calibration",
            "description": "Calibration",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ok",
                "error"
              ],
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "application/deviceid/sensor/calibrate",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSensor",
          "title": "Smart IoT Device",
          "id": "urn:smart:iot:device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device with various sensor capabilities.",
          "properties": {
            "operation": {
              "title": "Operation Mode",
              "description": "The current operational mode of the sensor.",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "normal",
                "fault"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/operation",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/operation",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "uptime": {
              "title": "Uptime",
              "description": "The uptime of the sensor in ISO 8601 format.",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/uptime",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/uptime",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "illuminance": {
              "title": "Illuminance",
              "description": "The current illuminance level measured by the sensor.",
              "observable": true,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "calibrate": {
              "title": "Calibrate Sensor",
              "description": "Calibrate the sensor with a specific value.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/calibrate",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/calibrate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSensorDevice",
          "title": "Smart IoT Sensor Device",
          "id": "urn:deviceid:sensor",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT sensor device that monitors operation status, uptime, and illuminance, and can be calibrated.",
          "properties": {
            "operation": {
              "title": "Operation Status",
              "description": "Indicates the current operation status of the sensor.",
              "observable": false,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "normal",
                "fault"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/operation",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/operation",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "uptime": {
              "title": "Uptime",
              "description": "The uptime of the sensor in ISO 8601 format.",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/uptime",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/uptime",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "illuminance": {
              "title": "Illuminance",
              "description": "The current illuminance level measured by the sensor.",
              "observable": true,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "calibrate": {
              "title": "Calibrate Sensor",
              "description": "Calibrate the sensor with a given value.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/calibrate",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/calibrate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSensorDevice",
          "title": "Smart IoT Sensor Device",
          "id": "urn:uuid:123e4567-e89b-12d3-a456-426614174000",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that monitors sensor operations, uptime, illuminance, and allows calibration.",
          "properties": {
            "operation": {
              "title": "Sensor Operation",
              "description": "Current operational state of the sensor",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "normal",
                "fault"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/operation",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/operation",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "uptime": {
              "title": "Sensor Uptime",
              "description": "The uptime of the sensor in ISO 8601 format",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/uptime",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/uptime",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "illuminance": {
              "title": "Illuminance",
              "description": "Current illuminance level measured by the sensor",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "calibrate": {
              "title": "Calibrate Sensor",
              "description": "Calibrate the sensor with a given value",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/calibrate",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/calibrate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSensor",
          "title": "Smart IoT Device",
          "id": "urn:uuid:example-smart-iot-device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device with various sensors and operations.",
          "properties": {
            "operation": {
              "title": "Operation Status",
              "description": "The current operational status of the sensor.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "normal",
                "fault"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/operation",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/operation",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "uptime": {
              "title": "Uptime",
              "description": "The uptime of the sensor in ISO 8601 format.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/uptime",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/uptime",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "illuminance": {
              "title": "Illuminance",
              "description": "The current illuminance level measured by the sensor.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "calibrate": {
              "title": "Calibrate Sensor",
              "description": "Calibrate the sensor with a given value.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/calibrate",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/calibrate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSensor",
          "title": "Smart IoT Sensor Device",
          "id": "urn:example:smartsensor:deviceid",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT sensor device monitoring operation status, uptime, and illuminance, with calibration capability.",
          "properties": {
            "operation": {
              "title": "Operation Status",
              "description": "The current operation status of the sensor.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "normal",
                "fault"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/operation",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/operation",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "uptime": {
              "title": "Uptime",
              "description": "The uptime of the sensor device.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/uptime",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/uptime",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "illuminance": {
              "title": "Illuminance",
              "description": "The current illuminance level measured by the sensor.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "calibrate": {
              "title": "Calibrate Sensor",
              "description": "Calibrate the sensor with a given value.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/calibrate",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/calibrate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSensor",
          "title": "Smart IoT Sensor Device",
          "id": "urn:uuid:12345678-1234-5678-1234-567812345678",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart sensor device that monitors operation status, uptime, illuminance, and can be calibrated.",
          "properties": {
            "operation": {
              "title": "Operation Status",
              "description": "The current operational status of the sensor.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "normal",
                "fault"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/operation",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/operation",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "uptime": {
              "title": "Uptime",
              "description": "The uptime of the sensor in ISO 8601 format.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/uptime",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/uptime",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "illuminance": {
              "title": "Illuminance",
              "description": "The current illuminance level measured by the sensor.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "calibrate": {
              "title": "Calibrate Sensor",
              "description": "Calibrate the sensor with a given value.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/calibrate",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/calibrate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSensorDevice",
          "title": "Smart IoT Sensor Device",
          "id": "urn:smart-iot:sensor-device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT sensor device that monitors operation status, uptime, illuminance, and can be calibrated.",
          "properties": {
            "operation": {
              "title": "Operation Status",
              "description": "Indicates the current operation status of the sensor.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "normal",
                "fault"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/operation",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/operation",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "uptime": {
              "title": "Uptime",
              "description": "The uptime of the sensor device.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/uptime",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/uptime",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "illuminance": {
              "title": "Illuminance",
              "description": "Current illuminance level measured by the sensor.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "calibrate": {
              "title": "Calibrate Sensor",
              "description": "Calibrates the sensor with a given value.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/calibrate",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/calibrate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSensor",
          "title": "Smart IoT Device",
          "id": "urn:deviceid:sensor",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device with various sensor capabilities.",
          "properties": {
            "operation": {
              "title": "Operation Status",
              "description": "The current operational status of the sensor.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "normal",
                "fault"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/operation",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/operation",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "uptime": {
              "title": "Uptime",
              "description": "The uptime of the sensor.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/uptime",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/uptime",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "illuminance": {
              "title": "Illuminance",
              "description": "The current illuminance level measured by the sensor.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "calibrate": {
              "title": "Calibrate Sensor",
              "description": "Calibrate the sensor with a given value.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/calibrate",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/calibrate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSensor",
          "title": "Smart IoT Device",
          "id": "urn:smart-iot-device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device with various sensor capabilities.",
          "properties": {
            "operation": {
              "title": "Sensor Operation Status",
              "description": "Indicates the current operation status of the sensor.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "normal",
                "fault"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/operation",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/operation",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "uptime": {
              "title": "Sensor Uptime",
              "description": "The uptime of the sensor in ISO 8601 format.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/uptime",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/uptime",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "illuminance": {
              "title": "Sensor Illuminance",
              "description": "The current illuminance level measured by the sensor.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "calibrate": {
              "title": "Calibrate Sensor",
              "description": "Calibrate the sensor with a given value.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/calibrate",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/calibrate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSensor",
          "title": "Smart IoT Sensor Device",
          "id": "urn:dev:ops:application:deviceid",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT sensor device that monitors operation status, uptime, and illuminance levels, and can be calibrated.",
          "properties": {
            "operation": {
              "title": "Operation Status",
              "description": "Indicates the current operational status of the sensor.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "normal",
                "fault"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/operation",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/operation",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "uptime": {
              "title": "Uptime",
              "description": "Reports the uptime of the sensor.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/uptime",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/uptime",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "illuminance": {
              "title": "Illuminance Level",
              "description": "Measures the current illuminance level.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "calibrate": {
              "title": "Calibrate Sensor",
              "description": "Calibrates the sensor to a specified value.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/calibrate",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/calibrate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'application/deviceid/sensor/operation'; payload: 'unknown'; retain: 'false'\ntopic: 'application/deviceid/sensor/operation'; payload: 'normal'; retain: 'false'\ntopic: 'application/deviceid/sensor/operation'; payload: 'fault'; retain: 'false'\ntopic: 'application/deviceid/sensor/uptime'; payload: '2024-12-18T09:46:31.734818'; retain: 'true'\ntopic: 'application/deviceid/sensor/uptime'; payload: '2024-12-18T09:51:31.734818'; retain: 'true'\ntopic: 'application/deviceid/sensor/uptime'; payload: '2024-12-18T09:56:31.734818'; retain: 'true'\ntopic: 'application/deviceid/sensor/uptime'; payload: '2024-12-18T10:01:31.734818'; retain: 'true'\ntopic: 'application/deviceid/sensor/uptime'; payload: '2024-12-18T10:06:31.734818'; retain: 'true'\ntopic: 'application/deviceid/sensor/illuminance'; payload: '205'; retain: 'true'\ntopic: 'application/deviceid/sensor/illuminance'; payload: '63'; retain: 'true'\ntopic: 'application/deviceid/sensor/illuminance'; payload: '174'; retain: 'true'\ntopic: 'application/deviceid/sensor/illuminance'; payload: '46'; retain: 'true'\ntopic: 'application/deviceid/sensor/illuminance'; payload: '30'; retain: 'true'\ntopic: 'application/deviceid/sensor/calibrate'; payload: '220'; retain: 'false'\ntopic: 'application/deviceid/sensor/calibrate'; payload: '193'; retain: 'false'\ntopic: 'application/deviceid/sensor/calibrate'; payload: '44'; retain: 'false'\ntopic: 'application/deviceid/sensor/calibrate'; payload: '99'; retain: 'false'\ntopic: 'application/deviceid/sensor/calibrate'; payload: '53'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "LawnMower",
        "title": "Lawn Mower",
        "id": "urn:uuid:ad29cf9d-e767-4c45-aff7-7919beb5bedb",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "A smart lawn mower",
        "properties": {
          "activity": {
            "title": "Mower State",
            "description": "The state of the lawn mower",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "UNDOCKED",
              "DOCKED",
              "CHARGING",
              "MOWING"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "lawn_mower_plus/state",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "battery": {
            "title": "Battery",
            "description": "Battery percentage of the lawn mower",
            "observable": true,
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "lawn_mower_plus/state",
                "mqv:retain": true,
                "op": [
                  "observeproperty"
                ]
              }
            ]
          },
          "reachEstimate": {
            "title": "Reach Estimate",
            "description": "Estimated reach in minutes until next recharge",
            "observable": true,
            "type": "integer",
            "minimum": 0,
            "maximum": 250,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "lawn_mower_plus/reach",
                "mqv:retain": true,
                "op": [
                  "observeproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "dock": {
            "title": "Docking State Changed",
            "description": "The docking state has changed",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "DOCKED",
                "UNDOCKED"
              ],
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "lawn_mower_plus/dock/status",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "start": {
            "title": "Start Job",
            "description": "Start the lawn mower job",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "lawn_mower_plus/start",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "pause": {
            "title": "Pause Job",
            "description": "Pause the lawn mower job",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "lawn_mower_plus/pause",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "docked": {
            "title": "Dock lawn mower",
            "description": "Dock the lawn mower",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "lawn_mower_plus/dock",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartLawnMower",
          "title": "Lawn Mower Plus",
          "id": "urn:uuid:lawn-mower-plus-001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lawn mower with various states and control actions.",
          "properties": {
            "state": {
              "title": "State",
              "description": "The current state of the lawn mower.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNDOCKED",
                "DOCKED",
                "CHARGING",
                "MOWING"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "batteryLevel": {
              "title": "Battery Level",
              "description": "The current battery level of the lawn mower.",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "reach": {
              "title": "Reach",
              "description": "The current reach of the lawn mower.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/reach",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/reach",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "dockStatus": {
              "title": "Dock Status",
              "description": "The docking status of the lawn mower.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "DOCKED",
                "UNDOCKED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock/status",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock/status",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "start": {
              "title": "Start",
              "description": "Start the lawn mower.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/start",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/start",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "pause": {
              "title": "Pause",
              "description": "Pause the lawn mower.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/pause",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/pause",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "dock": {
              "title": "Dock",
              "description": "Dock the lawn mower.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartLawnMower",
          "title": "Lawn Mower Plus",
          "id": "urn:uuid:123e4567-e89b-12d3-a456-426614174000",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lawn mower with various states and controls.",
          "properties": {
            "state": {
              "title": "State",
              "description": "The current state of the lawn mower.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNDOCKED",
                "DOCKED",
                "CHARGING",
                "MOWING"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": "text/plain",
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "batteryLevel": {
              "title": "Battery Level",
              "description": "The battery level of the lawn mower.",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": "text/plain",
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "reach": {
              "title": "Reach",
              "description": "The reach distance of the lawn mower.",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/reach",
                  "contentType": "text/plain",
                  "mqv:topic": "lawn_mower_plus/reach",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "dockStatus": {
              "title": "Dock Status",
              "description": "The dock status of the lawn mower.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "DOCKED",
                "UNDOCKED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock/status",
                  "contentType": "text/plain",
                  "mqv:topic": "lawn_mower_plus/dock/status",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "start": {
              "title": "Start",
              "description": "Start the lawn mower.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/start",
                  "contentType": "text/plain",
                  "mqv:topic": "lawn_mower_plus/start",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "pause": {
              "title": "Pause",
              "description": "Pause the lawn mower.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/pause",
                  "contentType": "text/plain",
                  "mqv:topic": "lawn_mower_plus/pause",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "dock": {
              "title": "Dock",
              "description": "Dock the lawn mower.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock",
                  "contentType": "text/plain",
                  "mqv:topic": "lawn_mower_plus/dock",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartLawnMower",
          "title": "Lawn Mower Plus",
          "id": "urn:uuid:1234-5678-9012-3456",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lawn mower with various states and controls.",
          "properties": {
            "state": {
              "title": "State",
              "description": "The current state of the lawn mower.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNDOCKED",
                "DOCKED",
                "CHARGING",
                "MOWING"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "batteryLevel": {
              "title": "Battery Level",
              "description": "The current battery level of the lawn mower.",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "reach": {
              "title": "Reach",
              "description": "The reach of the lawn mower in meters.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/reach",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/reach",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "dockStatus": {
              "title": "Dock Status",
              "description": "The dock status of the lawn mower.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "DOCKED",
                "UNDOCKED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock/status",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock/status",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "start": {
              "title": "Start",
              "description": "Start the lawn mower.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/start",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/start",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "pause": {
              "title": "Pause",
              "description": "Pause the lawn mower.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/pause",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/pause",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "dock": {
              "title": "Dock",
              "description": "Dock the lawn mower.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartLawnMower",
          "title": "Lawn Mower Plus",
          "id": "urn:uuid:123e4567-e89b-12d3-a456-426614174000",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lawn mower with multiple operational states and controls",
          "properties": {
            "state": {
              "title": "State",
              "description": "The current state of the lawn mower",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNDOCKED",
                "DOCKED",
                "CHARGING",
                "MOWING"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "batteryLevel": {
              "title": "Battery Level",
              "description": "The current battery level of the lawn mower",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "reach": {
              "title": "Reach",
              "description": "The current reach of the lawn mower in meters",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/reach",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "dockStatus": {
              "title": "Dock Status",
              "description": "The docking status of the lawn mower",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "DOCKED",
                "UNDOCKED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock/status",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "start": {
              "title": "Start",
              "description": "Start the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/start",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "pause": {
              "title": "Pause",
              "description": "Pause the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/pause",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "dock": {
              "title": "Dock",
              "description": "Dock the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartLawnMower",
          "title": "Lawn Mower Plus",
          "id": "urn:uuid:12345678-1234-5678-1234-567812345678",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lawn mower with various operational states and controls.",
          "properties": {
            "state": {
              "title": "State",
              "description": "Current state of the lawn mower.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNDOCKED",
                "DOCKED",
                "CHARGING",
                "MOWING"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "batteryLevel": {
              "title": "Battery Level",
              "description": "Battery level of the lawn mower.",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "reach": {
              "title": "Reach",
              "description": "The reach distance of the lawn mower.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/reach",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/reach",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "dockStatus": {
              "title": "Dock Status",
              "description": "The docking status of the lawn mower.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "DOCKED",
                "UNDOCKED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock/status",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock/status",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "start": {
              "title": "Start",
              "description": "Start the lawn mower.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/start",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/start",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "pause": {
              "title": "Pause",
              "description": "Pause the lawn mower.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/pause",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/pause",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "dock": {
              "title": "Dock",
              "description": "Dock the lawn mower.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartLawnMower",
          "title": "Lawn Mower Plus",
          "id": "urn:uuid:lawn-mower-plus",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lawn mower with various states and controls.",
          "properties": {
            "state": {
              "title": "State",
              "description": "The current state of the lawn mower.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNDOCKED",
                "DOCKED",
                "CHARGING",
                "MOWING"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": [
                    "observe"
                  ]
                }
              ]
            },
            "batteryLevel": {
              "title": "Battery Level",
              "description": "The current battery level percentage.",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": [
                    "observe"
                  ]
                }
              ]
            },
            "reach": {
              "title": "Reach",
              "description": "The current reach of the lawn mower in meters.",
              "observable": null,
              "type": "integer",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/reach",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/reach",
                  "mqv:retain": true,
                  "op": [
                    "observe"
                  ]
                }
              ]
            },
            "dockStatus": {
              "title": "Dock Status",
              "description": "The docking status of the lawn mower.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "DOCKED",
                "UNDOCKED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock/status",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock/status",
                  "mqv:retain": false,
                  "op": [
                    "observe"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "start": {
              "title": "Start Mowing",
              "description": "Start the lawn mower.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/start",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/start",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            },
            "pause": {
              "title": "Pause Mowing",
              "description": "Pause the lawn mower.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/pause",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/pause",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            },
            "dock": {
              "title": "Dock Mower",
              "description": "Dock the lawn mower.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartLawnMower",
          "title": "Lawn Mower Plus",
          "id": "urn:uuid:lawn-mower-plus-001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lawn mower with various states and controls.",
          "properties": {
            "state": {
              "title": "State",
              "description": "Current state of the lawn mower",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNDOCKED",
                "DOCKED",
                "CHARGING",
                "MOWING"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": [
                    "observe"
                  ]
                }
              ]
            },
            "batteryLevel": {
              "title": "Battery Level",
              "description": "Current battery level of the lawn mower",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": [
                    "observe"
                  ]
                }
              ]
            },
            "reach": {
              "title": "Reach",
              "description": "Distance covered by the lawn mower",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/reach",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/reach",
                  "mqv:retain": true,
                  "op": [
                    "observe"
                  ]
                }
              ]
            },
            "dockStatus": {
              "title": "Dock Status",
              "description": "Docking status of the lawn mower",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "DOCKED",
                "UNDOCKED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock/status",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock/status",
                  "mqv:retain": false,
                  "op": [
                    "observe"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "start": {
              "title": "Start",
              "description": "Start the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/start",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/start",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            },
            "pause": {
              "title": "Pause",
              "description": "Pause the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/pause",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/pause",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            },
            "dock": {
              "title": "Dock",
              "description": "Dock the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartLawnMower",
          "title": "Lawn Mower Plus",
          "id": "urn:uuid:123e4567-e89b-12d3-a456-426614174000",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lawn mower that can dock, undock, start, pause, and report its state and reach.",
          "properties": {
            "state": {
              "title": "State",
              "description": "Current state of the lawn mower",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNDOCKED",
                "DOCKED",
                "CHARGING",
                "MOWING"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": [
                    "observe"
                  ]
                }
              ]
            },
            "batteryLevel": {
              "title": "Battery Level",
              "description": "Battery level of the lawn mower",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": [
                    "observe"
                  ]
                }
              ]
            },
            "reach": {
              "title": "Reach",
              "description": "Reach distance of the lawn mower",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/reach",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/reach",
                  "mqv:retain": true,
                  "op": [
                    "observe"
                  ]
                }
              ]
            },
            "dockStatus": {
              "title": "Dock Status",
              "description": "Docking status of the lawn mower",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "DOCKED",
                "UNDOCKED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock/status",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock/status",
                  "mqv:retain": false,
                  "op": [
                    "observe"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "start": {
              "title": "Start",
              "description": "Start the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/start",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/start",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            },
            "pause": {
              "title": "Pause",
              "description": "Pause the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/pause",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/pause",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            },
            "dock": {
              "title": "Dock",
              "description": "Dock the lawn mower",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartLawnMower",
          "title": "Lawn Mower Plus",
          "id": "urn:uuid:123e4567-e89b-12d3-a456-426614174000",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lawn mower with MQTT integration for state monitoring and control.",
          "properties": {
            "state": {
              "title": "State",
              "description": "The current state of the lawn mower.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNDOCKED",
                "DOCKED",
                "CHARGING",
                "MOWING"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "batteryLevel": {
              "title": "Battery Level",
              "description": "The current battery level of the lawn mower.",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "reach": {
              "title": "Reach",
              "description": "The current reach of the lawn mower.",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/reach",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/reach",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "dockStatus": {
              "title": "Dock Status",
              "description": "The current docking status of the lawn mower.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "DOCKED",
                "UNDOCKED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock/status",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock/status",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "start": {
              "title": "Start",
              "description": "Start the lawn mower.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/start",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/start",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "pause": {
              "title": "Pause",
              "description": "Pause the lawn mower.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/pause",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/pause",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "dock": {
              "title": "Dock",
              "description": "Dock the lawn mower.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartLawnMower",
          "title": "Lawn Mower Plus",
          "id": "urn:uuid:123e4567-e89b-12d3-a456-426614174000",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lawn mower with multiple states and capabilities.",
          "properties": {
            "state": {
              "title": "State",
              "description": "The current state of the lawn mower.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "UNDOCKED",
                "DOCKED",
                "CHARGING",
                "MOWING"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "batteryLevel": {
              "title": "Battery Level",
              "description": "The current battery level of the lawn mower.",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/state",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "reach": {
              "title": "Reach",
              "description": "The reach of the lawn mower in meters.",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/reach",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/reach",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "dockStatus": {
              "title": "Dock Status",
              "description": "The docking status of the lawn mower.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "DOCKED",
                "UNDOCKED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock/status",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock/status",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "start": {
              "title": "Start",
              "description": "Start the lawn mower.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/start",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/start",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "pause": {
              "title": "Pause",
              "description": "Pause the lawn mower.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/pause",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/pause",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "dock": {
              "title": "Dock",
              "description": "Dock the lawn mower.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/lawn_mower_plus/dock",
                  "contentType": null,
                  "mqv:topic": "lawn_mower_plus/dock",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'lawn_mower_plus/state'; payload: 'UNDOCKED'; retain: 'true'\ntopic: 'lawn_mower_plus/state'; payload: 'DOCKED'; retain: 'true'\ntopic: 'lawn_mower_plus/state'; payload: 'CHARGING'; retain: 'true'\ntopic: 'lawn_mower_plus/state'; payload: 'MOWING'; retain: 'true'\ntopic: 'lawn_mower_plus/state'; payload: '31'; retain: 'true'\ntopic: 'lawn_mower_plus/state'; payload: '25'; retain: 'true'\ntopic: 'lawn_mower_plus/state'; payload: '33'; retain: 'true'\ntopic: 'lawn_mower_plus/state'; payload: '53'; retain: 'true'\ntopic: 'lawn_mower_plus/state'; payload: '36'; retain: 'true'\ntopic: 'lawn_mower_plus/reach'; payload: '156'; retain: 'true'\ntopic: 'lawn_mower_plus/reach'; payload: '39'; retain: 'true'\ntopic: 'lawn_mower_plus/reach'; payload: '214'; retain: 'true'\ntopic: 'lawn_mower_plus/reach'; payload: '140'; retain: 'true'\ntopic: 'lawn_mower_plus/reach'; payload: '82'; retain: 'true'\ntopic: 'lawn_mower_plus/dock/status'; payload: 'DOCKED'; retain: 'false'\ntopic: 'lawn_mower_plus/dock/status'; payload: 'UNDOCKED'; retain: 'false'\ntopic: 'lawn_mower_plus/start'; payload: 'true'; retain: 'false'\ntopic: 'lawn_mower_plus/start'; payload: 'false'; retain: 'false'\ntopic: 'lawn_mower_plus/start'; payload: 'true'; retain: 'false'\ntopic: 'lawn_mower_plus/start'; payload: 'false'; retain: 'false'\ntopic: 'lawn_mower_plus/pause'; payload: 'true'; retain: 'false'\ntopic: 'lawn_mower_plus/pause'; payload: 'false'; retain: 'false'\ntopic: 'lawn_mower_plus/pause'; payload: 'true'; retain: 'false'\ntopic: 'lawn_mower_plus/pause'; payload: 'false'; retain: 'false'\ntopic: 'lawn_mower_plus/dock'; payload: 'true'; retain: 'false'\ntopic: 'lawn_mower_plus/dock'; payload: 'false'; retain: 'false'\ntopic: 'lawn_mower_plus/dock'; payload: 'true'; retain: 'false'\ntopic: 'lawn_mower_plus/dock'; payload: 'false'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "RGBLightBulb",
        "title": "Dimmable RGB Light Bulb",
        "id": "urn:uuid:3e5c2737-e72a-44f0-a238-6681e2f3ae95",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "An RGB light bulb",
        "properties": {
          "status": {
            "title": "",
            "description": "",
            "observable": null,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "On",
              "Off",
              "Failed"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "application/deviceid/sensor/illuminance",
                "mqv:retain": true,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "events": {},
        "actions": {
          "set": {
            "title": "Brightness RGB channels",
            "description": "Set the brightness",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "r": {
                  "title": "",
                  "description": "Red channel",
                  "observable": null,
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 255,
                  "enum": null,
                  "properties": {}
                },
                "g": {
                  "title": "",
                  "description": "Green channel",
                  "observable": null,
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 255,
                  "enum": null,
                  "properties": {}
                },
                "b": {
                  "title": "",
                  "description": "Blue channel",
                  "observable": null,
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 255,
                  "enum": null,
                  "properties": {}
                }
              }
            },
            "output": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "application/bulb/set",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "power": {
            "title": "Power",
            "description": "Turn the bulb on or off",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "application/bulb/set",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "Smart IoT Device",
          "id": "urn:smart-iot-device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device with illuminance sensor and bulb control.",
          "properties": {
            "illuminance": {
              "title": "Illuminance Sensor",
              "description": "The state of the illuminance sensor.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "On",
                "Off",
                "Failed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setBulbColor": {
              "title": "Set Bulb Color",
              "description": "Set the color of the bulb using RGB values.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "r": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "g": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "b": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "setBulbState": {
              "title": "Set Bulb State",
              "description": "Turn the bulb on or off.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "Smart IoT Device",
          "id": "urn:smart-iot-device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device with illuminance sensor and controllable bulb.",
          "properties": {
            "illuminance": {
              "title": "Illuminance Sensor",
              "description": "The current status of the illuminance sensor.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "On",
                "Off",
                "Failed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setBulb": {
              "title": "Set Bulb Color",
              "description": "Set the color of the bulb using RGB values or turn it on/off.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "r": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "g": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "b": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "Smart IoT Device",
          "id": "urn:smart-iot-device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device with illuminance sensor and bulb control",
          "properties": {
            "illuminance": {
              "title": "Illuminance Sensor",
              "description": "Indicates the status of the illuminance sensor",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "On",
                "Off",
                "Failed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": "application/json",
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setBulbColor": {
              "title": "Set Bulb Color",
              "description": "Sets the color of the bulb using RGB values",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "r": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "g": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "b": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": "application/json",
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "toggleBulb": {
              "title": "Toggle Bulb",
              "description": "Turns the bulb on or off",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": "application/json",
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "Smart IoT Device",
          "id": "urn:example:smart-iot-device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device with illuminance sensor and bulb control.",
          "properties": {
            "illuminance": {
              "title": "Illuminance Sensor",
              "description": "Indicates the status of the illuminance sensor.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "On",
                "Off",
                "Failed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setBulbColor": {
              "title": "Set Bulb Color",
              "description": "Sets the RGB color of the bulb.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "r": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "g": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "b": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "toggleBulb": {
              "title": "Toggle Bulb",
              "description": "Turns the bulb on or off.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "Smart IoT Device",
          "id": "urn:smart-iot-device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device with illuminance sensor and bulb control capabilities.",
          "properties": {
            "illuminanceSensor": {
              "title": "Illuminance Sensor",
              "description": "Indicates the status of the illuminance sensor.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "On",
                "Off",
                "Failed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setBulbColor": {
              "title": "Set Bulb Color",
              "description": "Sets the color of the bulb using RGB values.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "r": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "g": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "b": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "toggleBulb": {
              "title": "Toggle Bulb",
              "description": "Turns the bulb on or off.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "Smart IoT Device",
          "id": "urn:smart-iot-device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device with illuminance sensor and controllable bulb.",
          "properties": {
            "illuminance": {
              "title": "Illuminance Sensor",
              "description": "Indicates the status of the illuminance sensor.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "On",
                "Off",
                "Failed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setBulbColor": {
              "title": "Set Bulb Color",
              "description": "Sets the color of the bulb using RGB values.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "r": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "g": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "b": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "toggleBulb": {
              "title": "Toggle Bulb",
              "description": "Turns the bulb on or off.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "Smart IoT Device",
          "id": "urn:example:smart-iot-device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device with illuminance sensor and controllable bulb.",
          "properties": {
            "illuminance": {
              "title": "Illuminance Sensor",
              "description": "The current state of the illuminance sensor.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "On",
                "Off",
                "Failed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setBulbColor": {
              "title": "Set Bulb Color",
              "description": "Set the color of the bulb using RGB values.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "r": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "g": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "b": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "toggleBulb": {
              "title": "Toggle Bulb",
              "description": "Turn the bulb on or off.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "Smart IoT Device",
          "id": "urn:smart-iot-device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device with illuminance sensor and controllable bulb.",
          "properties": {
            "illuminance": {
              "title": "Illuminance Sensor",
              "description": "The current status of the illuminance sensor.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "On",
                "Off",
                "Failed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setBulbColor": {
              "title": "Set Bulb Color",
              "description": "Set the RGB color of the bulb.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "r": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "g": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "b": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "toggleBulb": {
              "title": "Toggle Bulb",
              "description": "Turn the bulb on or off.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartIoTDevice",
          "title": "Smart IoT Device",
          "id": "urn:smart-iot-device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device with illuminance sensor and bulb control capabilities.",
          "properties": {
            "illuminance": {
              "title": "Illuminance Sensor",
              "description": "The current state of the illuminance sensor.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "On",
                "Off",
                "Failed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setBulbColor": {
              "title": "Set Bulb Color",
              "description": "Set the color of the bulb using RGB values.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "r": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "g": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "b": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "toggleBulb": {
              "title": "Toggle Bulb",
              "description": "Turn the bulb on or off.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "Smart IoT Device",
          "id": "urn:smart-iot-device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device with illuminance sensor and controllable bulb.",
          "properties": {
            "illuminance": {
              "title": "Illuminance Sensor",
              "description": "Indicates the status of the illuminance sensor.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "On",
                "Off",
                "Failed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/deviceid/sensor/illuminance",
                  "contentType": null,
                  "mqv:topic": "application/deviceid/sensor/illuminance",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "setBulb": {
              "title": "Set Bulb Color",
              "description": "Sets the RGB color of the bulb.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "r": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "g": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  },
                  "b": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "toggleBulb": {
              "title": "Toggle Bulb",
              "description": "Turns the bulb on or off.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'application/deviceid/sensor/illuminance'; payload: 'On'; retain: 'true'\ntopic: 'application/deviceid/sensor/illuminance'; payload: 'Off'; retain: 'true'\ntopic: 'application/deviceid/sensor/illuminance'; payload: 'Failed'; retain: 'true'\ntopic: 'application/bulb/set'; payload: '{'r': 75, 'g': 48, 'b': 230}'; retain: 'false'\ntopic: 'application/bulb/set'; payload: '{'r': 106, 'g': 126, 'b': 57}'; retain: 'false'\ntopic: 'application/bulb/set'; payload: '{'r': 117, 'g': 109, 'b': 209}'; retain: 'false'\ntopic: 'application/bulb/set'; payload: '{'r': 128, 'g': 168, 'b': 151}'; retain: 'false'\ntopic: 'application/bulb/set'; payload: '{'r': 10, 'g': 74, 'b': 229}'; retain: 'false'\ntopic: 'application/bulb/set'; payload: 'true'; retain: 'false'\ntopic: 'application/bulb/set'; payload: 'false'; retain: 'false'\ntopic: 'application/bulb/set'; payload: 'true'; retain: 'false'\ntopic: 'application/bulb/set'; payload: 'false'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "LightBulb",
        "title": "Dimmable Light Bulb",
        "id": "urn:uuid:e9303dd9-2565-4468-b0e0-106c408959a9",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "A dimmable light bulb",
        "properties": {},
        "events": {},
        "actions": {
          "setBrightness": {
            "title": "Brightness",
            "description": "Set the brightness",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "integer",
              "minimum": 0,
              "maximum": 255,
              "enum": null,
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "application/my_bulb/set",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Bulb",
          "id": "urn:smart:bulb:001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT bulb that can be controlled via MQTT.",
          "properties": {},
          "events": {},
          "actions": {
            "setBrightness": {
              "title": "Set Brightness",
              "description": "Set the brightness level of the smart bulb.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 255,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/my_bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/my_bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartBulb",
          "title": "My Smart Bulb",
          "id": "urn:smart-bulb:001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart bulb that can be controlled via MQTT",
          "properties": {},
          "events": {},
          "actions": {
            "setBrightness": {
              "title": "Set Brightness",
              "description": "Sets the brightness of the smart bulb",
              "input": {
                "title": "Brightness Level",
                "description": "The brightness level to set, ranging from 0 to 255",
                "observable": false,
                "type": "integer",
                "minimum": 0,
                "maximum": 255,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/my_bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/my_bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartBulb",
          "title": "Smart Bulb",
          "id": "urn:smart:bulb:001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart bulb that can be controlled via MQTT",
          "properties": {
            "brightness": {
              "title": "Brightness",
              "description": "The brightness level of the smart bulb",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 255,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/my_bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/my_bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "writeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartBulb",
          "title": "My Smart Bulb",
          "id": "urn:uuid:123e4567-e89b-12d3-a456-426614174000",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart bulb that can be controlled via MQTT",
          "properties": {},
          "events": {},
          "actions": {
            "setBrightness": {
              "title": "Set Brightness",
              "description": "Sets the brightness level of the bulb",
              "input": {
                "title": "Brightness Level",
                "description": "The brightness level to set (0-255)",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 255,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/my_bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/my_bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartBulb",
          "title": "My Smart Bulb",
          "id": "urn:uuid:123e4567-e89b-12d3-a456-426614174000",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart bulb that can be controlled via MQTT",
          "properties": {},
          "events": {},
          "actions": {
            "setBrightness": {
              "title": "Set Brightness",
              "description": "Sets the brightness level of the smart bulb",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 255,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/my_bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/my_bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartBulb",
          "title": "Smart Bulb",
          "id": "urn:dev:ops:my-bulb-001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart bulb that can be controlled via MQTT.",
          "properties": {},
          "events": {},
          "actions": {
            "setBrightness": {
              "title": "Set Brightness",
              "description": "Sets the brightness of the smart bulb.",
              "input": {
                "title": "Brightness Level",
                "description": "The brightness level to set the bulb to.",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 255,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/my_bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/my_bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartBulb",
          "title": "My Smart Bulb",
          "id": "urn:uuid:123e4567-e89b-12d3-a456-426614174000",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart bulb that can be controlled via MQTT",
          "properties": {},
          "events": {},
          "actions": {
            "setBrightness": {
              "title": "Set Brightness",
              "description": "Sets the brightness level of the bulb",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 255,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "application/my_bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartBulb",
          "title": "My Smart Bulb",
          "id": "urn:uuid:123e4567-e89b-12d3-a456-426614174000",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart bulb that can be controlled via MQTT",
          "properties": {},
          "events": {},
          "actions": {
            "setBrightness": {
              "title": "Set Brightness",
              "description": "Sets the brightness level of the smart bulb",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 255,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/my_bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/my_bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartBulb",
          "title": "My Smart Bulb",
          "id": "urn:uuid:123e4567-e89b-12d3-a456-426614174000",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart bulb that can be controlled via MQTT.",
          "properties": {},
          "events": {},
          "actions": {
            "setBrightness": {
              "title": "Set Brightness",
              "description": "Sets the brightness level of the bulb.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 255,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/my_bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/my_bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartBulb",
          "title": "Smart IoT Bulb",
          "id": "urn:uuid:123e4567-e89b-12d3-a456-426614174000",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT bulb that can be controlled via MQTT.",
          "properties": {},
          "events": {},
          "actions": {
            "setBrightness": {
              "title": "Set Brightness",
              "description": "Sets the brightness of the bulb.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "integer",
                "minimum": 0,
                "maximum": 255,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/application/my_bulb/set",
                  "contentType": null,
                  "mqv:topic": "application/my_bulb/set",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'application/my_bulb/set'; payload: '106'; retain: 'false'\ntopic: 'application/my_bulb/set'; payload: '8'; retain: 'false'\ntopic: 'application/my_bulb/set'; payload: '185'; retain: 'false'\ntopic: 'application/my_bulb/set'; payload: '63'; retain: 'false'\ntopic: 'application/my_bulb/set'; payload: '246'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "SmartLock",
        "title": "Lock Back Door",
        "id": "urn:uuid:c21c77f6-5549-4196-923a-b3ffd78e14e6",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "The lock at the back door",
        "properties": {
          "state": {
            "title": "Lock State",
            "description": "The current state of the lock",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "unknown",
              "locked",
              "unlocked",
              "jammed"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "backdoor/lock/state",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "batteryEstimate": {
            "title": "Battery Estimate",
            "description": "Estimate when the battery has to be changed in days",
            "observable": true,
            "type": "number",
            "minimum": 3,
            "maximum": 9999,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "backdoor/lock/state",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "manualOverwrite": {
            "title": "Manual Overwrite",
            "description": "The manual overwrite was activated",
            "data": {
              "title": "",
              "description": "",
              "observable": false,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "backdoor/lock/manualoverwrite",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "lock": {
            "title": "Lock",
            "description": "Lock the backdoor",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOCK"
              ],
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "backdoor/lock/lock",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "unlock": {
            "title": "unlock",
            "description": "Unlock the backdoor via code",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "number",
              "minimum": 0,
              "maximum": 999999,
              "enum": null,
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "backdoor/lock/unlock",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartLock",
          "title": "Backdoor Smart Lock",
          "id": "urn:backdoor:smartlock",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lock for the backdoor with state monitoring and manual overwrite capabilities.",
          "properties": {
            "lockState": {
              "title": "Lock State",
              "description": "The current state of the lock.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "locked",
                "unlocked",
                "jammed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "lockStateValue": {
              "title": "Lock State Value",
              "description": "The numerical value of the lock state.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "manualOverwrite": {
              "title": "Manual Overwrite",
              "description": "Manually overwrite the lock state.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/manualoverwrite",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/manualoverwrite",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "lock": {
              "title": "Lock",
              "description": "Lock the door.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "LOCK"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/lock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/lock",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "unlock": {
              "title": "Unlock",
              "description": "Unlock the door.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/unlock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/unlock",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartLock",
          "title": "Backdoor Smart Lock",
          "id": "urn:backdoor:smartlock",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lock for the backdoor with state monitoring and manual override capabilities.",
          "properties": {
            "lockState": {
              "title": "Lock State",
              "description": "The current state of the lock.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "locked",
                "unlocked",
                "jammed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "lockStateValue": {
              "title": "Lock State Value",
              "description": "The numeric value representing the lock state.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "manualOverwrite": {
              "title": "Manual Overwrite",
              "description": "Manually overwrite the lock state.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/manualoverwrite",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/manualoverwrite",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "lock": {
              "title": "Lock",
              "description": "Lock the backdoor.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/lock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/lock",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "unlock": {
              "title": "Unlock",
              "description": "Unlock the backdoor.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/unlock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/unlock",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartLock",
          "title": "Backdoor Smart Lock",
          "id": "urn:smart-lock:backdoor",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lock for the backdoor with state monitoring and manual overwrite capabilities.",
          "properties": {
            "lockState": {
              "title": "Lock State",
              "description": "The current state of the lock.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "locked",
                "unlocked",
                "jammed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": [
                    "observe",
                    "read"
                  ]
                }
              ]
            },
            "lockStateValue": {
              "title": "Lock State Value",
              "description": "The numeric value associated with the lock state.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": [
                    "observe",
                    "read"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "manualOverwrite": {
              "title": "Manual Overwrite",
              "description": "Manually overwrite the lock state.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/manualoverwrite",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/manualoverwrite",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            },
            "lock": {
              "title": "Lock",
              "description": "Lock the backdoor.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "LOCK"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/lock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/lock",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            },
            "unlock": {
              "title": "Unlock",
              "description": "Unlock the backdoor.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/unlock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/unlock",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartLock",
          "title": "Backdoor Lock",
          "id": "urn:smart-lock:backdoor",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lock for the backdoor with state monitoring and manual overwrite capabilities.",
          "properties": {
            "state": {
              "title": "Lock State",
              "description": "The current state of the lock.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "locked",
                "unlocked",
                "jammed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "stateValue": {
              "title": "Lock State Value",
              "description": "The numeric value representing the lock state.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "manualOverwrite": {
              "title": "Manual Overwrite",
              "description": "Manually overwrite the lock state.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/manualoverwrite",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/manualoverwrite",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "lock": {
              "title": "Lock",
              "description": "Lock the backdoor.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "LOCK"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/lock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/lock",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "unlock": {
              "title": "Unlock",
              "description": "Unlock the backdoor.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/unlock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/unlock",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartLock",
          "title": "Backdoor Smart Lock",
          "id": "urn:backdoor:smartlock",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lock for the backdoor with state monitoring and manual overwrite capabilities.",
          "properties": {
            "lockState": {
              "title": "Lock State",
              "description": "The current state of the lock.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "locked",
                "unlocked",
                "jammed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "lockPosition": {
              "title": "Lock Position",
              "description": "The position of the lock in degrees.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "manualOverwrite": {
              "title": "Manual Overwrite",
              "description": "Indicates if the lock is manually overwritten.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/manualoverwrite",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/manualoverwrite",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "lock": {
              "title": "Lock",
              "description": "Lock the backdoor.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/lock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/lock",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "unlock": {
              "title": "Unlock",
              "description": "Unlock the backdoor.",
              "input": {
                "title": "",
                "description": "The position to unlock the door to.",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/unlock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/unlock",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartLock",
          "title": "Backdoor Smart Lock",
          "id": "urn:backdoor:smartlock",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lock for the backdoor with state monitoring and manual override capabilities.",
          "properties": {
            "lockState": {
              "title": "Lock State",
              "description": "The current state of the lock.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "locked",
                "unlocked",
                "jammed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "lockStateNumeric": {
              "title": "Lock State Numeric",
              "description": "Numeric representation of the lock state.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "manualOverwrite": {
              "title": "Manual Overwrite",
              "description": "Triggered when the lock is manually overridden.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/manualoverwrite",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/manualoverwrite",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "lock": {
              "title": "Lock",
              "description": "Locks the backdoor.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "LOCK"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/lock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/lock",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "unlock": {
              "title": "Unlock",
              "description": "Unlocks the backdoor.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/unlock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/unlock",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartLock",
          "title": "Backdoor Smart Lock",
          "id": "urn:backdoor:smartlock",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lock for the backdoor with state monitoring and manual override capabilities.",
          "properties": {
            "lockState": {
              "title": "Lock State",
              "description": "The current state of the lock.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "locked",
                "unlocked",
                "jammed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": [
                    "observe"
                  ]
                }
              ]
            },
            "lockStateValue": {
              "title": "Lock State Value",
              "description": "Numeric values representing lock state.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": [
                    "observe"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "manualOverwrite": {
              "title": "Manual Overwrite",
              "description": "Manually overwrite the lock state.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/manualoverwrite",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/manualoverwrite",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            },
            "lock": {
              "title": "Lock",
              "description": "Lock the backdoor.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "LOCK"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/lock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/lock",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            },
            "unlock": {
              "title": "Unlock",
              "description": "Unlock the backdoor with a numeric code.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/unlock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/unlock",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartLock",
          "title": "Backdoor Smart Lock",
          "id": "urn:backdoor:smartlock",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lock for the backdoor with state monitoring and manual overwrite capabilities.",
          "properties": {
            "lockState": {
              "title": "Lock State",
              "description": "The current state of the lock.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "locked",
                "unlocked",
                "jammed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            },
            "lockForce": {
              "title": "Lock Force",
              "description": "The force applied to the lock.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "manualOverwrite": {
              "title": "Manual Overwrite",
              "description": "Manually overwrite the lock state.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/manualoverwrite",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/manualoverwrite",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "lock": {
              "title": "Lock",
              "description": "Lock the backdoor.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "LOCK"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/lock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/lock",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "unlock": {
              "title": "Unlock",
              "description": "Unlock the backdoor.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/unlock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/unlock",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartLock",
          "title": "Backdoor Smart Lock",
          "id": "urn:backdoor:smartlock",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lock for the backdoor that can be controlled and monitored remotely.",
          "properties": {
            "lockState": {
              "title": "Lock State",
              "description": "The current state of the lock.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "locked",
                "unlocked",
                "jammed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "lockStateValue": {
              "title": "Lock State Value",
              "description": "The numeric value representing the lock state.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "manualOverwrite": {
              "title": "Manual Overwrite",
              "description": "Manually overwrite the lock state.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/manualoverwrite",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/manualoverwrite",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "lock": {
              "title": "Lock",
              "description": "Lock the backdoor.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "LOCK"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/lock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/lock",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "unlock": {
              "title": "Unlock",
              "description": "Unlock the backdoor.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/unlock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/unlock",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartLock",
          "title": "Backdoor Smart Lock",
          "id": "urn:backdoor:smartlock",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart lock for the backdoor with state monitoring and manual overwrite capabilities.",
          "properties": {
            "lockState": {
              "title": "Lock State",
              "description": "The current state of the lock.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "unknown",
                "locked",
                "unlocked",
                "jammed"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "lockStateValue": {
              "title": "Lock State Value",
              "description": "The numeric value representing the lock state.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/state",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "manualOverwrite": {
              "title": "Manual Overwrite",
              "description": "Allows manual overwrite of the lock state.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/manualoverwrite",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/manualoverwrite",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "lock": {
              "title": "Lock",
              "description": "Lock the backdoor.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "LOCK"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/lock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/lock",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "unlock": {
              "title": "Unlock",
              "description": "Unlock the backdoor.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/backdoor/lock/unlock",
                  "contentType": null,
                  "mqv:topic": "backdoor/lock/unlock",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'backdoor/lock/state'; payload: 'unknown'; retain: 'true'\ntopic: 'backdoor/lock/state'; payload: 'locked'; retain: 'true'\ntopic: 'backdoor/lock/state'; payload: 'unlocked'; retain: 'true'\ntopic: 'backdoor/lock/state'; payload: 'jammed'; retain: 'true'\ntopic: 'backdoor/lock/state'; payload: '7569.486'; retain: 'true'\ntopic: 'backdoor/lock/state'; payload: '3712.314'; retain: 'true'\ntopic: 'backdoor/lock/state'; payload: '5495.361'; retain: 'true'\ntopic: 'backdoor/lock/state'; payload: '1887.214'; retain: 'true'\ntopic: 'backdoor/lock/state'; payload: '2169.789'; retain: 'true'\ntopic: 'backdoor/lock/manualoverwrite'; payload: ''; retain: 'false'\ntopic: 'backdoor/lock/manualoverwrite'; payload: ''; retain: 'false'\ntopic: 'backdoor/lock/manualoverwrite'; payload: ''; retain: 'false'\ntopic: 'backdoor/lock/manualoverwrite'; payload: ''; retain: 'false'\ntopic: 'backdoor/lock/manualoverwrite'; payload: ''; retain: 'false'\ntopic: 'backdoor/lock/lock'; payload: 'LOCK'; retain: 'false'\ntopic: 'backdoor/lock/unlock'; payload: '504585.378'; retain: 'false'\ntopic: 'backdoor/lock/unlock'; payload: '672263.142'; retain: 'false'\ntopic: 'backdoor/lock/unlock'; payload: '598707.915'; retain: 'false'\ntopic: 'backdoor/lock/unlock'; payload: '196955.67'; retain: 'false'\ntopic: 'backdoor/lock/unlock'; payload: '508285.162'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "SmartMeter",
        "title": "Smart Meter",
        "id": "urn:uuid:40ad5274-50de-45cb-b002-4207a3a59e11",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "A Smart Meter",
        "properties": {
          "status": {
            "title": "Status",
            "description": "Status of the SM",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "OK",
              "ERROR"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "smart_meter/status",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "current": {
            "title": "Current",
            "description": "Current of the L1, L2 and L3",
            "observable": true,
            "type": "object",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {
              "L1": {
                "title": "",
                "description": "Current of L1",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "L2": {
                "title": "",
                "description": "Current of L2",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "L3": {
                "title": "",
                "description": "Current of L3",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              }
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "smart_meter/current",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "power": {
            "title": "Power",
            "description": "Current power consumption of charger",
            "observable": true,
            "type": "number",
            "minimum": -9000,
            "maximum": 9000,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "smart_meter/power",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "energyTotal": {
            "title": "Total Energy",
            "description": "The total energy consumption measured by the SM",
            "observable": true,
            "type": "number",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "smart_meter/power/total",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "energyToday": {
            "title": "Total Energy",
            "description": "The total daily energy consumption measured by the SM",
            "observable": true,
            "type": "number",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "smart_meter/power/today",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "energyFifteenMin": {
            "title": "Total Energy",
            "description": "The energy consumption measured by the SM in the last 15 min",
            "observable": true,
            "type": "number",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "smart_meter/power/15min",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {},
        "actions": {}
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:smart_meter",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that provides status, current, and power readings.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": null,
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current readings for each phase.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": null,
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power readings of the smart meter.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "powerTotal": {
              "title": "Total Power",
              "description": "The total power consumption.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/total",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/total",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "powerToday": {
              "title": "Today's Power",
              "description": "The power consumption for today.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/today",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/today",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "power15min": {
              "title": "15 Minute Power",
              "description": "The power consumption for the last 15 minutes.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/15min",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/15min",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:smart_meter_001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that monitors and reports electrical parameters.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": null,
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current readings for each phase (L1, L2, L3).",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": null,
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power reading.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "powerTotal": {
              "title": "Total Power",
              "description": "The total power consumption.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/total",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/total",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "powerToday": {
              "title": "Power Today",
              "description": "The power consumption for today.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/today",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/today",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power15min": {
              "title": "Power 15min",
              "description": "The power consumption over the last 15 minutes.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/15min",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/15min",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:smart_meter",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that provides status, current, and power measurements.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": null,
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current measurements for each phase.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": null,
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power measurements.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "powerTotal": {
              "title": "Total Power",
              "description": "The total power measurement.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/total",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/total",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "powerToday": {
              "title": "Today's Power",
              "description": "The power measurement for today.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/today",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/today",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power15min": {
              "title": "15-Minute Power",
              "description": "The power measurement for the last 15 minutes.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/15min",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/15min",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:smart-meter-001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that monitors electricity status, current, and power usage.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": null,
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current measurement for each phase.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": null,
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power measurement.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "powerTotal": {
              "title": "Total Power",
              "description": "The total power measurement.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/total",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/total",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "powerToday": {
              "title": "Power Today",
              "description": "The power consumed today.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/today",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/today",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "power15min": {
              "title": "15 Minute Power",
              "description": "The power measurement over the last 15 minutes.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/15min",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/15min",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:smart-meter-001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring electrical parameters.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": null,
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current levels on each phase.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": null,
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power consumption or generation.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "powerTotal": {
              "title": "Total Power",
              "description": "The total power consumption.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/total",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/total",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "powerToday": {
              "title": "Today's Power",
              "description": "The power consumed today.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/today",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/today",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power15min": {
              "title": "15-Minute Power",
              "description": "The power consumption in the last 15 minutes.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/15min",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/15min",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:smart-meter",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that monitors and reports power consumption and status.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": [
                    "readproperty",
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current readings for each phase.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": [
                    "readproperty",
                    "observeproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The current power consumption.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": [
                    "readproperty",
                    "observeproperty"
                  ]
                }
              ]
            },
            "powerTotal": {
              "title": "Total Power",
              "description": "The total power consumption.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/total",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/power/total",
                  "mqv:retain": true,
                  "op": [
                    "readproperty",
                    "observeproperty"
                  ]
                }
              ]
            },
            "powerToday": {
              "title": "Today's Power",
              "description": "The power consumption for today.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/today",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/power/today",
                  "mqv:retain": true,
                  "op": [
                    "readproperty",
                    "observeproperty"
                  ]
                }
              ]
            },
            "power15min": {
              "title": "15-Minute Power",
              "description": "The power consumption for the last 15 minutes.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/15min",
                  "contentType": "application/json",
                  "mqv:topic": "smart_meter/power/15min",
                  "mqv:retain": true,
                  "op": [
                    "readproperty",
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart IoT Device",
          "id": "urn:smart-iot-device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring electrical parameters.",
          "properties": {
            "status": {
              "title": "Device Status",
              "description": "Indicates the current status of the device.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": null,
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current Measurement",
              "description": "Current values for each phase (L1, L2, L3).",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": null,
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power Measurement",
              "description": "Power values in watts.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "powerTotal": {
              "title": "Total Power",
              "description": "Total power consumption.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/total",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/total",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "powerToday": {
              "title": "Today's Power",
              "description": "Power consumed today.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/today",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/today",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power15min": {
              "title": "15 Minute Power",
              "description": "Power consumed in the last 15 minutes.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/15min",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/15min",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart IoT Device",
          "id": "urn:smart:meter:device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter device that monitors power and current usage.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": null,
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current measurement for each phase.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": null,
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power measurement.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "powerTotal": {
              "title": "Total Power",
              "description": "The total power measurement.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/total",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/total",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "powerToday": {
              "title": "Power Today",
              "description": "The power usage for today.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/today",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/today",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power15min": {
              "title": "Power 15 Minutes",
              "description": "The power usage in the last 15 minutes.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/15min",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/15min",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart IoT Device",
          "id": "urn:smart-meter-001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that monitors and reports electrical parameters.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "Indicates the current status of the smart meter.",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": null,
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "Reports the current in amperes for each phase.",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "Current for phase L1",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "Current for phase L2",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "Current for phase L3",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": null,
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "Reports the power in watts.",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "powerTotal": {
              "title": "Total Power",
              "description": "Reports the total power consumption in watts.",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/total",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/total",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "powerToday": {
              "title": "Today's Power",
              "description": "Reports the power consumption for today in watts.",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/today",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/today",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power15min": {
              "title": "15-Minute Power",
              "description": "Reports the power consumption for the last 15 minutes in watts.",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/15min",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/15min",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:smart_meter",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that provides status, current, and power measurements.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": null,
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current measurements for each phase (L1, L2, L3).",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": null,
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power measurements of the smart meter.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "powerTotal": {
              "title": "Total Power",
              "description": "The total power consumption.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/total",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/total",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "powerToday": {
              "title": "Power Today",
              "description": "The power consumption for today.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/today",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/today",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power15min": {
              "title": "Power 15 Minutes",
              "description": "The power consumption over the last 15 minutes.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power/15min",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power/15min",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        }
      ],
      "msg_log": "topic: 'smart_meter/status'; payload: 'OK'; retain: 'true'\ntopic: 'smart_meter/status'; payload: 'ERROR'; retain: 'true'\ntopic: 'smart_meter/current'; payload: '{'L1': 12.582, 'L2': 1.62, 'L3': 0.323}'; retain: 'true'\ntopic: 'smart_meter/current'; payload: '{'L1': 2.375, 'L2': 3.627, 'L3': 6.516}'; retain: 'true'\ntopic: 'smart_meter/current'; payload: '{'L1': 11.058, 'L2': 6.28, 'L3': 12.97}'; retain: 'true'\ntopic: 'smart_meter/current'; payload: '{'L1': 8.336, 'L2': 4.652, 'L3': 13.843}'; retain: 'true'\ntopic: 'smart_meter/current'; payload: '{'L1': 10.117, 'L2': 14.545, 'L3': 10.487}'; retain: 'true'\ntopic: 'smart_meter/power'; payload: '369.545'; retain: 'true'\ntopic: 'smart_meter/power'; payload: '2846.874'; retain: 'true'\ntopic: 'smart_meter/power'; payload: '-4865.217'; retain: 'true'\ntopic: 'smart_meter/power'; payload: '3159.208'; retain: 'true'\ntopic: 'smart_meter/power'; payload: '-8977.572'; retain: 'true'\ntopic: 'smart_meter/power/total'; payload: '74.855'; retain: 'true'\ntopic: 'smart_meter/power/total'; payload: '24.567'; retain: 'true'\ntopic: 'smart_meter/power/total'; payload: '224.412'; retain: 'true'\ntopic: 'smart_meter/power/total'; payload: '210.926'; retain: 'true'\ntopic: 'smart_meter/power/total'; payload: '50.007'; retain: 'true'\ntopic: 'smart_meter/power/today'; payload: '66.918'; retain: 'true'\ntopic: 'smart_meter/power/today'; payload: '187.849'; retain: 'true'\ntopic: 'smart_meter/power/today'; payload: '35.48'; retain: 'true'\ntopic: 'smart_meter/power/today'; payload: '160.179'; retain: 'true'\ntopic: 'smart_meter/power/today'; payload: '28.021'; retain: 'true'\ntopic: 'smart_meter/power/15min'; payload: '130.491'; retain: 'true'\ntopic: 'smart_meter/power/15min'; payload: '96.41'; retain: 'true'\ntopic: 'smart_meter/power/15min'; payload: '154.365'; retain: 'true'\ntopic: 'smart_meter/power/15min'; payload: '34.048'; retain: 'true'\ntopic: 'smart_meter/power/15min'; payload: '67.932'; retain: 'true'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "SmartMeter",
        "title": "Smart Meter",
        "id": "urn:uuid:de06e393-c7ed-473e-ae20-6a38a4798680",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "A Smart Meter",
        "properties": {
          "status": {
            "title": "Status",
            "description": "Status of the SM",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "OK",
              "ERROR"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "smart_meter/status",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "current": {
            "title": "Current",
            "description": "Current of the L1, L2 and L3",
            "observable": true,
            "type": "object",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {
              "L1": {
                "title": "",
                "description": "Current of L1",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "L2": {
                "title": "",
                "description": "Current of L2",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "L3": {
                "title": "",
                "description": "Current of L3",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              }
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "smart_meter/current",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "power": {
            "title": "Power",
            "description": "Current power consumption of charger",
            "observable": true,
            "type": "object",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {
              "total": {
                "title": "Total Energy",
                "description": "The total energy consumption measured by the SM",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "today": {
                "title": "Total Energy",
                "description": "The total daily energy consumption measured by the SM",
                "observable": true,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "now": {
                "title": "Total Energy",
                "description": "The energy consumption measured by the SM in the last 15 min",
                "observable": true,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              }
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "smart_meter/power",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {},
        "actions": {}
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart IoT Device",
          "id": "urn:smart:iot:device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that monitors electrical parameters.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter.",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": null,
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current readings for each phase (L1, L2, L3).",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "Current for phase L1",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "Current for phase L2",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "Current for phase L3",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": null,
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power consumption readings.",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "Total": {
                  "title": "",
                  "description": "Total power consumption",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Today": {
                  "title": "",
                  "description": "Power consumption today",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Now": {
                  "title": "",
                  "description": "Current power consumption",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart IoT Meter",
          "id": "urn:smart:iot:meter",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring electrical parameters.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": null,
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current readings for each line",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": null,
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power consumption readings",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "Total": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Today": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Now": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart IoT Device",
          "id": "urn:smart:iot:device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter device that monitors status, current, and power consumption.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The operational status of the smart meter.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": null,
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current readings for each phase.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": null,
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power consumption readings.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "Total": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Today": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Now": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:smart-meter-001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that provides status, current, and power readings.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter.",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": null,
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current readings for each phase (L1, L2, L3).",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": null,
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power readings including total, today, and current power now.",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "Total": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Today": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Now": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart IoT Device",
          "id": "urn:smart:meter:001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that provides status, current, and power readings.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter.",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": null,
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current readings from the smart meter for each phase.",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": null,
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power readings from the smart meter.",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "Total": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Today": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Now": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:smart_meter:001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that provides status, current, and power measurements.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": null,
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current measurements for each phase (L1, L2, L3).",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": null,
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power consumption details including total, today's, and current power usage.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "Total": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Today": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Now": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:smart-meter:001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that monitors electrical parameters.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": null,
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current readings for each phase.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": null,
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power consumption details.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "Total": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Today": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Now": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:smart_meter",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart meter that monitors electrical parameters.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": null,
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current readings for each phase.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": null,
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power consumption readings.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "Total": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Today": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Now": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:smart_meter",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring electrical parameters.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The operational status of the smart meter.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": null,
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current readings for each phase.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": null,
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power consumption data.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "Total": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Today": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Now": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartMeter",
          "title": "Smart Meter",
          "id": "urn:smart_meter:001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring electrical parameters.",
          "properties": {
            "status": {
              "title": "Status",
              "description": "The current status of the smart meter.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OK",
                "ERROR"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/status",
                  "contentType": null,
                  "mqv:topic": "smart_meter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current measurements for each phase.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "Current on phase L1",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "Current on phase L2",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "Current on phase L3",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/current",
                  "contentType": null,
                  "mqv:topic": "smart_meter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "power": {
              "title": "Power",
              "description": "The power consumption details.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "Total": {
                  "title": "",
                  "description": "Total power consumption",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Today": {
                  "title": "",
                  "description": "Power consumption today",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "Now": {
                  "title": "",
                  "description": "Current power consumption",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/smart_meter/power",
                  "contentType": null,
                  "mqv:topic": "smart_meter/power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        }
      ],
      "msg_log": "topic: 'smart_meter/status'; payload: 'OK'; retain: 'true'\ntopic: 'smart_meter/status'; payload: 'ERROR'; retain: 'true'\ntopic: 'smart_meter/current'; payload: '{'L1': 10.555, 'L2': 14.161, 'L3': 3.014}'; retain: 'true'\ntopic: 'smart_meter/current'; payload: '{'L1': 7.448, 'L2': 6.502, 'L3': 3.812}'; retain: 'true'\ntopic: 'smart_meter/current'; payload: '{'L1': 1.302, 'L2': 1.822, 'L3': 9.061}'; retain: 'true'\ntopic: 'smart_meter/current'; payload: '{'L1': 6.682, 'L2': 13.458, 'L3': 6.067}'; retain: 'true'\ntopic: 'smart_meter/current'; payload: '{'L1': 13.524, 'L2': 15.502, 'L3': 13.156}'; retain: 'true'\ntopic: 'smart_meter/power'; payload: '{'Total': 2566.072, 'Today': 99.243, 'Now': 2.227}'; retain: 'true'\ntopic: 'smart_meter/power'; payload: '{'Total': 764.013, 'Today': 117.648, 'Now': 2.542}'; retain: 'true'\ntopic: 'smart_meter/power'; payload: '{'Total': 1817.449, 'Today': 171.891, 'Now': 1.933}'; retain: 'true'\ntopic: 'smart_meter/power'; payload: '{'Total': 604.127, 'Today': 106.244, 'Now': 1.595}'; retain: 'true'\ntopic: 'smart_meter/power'; payload: '{'Total': 2190.213, 'Today': 153.29, 'Now': 1.756}'; retain: 'true'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "PhotovoltaicInverter",
        "title": "PV Inverter",
        "id": "urn:uuid:1198aaed-ac5a-4fc7-b2bc-340f1b24bc66",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "A Photovoltaic Inverter",
        "properties": {
          "inverterStatus": {
            "title": "Invert Status",
            "description": "Status of the PV inverter",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "00-On sector",
              "01-Power failure / On battery",
              "02-Loss of communication",
              "03-Battery fault",
              "04-System shutdown",
              "05-Tension dip",
              "06-Overvoltage",
              "07-Voltage drop",
              "08-Voltage increase",
              "09-Line noise",
              "10-Frequency variation",
              "11-Transient distortion",
              "12-Harmonic distortion"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "cellar/inverter/status",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "current": {
            "title": "Current",
            "description": "Current current of the L1, L2 and L3",
            "observable": true,
            "type": "object",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {
              "L1": {
                "title": "",
                "description": "Current of L1",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "L2": {
                "title": "",
                "description": "Current of L2",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "L3": {
                "title": "",
                "description": "Current of L3",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              }
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "cellar/inverter/current",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "activePower": {
            "title": "Active Power",
            "description": "Active Power running through the inverter",
            "observable": true,
            "type": "number",
            "minimum": 0,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "cellar/inverter/active_power",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "reactivePower": {
            "title": "Reactive Power",
            "description": "Reactive Power running through the inverter",
            "observable": true,
            "type": "number",
            "minimum": 0,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "cellar/inverter/reactive_power",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "temperature": {
            "title": "Temperature PV Inverter",
            "description": "Internal temperature of PV inverter",
            "observable": true,
            "type": "number",
            "minimum": 0,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "cellar/inverter/temperature",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "enabled": {
            "title": "Inverter Enabled",
            "description": "The inverter was enabled",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "cellar/inverter/temperature",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          },
          "error": {
            "title": "Error Event",
            "description": "An error has been encountered",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "cellar/inverter/error",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "turnOn": {
            "title": "Enable Inverter",
            "description": "Turn on the Inverter",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ON",
                "OFF",
                "0",
                "1"
              ],
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "cellar/inverter/cmnd",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartInverter",
          "title": "Cellar Inverter",
          "id": "urn:cellar:inverter:001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart inverter located in the cellar, monitoring various electrical parameters and statuses.",
          "properties": {
            "status": {
              "title": "Inverter Status",
              "description": "Current status of the inverter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "00-On sector",
                "01-Power failure / On battery",
                "02-Loss of communication",
                "03-Battery fault",
                "04-System shutdown",
                "05-Tension dip",
                "06-Overvoltage",
                "07-Voltage drop",
                "08-Voltage increase",
                "09-Line noise",
                "10-Frequency variation",
                "11-Transient distortion",
                "12-Harmonic distortion"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/status",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Inverter Current",
              "description": "Current readings for each phase (L1, L2, L3)",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/current",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "active_power": {
              "title": "Active Power",
              "description": "Active power consumption",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/active_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/active_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "reactive_power": {
              "title": "Reactive Power",
              "description": "Reactive power consumption",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/reactive_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/reactive_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "temperature": {
              "title": "Inverter Temperature",
              "description": "Temperature readings of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/temperature",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/temperature",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "error": {
              "title": "Error Status",
              "description": "Error status of the inverter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/error",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/error",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "command": {
              "title": "Inverter Command",
              "description": "Send commands to the inverter",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "ON",
                  "OFF",
                  "0",
                  "1"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartInverter",
          "title": "Cellar Inverter",
          "id": "urn:cellar:inverter",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart inverter located in the cellar, monitoring various parameters and statuses.",
          "properties": {
            "status": {
              "title": "Inverter Status",
              "description": "The current status of the inverter.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "00-On sector",
                "01-Power failure / On battery",
                "02-Loss of communication",
                "03-Battery fault",
                "04-System shutdown",
                "05-Tension dip",
                "06-Overvoltage",
                "07-Voltage drop",
                "08-Voltage increase",
                "09-Line noise",
                "10-Frequency variation",
                "11-Transient distortion",
                "12-Harmonic distortion"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/status",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "The current values for each phase (L1, L2, L3).",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/current",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "activePower": {
              "title": "Active Power",
              "description": "The active power of the inverter.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/active_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/active_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "reactivePower": {
              "title": "Reactive Power",
              "description": "The reactive power of the inverter.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/reactive_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/reactive_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "temperature": {
              "title": "Temperature",
              "description": "The temperature of the inverter.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/temperature",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/temperature",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "error": {
              "title": "Error",
              "description": "Error messages from the inverter.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/error",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/error",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "command": {
              "title": "Command",
              "description": "Send commands to the inverter.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "ON",
                  "OFF",
                  "0",
                  "1"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartInverter",
          "title": "Cellar Inverter",
          "id": "urn:cellar:inverter",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart inverter located in the cellar, monitoring various parameters and statuses.",
          "properties": {
            "status": {
              "title": "Inverter Status",
              "description": "Current status of the inverter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "00-On sector",
                "01-Power failure / On battery",
                "02-Loss of communication",
                "03-Battery fault",
                "04-System shutdown",
                "05-Tension dip",
                "06-Overvoltage",
                "07-Voltage drop",
                "08-Voltage increase",
                "09-Line noise",
                "10-Frequency variation",
                "11-Transient distortion",
                "12-Harmonic distortion"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/status",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "Current readings for each phase",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/current",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "active_power": {
              "title": "Active Power",
              "description": "Active power consumption",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/active_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/active_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "reactive_power": {
              "title": "Reactive Power",
              "description": "Reactive power consumption",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/reactive_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/reactive_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "temperature": {
              "title": "Temperature",
              "description": "Temperature readings",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/temperature",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/temperature",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "error": {
              "title": "Error",
              "description": "Error status of the inverter",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/error",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/error",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "command": {
              "title": "Command",
              "description": "Commands to control the inverter",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "ON",
                  "OFF",
                  "0",
                  "1"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartInverter",
          "title": "Cellar Inverter",
          "id": "urn:cellar:inverter",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart inverter located in the cellar, monitoring status, current, power, temperature, and errors.",
          "properties": {
            "status": {
              "title": "Inverter Status",
              "description": "Current status of the inverter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "00-On sector",
                "01-Power failure / On battery",
                "02-Loss of communication",
                "03-Battery fault",
                "04-System shutdown",
                "05-Tension dip",
                "06-Overvoltage",
                "07-Voltage drop",
                "08-Voltage increase",
                "09-Line noise",
                "10-Frequency variation",
                "11-Transient distortion",
                "12-Harmonic distortion"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/status",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Inverter Current",
              "description": "Current readings for each phase (L1, L2, L3)",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/current",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "active_power": {
              "title": "Active Power",
              "description": "Active power consumption of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/active_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/active_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "reactive_power": {
              "title": "Reactive Power",
              "description": "Reactive power consumption of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/reactive_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/reactive_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "temperature": {
              "title": "Inverter Temperature",
              "description": "Temperature readings of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/temperature",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/temperature",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "error": {
              "title": "Inverter Error",
              "description": "Error messages from the inverter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/error",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/error",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "command": {
              "title": "Inverter Command",
              "description": "Commands to control the inverter",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "ON",
                  "OFF",
                  "0",
                  "1"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartInverter",
          "title": "Cellar Inverter",
          "id": "urn:cellar:inverter",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart inverter located in the cellar monitoring various electrical parameters.",
          "properties": {
            "status": {
              "title": "Inverter Status",
              "description": "Current status of the inverter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "00-On sector",
                "01-Power failure / On battery",
                "02-Loss of communication",
                "03-Battery fault",
                "04-System shutdown",
                "05-Tension dip",
                "06-Overvoltage",
                "07-Voltage drop",
                "08-Voltage increase",
                "09-Line noise",
                "10-Frequency variation",
                "11-Transient distortion",
                "12-Harmonic distortion"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/status",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "Current measurements for L1, L2, and L3 phases",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/current",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "active_power": {
              "title": "Active Power",
              "description": "Active power measurement",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/active_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/active_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "reactive_power": {
              "title": "Reactive Power",
              "description": "Reactive power measurement",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/reactive_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/reactive_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "temperature": {
              "title": "Temperature",
              "description": "Temperature measurement",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/temperature",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/temperature",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "error": {
              "title": "Error",
              "description": "Error messages from the inverter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/error",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/error",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "command": {
              "title": "Command",
              "description": "Send commands to the inverter",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "ON",
                  "OFF",
                  "0",
                  "1"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartInverter",
          "title": "Cellar Inverter",
          "id": "urn:cellar:inverter",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart inverter located in the cellar, monitoring various parameters and statuses.",
          "properties": {
            "status": {
              "title": "Inverter Status",
              "description": "The current status of the inverter.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "00-On sector",
                "01-Power failure / On battery",
                "02-Loss of communication",
                "03-Battery fault",
                "04-System shutdown",
                "05-Tension dip",
                "06-Overvoltage",
                "07-Voltage drop",
                "08-Voltage increase",
                "09-Line noise",
                "10-Frequency variation",
                "11-Transient distortion",
                "12-Harmonic distortion"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/status",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current Levels",
              "description": "The current levels for each phase (L1, L2, L3).",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/current",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "active_power": {
              "title": "Active Power",
              "description": "The active power of the inverter.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/active_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/active_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "reactive_power": {
              "title": "Reactive Power",
              "description": "The reactive power of the inverter.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/reactive_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/reactive_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "temperature": {
              "title": "Temperature",
              "description": "The temperature of the inverter.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/temperature",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/temperature",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "error": {
              "title": "Error",
              "description": "Error messages from the inverter.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/error",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/error",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "command": {
              "title": "Inverter Command",
              "description": "Commands to control the inverter.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "ON",
                  "OFF",
                  "0",
                  "1"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartInverter",
          "title": "Cellar Inverter",
          "id": "urn:cellar:inverter",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart inverter located in the cellar, monitoring status, current, power, temperature, and errors.",
          "properties": {
            "status": {
              "title": "Inverter Status",
              "description": "Current status of the inverter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "00-On sector",
                "01-Power failure / On battery",
                "02-Loss of communication",
                "03-Battery fault",
                "04-System shutdown",
                "05-Tension dip",
                "06-Overvoltage",
                "07-Voltage drop",
                "08-Voltage increase",
                "09-Line noise",
                "10-Frequency variation",
                "11-Transient distortion",
                "12-Harmonic distortion"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/status",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Inverter Current",
              "description": "Current readings from the inverter",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/current",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "active_power": {
              "title": "Active Power",
              "description": "Active power output of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/active_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/active_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "reactive_power": {
              "title": "Reactive Power",
              "description": "Reactive power output of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/reactive_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/reactive_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "temperature": {
              "title": "Inverter Temperature",
              "description": "Temperature readings from the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/temperature",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/temperature",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "error": {
              "title": "Inverter Error",
              "description": "Error status of the inverter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/error",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/error",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "command": {
              "title": "Inverter Command",
              "description": "Command to control the inverter",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "ON",
                  "OFF",
                  "0",
                  "1"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartInverter",
          "title": "Cellar Inverter",
          "id": "urn:cellar:inverter",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart inverter located in the cellar, providing status, current, power, temperature, and error information.",
          "properties": {
            "status": {
              "title": "Inverter Status",
              "description": "Current status of the inverter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "00-On sector",
                "01-Power failure / On battery",
                "02-Loss of communication",
                "03-Battery fault",
                "04-System shutdown",
                "05-Tension dip",
                "06-Overvoltage",
                "07-Voltage drop",
                "08-Voltage increase",
                "09-Line noise",
                "10-Frequency variation",
                "11-Transient distortion",
                "12-Harmonic distortion"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/status",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Inverter Current",
              "description": "Current values for L1, L2, and L3 phases",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/current",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "active_power": {
              "title": "Active Power",
              "description": "Active power output of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/active_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/active_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "reactive_power": {
              "title": "Reactive Power",
              "description": "Reactive power output of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/reactive_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/reactive_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "temperature": {
              "title": "Inverter Temperature",
              "description": "Temperature of the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/temperature",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/temperature",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "error": {
              "title": "Inverter Error",
              "description": "Error messages from the inverter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/error",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/error",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "cmnd": {
              "title": "Inverter Command",
              "description": "Commands to control the inverter",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "ON",
                  "OFF",
                  "0",
                  "1"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartInverter",
          "title": "Cellar Inverter",
          "id": "urn:cellar:inverter",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart inverter located in the cellar that monitors and controls power status and metrics.",
          "properties": {
            "status": {
              "title": "Inverter Status",
              "description": "Current status of the inverter.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "00-On sector",
                "01-Power failure / On battery",
                "02-Loss of communication",
                "03-Battery fault",
                "04-System shutdown",
                "05-Tension dip",
                "06-Overvoltage",
                "07-Voltage drop",
                "08-Voltage increase",
                "09-Line noise",
                "10-Frequency variation",
                "11-Transient distortion",
                "12-Harmonic distortion"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/status",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current",
              "description": "Current values for each phase.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/current",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "active_power": {
              "title": "Active Power",
              "description": "The active power of the inverter.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/active_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/active_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "reactive_power": {
              "title": "Reactive Power",
              "description": "The reactive power of the inverter.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/reactive_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/reactive_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "temperature": {
              "title": "Temperature",
              "description": "The temperature of the inverter.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/temperature",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/temperature",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "error": {
              "title": "Error",
              "description": "Error status of the inverter.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/error",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/error",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "command": {
              "title": "Command",
              "description": "Send command to the inverter.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "ON",
                  "OFF",
                  "0",
                  "1"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartInverter",
          "title": "Cellar Inverter",
          "id": "urn:cellar:inverter",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart inverter located in the cellar, monitoring various parameters and statuses.",
          "properties": {
            "status": {
              "title": "Inverter Status",
              "description": "Current status of the inverter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "00-On sector",
                "01-Power failure / On battery",
                "02-Loss of communication",
                "03-Battery fault",
                "04-System shutdown",
                "05-Tension dip",
                "06-Overvoltage",
                "07-Voltage drop",
                "08-Voltage increase",
                "09-Line noise",
                "10-Frequency variation",
                "11-Transient distortion",
                "12-Harmonic distortion"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/status",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/status",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "current": {
              "title": "Current Measurements",
              "description": "Current measurements for each line (L1, L2, L3)",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "L1": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L2": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "L3": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/current",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/current",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "active_power": {
              "title": "Active Power",
              "description": "Active power consumption",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/active_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/active_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "reactive_power": {
              "title": "Reactive Power",
              "description": "Reactive power consumption",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/reactive_power",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/reactive_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "temperature": {
              "title": "Temperature",
              "description": "Temperature readings from the inverter",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/temperature",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/temperature",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "error": {
              "title": "Error",
              "description": "Error messages from the inverter",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/error",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/error",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "cmnd": {
              "title": "Command",
              "description": "Send command to the inverter",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "ON",
                  "OFF",
                  "0",
                  "1"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/cellar/inverter/cmnd",
                  "contentType": null,
                  "mqv:topic": "cellar/inverter/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'cellar/inverter/status'; payload: '00-On sector'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '01-Power failure / On battery'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '02-Loss of communication'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '03-Battery fault'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '04-System shutdown'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '05-Tension dip'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '06-Overvoltage'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '07-Voltage drop'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '08-Voltage increase'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '09-Line noise'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '10-Frequency variation'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '11-Transient distortion'; retain: 'true'\ntopic: 'cellar/inverter/status'; payload: '12-Harmonic distortion'; retain: 'true'\ntopic: 'cellar/inverter/current'; payload: '{'L1': 4.804, 'L2': 2.235, 'L3': 10.868}'; retain: 'true'\ntopic: 'cellar/inverter/current'; payload: '{'L1': 7.973, 'L2': 11.448, 'L3': 3.576}'; retain: 'true'\ntopic: 'cellar/inverter/current'; payload: '{'L1': 11.404, 'L2': 1.895, 'L3': 5.314}'; retain: 'true'\ntopic: 'cellar/inverter/current'; payload: '{'L1': 4.626, 'L2': 6.997, 'L3': 6.987}'; retain: 'true'\ntopic: 'cellar/inverter/current'; payload: '{'L1': 1.054, 'L2': 5.31, 'L3': 7.179}'; retain: 'true'\ntopic: 'cellar/inverter/active_power'; payload: '204.317'; retain: 'true'\ntopic: 'cellar/inverter/active_power'; payload: '70.425'; retain: 'true'\ntopic: 'cellar/inverter/active_power'; payload: '108.938'; retain: 'true'\ntopic: 'cellar/inverter/active_power'; payload: '55.615'; retain: 'true'\ntopic: 'cellar/inverter/active_power'; payload: '165.984'; retain: 'true'\ntopic: 'cellar/inverter/reactive_power'; payload: '188.277'; retain: 'true'\ntopic: 'cellar/inverter/reactive_power'; payload: '63.865'; retain: 'true'\ntopic: 'cellar/inverter/reactive_power'; payload: '171.337'; retain: 'true'\ntopic: 'cellar/inverter/reactive_power'; payload: '129.615'; retain: 'true'\ntopic: 'cellar/inverter/reactive_power'; payload: '234.714'; retain: 'true'\ntopic: 'cellar/inverter/temperature'; payload: '34.589'; retain: 'true'\ntopic: 'cellar/inverter/temperature'; payload: '50.103'; retain: 'true'\ntopic: 'cellar/inverter/temperature'; payload: '7.833'; retain: 'true'\ntopic: 'cellar/inverter/temperature'; payload: '248.892'; retain: 'true'\ntopic: 'cellar/inverter/temperature'; payload: '241.852'; retain: 'true'\ntopic: 'cellar/inverter/temperature'; payload: 'true'; retain: 'false'\ntopic: 'cellar/inverter/temperature'; payload: 'false'; retain: 'false'\ntopic: 'cellar/inverter/temperature'; payload: 'true'; retain: 'false'\ntopic: 'cellar/inverter/temperature'; payload: 'false'; retain: 'false'\ntopic: 'cellar/inverter/error'; payload: ''; retain: 'false'\ntopic: 'cellar/inverter/error'; payload: ''; retain: 'false'\ntopic: 'cellar/inverter/error'; payload: ''; retain: 'false'\ntopic: 'cellar/inverter/error'; payload: ''; retain: 'false'\ntopic: 'cellar/inverter/error'; payload: ''; retain: 'false'\ntopic: 'cellar/inverter/cmnd'; payload: 'ON'; retain: 'false'\ntopic: 'cellar/inverter/cmnd'; payload: 'OFF'; retain: 'false'\ntopic: 'cellar/inverter/cmnd'; payload: '0'; retain: 'false'\ntopic: 'cellar/inverter/cmnd'; payload: '1'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "PhotovoltaicDevice",
        "title": "Photovoltaic Device",
        "id": "urn:uuid:f828f65b-401e-475c-bf97-bd288c4aa145",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "A PV Panel",
        "properties": {
          "MaxPressureLoad": {
            "title": "Maximum Pressure",
            "description": "The maximum mechanical pressure that the panel my endure",
            "observable": true,
            "type": "object",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "roof/pv_panel/max_pressure_load",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "NominalPower": {
            "title": "Power",
            "description": "Nominal Power for the panel",
            "observable": true,
            "type": "number",
            "minimum": 0,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "roof/pv_panel/nominal_power",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "MaximumSystemVoltage": {
            "title": "Maximum System Voltage",
            "description": "Maximum System Voltage for which the module is rated",
            "observable": true,
            "type": "number",
            "minimum": 0,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "roof/pv_panel/max_system_voltage",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {},
        "actions": {}
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartIoTDevice",
          "title": "Roof PV Panel",
          "id": "urn:roof:pv_panel",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring roof photovoltaic panel parameters.",
          "properties": {
            "maxPressureLoad": {
              "title": "Max Pressure Load",
              "description": "Maximum pressure load on the PV panel.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "hail": {
                  "title": "",
                  "description": "Pressure load due to hail.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "snow": {
                  "title": "",
                  "description": "Pressure load due to snow.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "wind": {
                  "title": "",
                  "description": "Pressure load due to wind.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_pressure_load",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_pressure_load",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "nominalPower": {
              "title": "Nominal Power",
              "description": "Nominal power of the PV panel.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/nominal_power",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/nominal_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "maxSystemVoltage": {
              "title": "Max System Voltage",
              "description": "Maximum system voltage of the PV panel.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_system_voltage",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_system_voltage",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "Smart PV Panel",
          "id": "urn:smart:pvpanel:001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart photovoltaic panel with sensors for measuring pressure load, nominal power, and system voltage.",
          "properties": {
            "maxPressureLoad": {
              "title": "Maximum Pressure Load",
              "description": "The maximum pressure load on the PV panel from hail, snow, and wind.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "hail": {
                  "title": "",
                  "description": "Pressure load from hail.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "snow": {
                  "title": "",
                  "description": "Pressure load from snow.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "wind": {
                  "title": "",
                  "description": "Pressure load from wind.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_pressure_load",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_pressure_load",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            },
            "nominalPower": {
              "title": "Nominal Power",
              "description": "The nominal power output of the PV panel.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/nominal_power",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/nominal_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            },
            "maxSystemVoltage": {
              "title": "Maximum System Voltage",
              "description": "The maximum system voltage of the PV panel.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_system_voltage",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_system_voltage",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "Roof PV Panel",
          "id": "urn:roof:pv_panel",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring roof photovoltaic panel parameters.",
          "properties": {
            "maxPressureLoad": {
              "title": "Max Pressure Load",
              "description": "Maximum pressure load on the PV panel from different sources.",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "hail": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "snow": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "wind": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_pressure_load",
                  "contentType": null,
                  "mqv:topic": "roof/pv_panel/max_pressure_load",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "nominalPower": {
              "title": "Nominal Power",
              "description": "Nominal power output of the PV panel.",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/nominal_power",
                  "contentType": null,
                  "mqv:topic": "roof/pv_panel/nominal_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "maxSystemVoltage": {
              "title": "Max System Voltage",
              "description": "Maximum system voltage of the PV panel.",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_system_voltage",
                  "contentType": null,
                  "mqv:topic": "roof/pv_panel/max_system_voltage",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartIoTDevice",
          "title": "Smart PV Panel",
          "id": "urn:smart-iot-device:pv-panel",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring photovoltaic panel parameters.",
          "properties": {
            "maxPressureLoad": {
              "title": "Max Pressure Load",
              "description": "Maximum pressure load on the PV panel from different sources.",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "hail": {
                  "title": "",
                  "description": "Pressure load from hail.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "snow": {
                  "title": "",
                  "description": "Pressure load from snow.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "wind": {
                  "title": "",
                  "description": "Pressure load from wind.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_pressure_load",
                  "contentType": null,
                  "mqv:topic": "roof/pv_panel/max_pressure_load",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "nominalPower": {
              "title": "Nominal Power",
              "description": "Nominal power output of the PV panel.",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/nominal_power",
                  "contentType": null,
                  "mqv:topic": "roof/pv_panel/nominal_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "maxSystemVoltage": {
              "title": "Max System Voltage",
              "description": "Maximum system voltage of the PV panel.",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_system_voltage",
                  "contentType": null,
                  "mqv:topic": "roof/pv_panel/max_system_voltage",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "Roof PV Panel",
          "id": "urn:roof:pv_panel",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring roof photovoltaic panel parameters.",
          "properties": {
            "maxPressureLoad": {
              "title": "Max Pressure Load",
              "description": "Maximum pressure load on the PV panel from hail, snow, and wind.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "hail": {
                  "title": "",
                  "description": "Pressure load from hail",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "snow": {
                  "title": "",
                  "description": "Pressure load from snow",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "wind": {
                  "title": "",
                  "description": "Pressure load from wind",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_pressure_load",
                  "contentType": null,
                  "mqv:topic": "roof/pv_panel/max_pressure_load",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "nominalPower": {
              "title": "Nominal Power",
              "description": "Nominal power output of the PV panel.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/nominal_power",
                  "contentType": null,
                  "mqv:topic": "roof/pv_panel/nominal_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "maxSystemVoltage": {
              "title": "Max System Voltage",
              "description": "Maximum system voltage of the PV panel.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_system_voltage",
                  "contentType": null,
                  "mqv:topic": "roof/pv_panel/max_system_voltage",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "Smart PV Panel",
          "id": "urn:smart:device:pv_panel",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring PV panel parameters.",
          "properties": {
            "maxPressureLoad": {
              "title": "Max Pressure Load",
              "description": "Maximum pressure load on the PV panel from hail, snow, and wind.",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "hail": {
                  "title": "",
                  "description": "Pressure load from hail.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "snow": {
                  "title": "",
                  "description": "Pressure load from snow.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "wind": {
                  "title": "",
                  "description": "Pressure load from wind.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_pressure_load",
                  "contentType": null,
                  "mqv:topic": "roof/pv_panel/max_pressure_load",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "nominalPower": {
              "title": "Nominal Power",
              "description": "Nominal power output of the PV panel.",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/nominal_power",
                  "contentType": null,
                  "mqv:topic": "roof/pv_panel/nominal_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "maxSystemVoltage": {
              "title": "Max System Voltage",
              "description": "Maximum system voltage of the PV panel.",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_system_voltage",
                  "contentType": null,
                  "mqv:topic": "roof/pv_panel/max_system_voltage",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "PV Panel Monitoring System",
          "id": "urn:pv-panel-monitoring-system",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring photovoltaic panel parameters.",
          "properties": {
            "maxPressureLoad": {
              "title": "Maximum Pressure Load",
              "description": "The maximum pressure load on the PV panel due to hail, snow, and wind.",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "hail": {
                  "title": "Hail Pressure",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "snow": {
                  "title": "Snow Pressure",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "wind": {
                  "title": "Wind Pressure",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_pressure_load",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_pressure_load",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "nominalPower": {
              "title": "Nominal Power",
              "description": "The nominal power output of the PV panel.",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/nominal_power",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/nominal_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "maxSystemVoltage": {
              "title": "Max System Voltage",
              "description": "The maximum system voltage of the PV panel.",
              "observable": true,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_system_voltage",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_system_voltage",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "PV Panel Monitoring Device",
          "id": "urn:pv-panel-monitoring-device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring photovoltaic panel parameters.",
          "properties": {
            "maxPressureLoad": {
              "title": "Max Pressure Load",
              "description": "Maximum pressure load on the PV panel from hail, snow, and wind.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "hail": {
                  "title": "Hail Pressure",
                  "description": "Pressure load from hail.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "snow": {
                  "title": "Snow Pressure",
                  "description": "Pressure load from snow.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "wind": {
                  "title": "Wind Pressure",
                  "description": "Pressure load from wind.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_pressure_load",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_pressure_load",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "nominalPower": {
              "title": "Nominal Power",
              "description": "The nominal power output of the PV panel.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/nominal_power",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/nominal_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "maxSystemVoltage": {
              "title": "Max System Voltage",
              "description": "The maximum system voltage of the PV panel.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_system_voltage",
                  "contentType": "application/json",
                  "mqv:topic": "roof/pv_panel/max_system_voltage",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "Smart PV Panel",
          "id": "urn:smart:pv:panel",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart photovoltaic panel with sensors for pressure load, nominal power, and system voltage.",
          "properties": {
            "maxPressureLoad": {
              "title": "Max Pressure Load",
              "description": "Maximum pressure load on the PV panel measured in different conditions.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "hail": {
                  "title": "Hail Pressure Load",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "snow": {
                  "title": "Snow Pressure Load",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "wind": {
                  "title": "Wind Pressure Load",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "roof/pv_panel/max_pressure_load",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            },
            "nominalPower": {
              "title": "Nominal Power",
              "description": "The nominal power output of the PV panel.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "roof/pv_panel/nominal_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            },
            "maxSystemVoltage": {
              "title": "Max System Voltage",
              "description": "The maximum system voltage of the PV panel.",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883",
                  "contentType": null,
                  "mqv:topic": "roof/pv_panel/max_system_voltage",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartDevice",
          "title": "Roof PV Panel",
          "id": "urn:roof:pv_panel",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for monitoring roof photovoltaic panel parameters",
          "properties": {
            "max_pressure_load": {
              "title": "Max Pressure Load",
              "description": "Maximum pressure load on the PV panel due to hail, snow, and wind",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "hail": {
                  "title": "",
                  "description": "Pressure load due to hail",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "snow": {
                  "title": "",
                  "description": "Pressure load due to snow",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "wind": {
                  "title": "",
                  "description": "Pressure load due to wind",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_pressure_load",
                  "contentType": null,
                  "mqv:topic": "roof/pv_panel/max_pressure_load",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "nominal_power": {
              "title": "Nominal Power",
              "description": "Nominal power output of the PV panel",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/nominal_power",
                  "contentType": null,
                  "mqv:topic": "roof/pv_panel/nominal_power",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "max_system_voltage": {
              "title": "Max System Voltage",
              "description": "Maximum system voltage of the PV panel",
              "observable": null,
              "type": "number",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/roof/pv_panel/max_system_voltage",
                  "contentType": null,
                  "mqv:topic": "roof/pv_panel/max_system_voltage",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        }
      ],
      "msg_log": "topic: 'roof/pv_panel/max_pressure_load'; payload: '{'hail': 3.769, 'snow': 0.511, 'wind': 3.714}'; retain: 'true'\ntopic: 'roof/pv_panel/max_pressure_load'; payload: '{'hail': 3.252, 'snow': 3.703, 'wind': 1.025}'; retain: 'true'\ntopic: 'roof/pv_panel/max_pressure_load'; payload: '{'hail': 1.903, 'snow': 0.309, 'wind': 3.035}'; retain: 'true'\ntopic: 'roof/pv_panel/max_pressure_load'; payload: '{'hail': 4.742, 'snow': 2.613, 'wind': 0.828}'; retain: 'true'\ntopic: 'roof/pv_panel/max_pressure_load'; payload: '{'hail': 1.344, 'snow': 4.559, 'wind': 0.227}'; retain: 'true'\ntopic: 'roof/pv_panel/nominal_power'; payload: '167.416'; retain: 'true'\ntopic: 'roof/pv_panel/nominal_power'; payload: '128.108'; retain: 'true'\ntopic: 'roof/pv_panel/nominal_power'; payload: '9.115'; retain: 'true'\ntopic: 'roof/pv_panel/nominal_power'; payload: '247.604'; retain: 'true'\ntopic: 'roof/pv_panel/nominal_power'; payload: '228.056'; retain: 'true'\ntopic: 'roof/pv_panel/max_system_voltage'; payload: '126.548'; retain: 'true'\ntopic: 'roof/pv_panel/max_system_voltage'; payload: '170.49'; retain: 'true'\ntopic: 'roof/pv_panel/max_system_voltage'; payload: '123.76'; retain: 'true'\ntopic: 'roof/pv_panel/max_system_voltage'; payload: '30.783'; retain: 'true'\ntopic: 'roof/pv_panel/max_system_voltage'; payload: '210.548'; retain: 'true'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "AlarmSiren",
        "title": "Garage Alarm Siren",
        "id": "urn:uuid:be84eecd-42dc-4409-b30c-3bfa046f0e95",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "MQTT activated alarm sirem, (caution loud)",
        "properties": {
          "availability": {
            "title": "Siren Availability",
            "description": "The availability of the sire",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "ONLINE",
              "OFFLINE"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/siren/availability",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "activated": {
            "title": "Siren Activated",
            "description": "The siren was activated",
            "data": {
              "title": "",
              "description": "",
              "observable": false,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "activated"
              ],
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/siren/activate/result",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          },
          "testActivated": {
            "title": "Siren Test Activated",
            "description": "The test alarm was activated (silent)",
            "data": {
              "title": "",
              "description": "",
              "observable": false,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "activated"
              ],
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/siren/test/result",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "activate": {
            "title": "Activate Siren (Hot)",
            "description": "activate Siren",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/siren/activate",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "test": {
            "title": "Activate Siren (Silent)",
            "description": "silently test activation of the siren",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "garage/siren/test",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSiren",
          "title": "Garage Siren",
          "id": "urn:garage:siren",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart siren for the garage that can be activated or tested remotely.",
          "properties": {
            "availability": {
              "title": "Siren Availability",
              "description": "Indicates whether the siren is online or offline.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/availability",
                  "contentType": null,
                  "mqv:topic": "garage/siren/availability",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "activateResult": {
              "title": "Activate Result",
              "description": "The result of the siren activation.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate/result",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate/result",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            },
            "testResult": {
              "title": "Test Result",
              "description": "The result of the siren test.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test/result",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test/result",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "activate": {
              "title": "Activate Siren",
              "description": "Activates or deactivates the siren.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "test": {
              "title": "Test Siren",
              "description": "Tests the siren functionality.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSiren",
          "title": "Garage Siren",
          "id": "urn:garage:siren",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart siren installed in the garage that can be activated or tested remotely.",
          "properties": {
            "availability": {
              "title": "Siren Availability",
              "description": "Indicates if the siren is online or offline.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/availability",
                  "contentType": null,
                  "mqv:topic": "garage/siren/availability",
                  "mqv:retain": true,
                  "op": [
                    "observe"
                  ]
                }
              ]
            }
          },
          "events": {
            "activateResult": {
              "title": "Activate Result",
              "description": "Result of the siren activation command.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate/result",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate/result",
                  "mqv:retain": false,
                  "op": [
                    "observe"
                  ]
                }
              ]
            },
            "testResult": {
              "title": "Test Result",
              "description": "Result of the siren test command.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test/result",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test/result",
                  "mqv:retain": false,
                  "op": [
                    "observe"
                  ]
                }
              ]
            }
          },
          "actions": {
            "activate": {
              "title": "Activate Siren",
              "description": "Activate or deactivate the siren.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "true",
                  "false"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            },
            "test": {
              "title": "Test Siren",
              "description": "Test the siren functionality.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "true",
                  "false"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test",
                  "mqv:retain": false,
                  "op": [
                    "invoke"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSiren",
          "title": "Garage Siren",
          "id": "urn:garage:siren",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart siren installed in the garage, capable of being activated or tested remotely.",
          "properties": {
            "availability": {
              "title": "Siren Availability",
              "description": "Indicates whether the siren is online or offline.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/availability",
                  "contentType": null,
                  "mqv:topic": "garage/siren/availability",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "activate": {
              "title": "Activate Siren",
              "description": "Activates or deactivates the siren.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "true",
                  "false"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                },
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate/result",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate/result",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "test": {
              "title": "Test Siren",
              "description": "Tests the siren functionality.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "true",
                  "false"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                },
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test/result",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test/result",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSiren",
          "title": "Garage Siren",
          "id": "urn:garage:siren",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart siren located in the garage.",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates if the siren is online or offline.",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/availability",
                  "contentType": null,
                  "mqv:topic": "garage/siren/availability",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "activateResult": {
              "title": "Activate Result",
              "description": "Result of the activate action.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate/result",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate/result",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            },
            "testResult": {
              "title": "Test Result",
              "description": "Result of the test action.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test/result",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test/result",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "activate": {
              "title": "Activate Siren",
              "description": "Activates or deactivates the siren.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "test": {
              "title": "Test Siren",
              "description": "Tests the siren functionality.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSiren",
          "title": "Garage Siren",
          "id": "urn:garage:siren",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart siren installed in the garage, capable of being activated and tested remotely.",
          "properties": {
            "availability": {
              "title": "Siren Availability",
              "description": "Indicates whether the siren is online or offline.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/availability",
                  "contentType": null,
                  "mqv:topic": "garage/siren/availability",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "activate": {
              "title": "Activate Siren",
              "description": "Activates or deactivates the siren.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "true",
                  "false"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                },
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate/result",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate/result",
                  "mqv:retain": false,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "test": {
              "title": "Test Siren",
              "description": "Tests the siren by activating it for a short duration.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "true",
                  "false"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                },
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test/result",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test/result",
                  "mqv:retain": false,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSiren",
          "title": "Garage Siren",
          "id": "urn:garage:siren",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart siren installed in the garage.",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates whether the siren is online or offline.",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/availability",
                  "contentType": null,
                  "mqv:topic": "garage/siren/availability",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "activate": {
              "title": "Activate Siren",
              "description": "Activates or deactivates the siren.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                },
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate/result",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate/result",
                  "mqv:retain": false,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "test": {
              "title": "Test Siren",
              "description": "Tests the siren functionality.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                },
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test/result",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test/result",
                  "mqv:retain": false,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSiren",
          "title": "Garage Siren",
          "id": "urn:garage:siren",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart siren located in the garage, capable of activation and testing.",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates whether the siren is online or offline.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/availability",
                  "contentType": "text/plain",
                  "mqv:topic": "garage/siren/availability",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "activate": {
              "title": "Activate Siren",
              "description": "Activates or deactivates the siren.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "true",
                  "false"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate",
                  "contentType": "text/plain",
                  "mqv:topic": "garage/siren/activate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                },
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate/result",
                  "contentType": "text/plain",
                  "mqv:topic": "garage/siren/activate/result",
                  "mqv:retain": false,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "test": {
              "title": "Test Siren",
              "description": "Tests the siren to ensure it is functioning correctly.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "true",
                  "false"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test",
                  "contentType": "text/plain",
                  "mqv:topic": "garage/siren/test",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                },
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test/result",
                  "contentType": "text/plain",
                  "mqv:topic": "garage/siren/test/result",
                  "mqv:retain": false,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSiren",
          "title": "Garage Siren",
          "id": "urn:garage:siren",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart siren installed in the garage that can be activated or tested remotely.",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates whether the siren is online or offline.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/availability",
                  "contentType": null,
                  "mqv:topic": "garage/siren/availability",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "activate": {
              "title": "Activate Siren",
              "description": "Activates or deactivates the siren.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "true",
                  "false"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                },
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate/result",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate/result",
                  "mqv:retain": false,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "test": {
              "title": "Test Siren",
              "description": "Tests the siren functionality.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "true",
                  "false"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                },
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test/result",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test/result",
                  "mqv:retain": false,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSiren",
          "title": "Garage Siren",
          "id": "urn:garage:siren",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart siren installed in the garage, capable of activation and testing.",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates whether the siren is online or offline.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/availability",
                  "contentType": null,
                  "mqv:topic": "garage/siren/availability",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "activationResult": {
              "title": "Activation Result",
              "description": "Result of the siren activation.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate/result",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate/result",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            },
            "testResult": {
              "title": "Test Result",
              "description": "Result of the siren test.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test/result",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test/result",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "activate": {
              "title": "Activate Siren",
              "description": "Activates or deactivates the siren.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "true",
                  "false"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            },
            "test": {
              "title": "Test Siren",
              "description": "Tests the siren functionality.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "true",
                  "false"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSiren",
          "title": "Garage Siren",
          "id": "urn:garage:siren",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart siren located in the garage that can be activated or tested.",
          "properties": {
            "availability": {
              "title": "Availability",
              "description": "Indicates whether the siren is online or offline.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "ONLINE",
                "OFFLINE"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/availability",
                  "contentType": null,
                  "mqv:topic": "garage/siren/availability",
                  "mqv:retain": true,
                  "op": [
                    "observe"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "activate": {
              "title": "Activate Siren",
              "description": "Activates or deactivates the siren.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "true",
                  "false"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                },
                {
                  "href": "mqtt://broker.com:1883/garage/siren/activate/result",
                  "contentType": null,
                  "mqv:topic": "garage/siren/activate/result",
                  "mqv:retain": false,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "test": {
              "title": "Test Siren",
              "description": "Tests the siren functionality.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "true",
                  "false"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "activated"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                },
                {
                  "href": "mqtt://broker.com:1883/garage/siren/test/result",
                  "contentType": null,
                  "mqv:topic": "garage/siren/test/result",
                  "mqv:retain": false,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'garage/siren/availability'; payload: 'ONLINE'; retain: 'true'\ntopic: 'garage/siren/availability'; payload: 'OFFLINE'; retain: 'true'\ntopic: 'garage/siren/activate/result'; payload: 'activated'; retain: 'false'\ntopic: 'garage/siren/test/result'; payload: 'activated'; retain: 'false'\ntopic: 'garage/siren/activate'; payload: 'true'; retain: 'false'\ntopic: 'garage/siren/activate'; payload: 'false'; retain: 'false'\ntopic: 'garage/siren/activate'; payload: 'true'; retain: 'false'\ntopic: 'garage/siren/activate'; payload: 'false'; retain: 'false'\ntopic: 'garage/siren/test'; payload: 'true'; retain: 'false'\ntopic: 'garage/siren/test'; payload: 'false'; retain: 'false'\ntopic: 'garage/siren/test'; payload: 'true'; retain: 'false'\ntopic: 'garage/siren/test'; payload: 'false'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "Switch",
        "title": "Switch",
        "id": "urn:uuid:4819ac0e-ffa5-4d26-a83f-3dcd605f9d29",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "A stateful switch",
        "properties": {
          "state": {
            "title": "Switch State",
            "description": "State of the switch",
            "observable": true,
            "type": "boolean",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "home/downstairs/kitchen/switch004",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {},
        "actions": {}
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSwitch",
          "title": "Kitchen Switch",
          "id": "urn:home:downstairs:kitchen:switch004",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch located in the kitchen downstairs.",
          "properties": {
            "switchState": {
              "title": "Switch State",
              "description": "Indicates whether the switch is on or off.",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/downstairs/kitchen/switch004",
                  "contentType": null,
                  "mqv:topic": "home/downstairs/kitchen/switch004",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSwitch",
          "title": "Kitchen Switch",
          "id": "urn:home:downstairs:kitchen:switch004",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch located in the kitchen of the downstairs area.",
          "properties": {
            "switchState": {
              "title": "Switch State",
              "description": "The current state of the kitchen switch.",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/downstairs/kitchen/switch004",
                  "contentType": null,
                  "mqv:topic": "home/downstairs/kitchen/switch004",
                  "mqv:retain": true,
                  "op": [
                    "readproperty",
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSwitch",
          "title": "Kitchen Switch",
          "id": "urn:smart:kitchen:switch004",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch located in the kitchen downstairs.",
          "properties": {
            "switchState": {
              "title": "Switch State",
              "description": "The current state of the kitchen switch.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/downstairs/kitchen/switch004",
                  "contentType": null,
                  "mqv:topic": "home/downstairs/kitchen/switch004",
                  "mqv:retain": true,
                  "op": [
                    "readproperty",
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSwitch",
          "title": "Kitchen Switch",
          "id": "urn:home:downstairs:kitchen:switch004",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch located in the kitchen.",
          "properties": {
            "switchState": {
              "title": "Switch State",
              "description": "The current state of the kitchen switch.",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/downstairs/kitchen/switch004",
                  "contentType": "application/json",
                  "mqv:topic": "home/downstairs/kitchen/switch004",
                  "mqv:retain": true,
                  "op": [
                    "readproperty",
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSwitch",
          "title": "Kitchen Switch",
          "id": "urn:home:downstairs:kitchen:switch004",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch located in the kitchen of the downstairs area.",
          "properties": {
            "switchState": {
              "title": "Switch State",
              "description": "The current state of the switch, either on or off.",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/downstairs/kitchen/switch004",
                  "contentType": "application/json",
                  "mqv:topic": "home/downstairs/kitchen/switch004",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Smart Kitchen Switch",
          "id": "urn:smart:kitchen:switch004",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch located in the kitchen downstairs.",
          "properties": {
            "switchState": {
              "title": "Switch State",
              "description": "The current state of the kitchen switch.",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/downstairs/kitchen/switch004",
                  "contentType": "application/json",
                  "mqv:topic": "home/downstairs/kitchen/switch004",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "Thing",
          "title": "Kitchen Switch",
          "id": "urn:home:downstairs:kitchen:switch004",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch located in the kitchen downstairs.",
          "properties": {
            "switchState": {
              "title": "Switch State",
              "description": "Indicates whether the kitchen switch is on or off.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/downstairs/kitchen/switch004",
                  "contentType": "application/json",
                  "mqv:topic": "home/downstairs/kitchen/switch004",
                  "mqv:retain": true,
                  "op": [
                    "readproperty",
                    "writeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSwitch",
          "title": "Kitchen Switch",
          "id": "urn:home:downstairs:kitchen:switch004",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch located in the kitchen downstairs.",
          "properties": {
            "switchState": {
              "title": "Switch State",
              "description": "The current state of the kitchen switch.",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/downstairs/kitchen/switch004",
                  "contentType": null,
                  "mqv:topic": "home/downstairs/kitchen/switch004",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSwitch",
          "title": "Kitchen Switch",
          "id": "urn:home:downstairs:kitchen:switch004",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch located in the kitchen.",
          "properties": {
            "switchState": {
              "title": "Switch State",
              "description": "Indicates whether the switch is on or off.",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/downstairs/kitchen/switch004",
                  "contentType": "application/json",
                  "mqv:topic": "home/downstairs/kitchen/switch004",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartSwitch",
          "title": "Kitchen Switch",
          "id": "urn:home:downstairs:kitchen:switch004",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart switch located in the kitchen downstairs.",
          "properties": {
            "switchState": {
              "title": "Switch State",
              "description": "The current state of the kitchen switch.",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/downstairs/kitchen/switch004",
                  "contentType": null,
                  "mqv:topic": "home/downstairs/kitchen/switch004",
                  "mqv:retain": true,
                  "op": [
                    "readproperty",
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        }
      ],
      "msg_log": "topic: 'home/downstairs/kitchen/switch004'; payload: 'true'; retain: 'true'\ntopic: 'home/downstairs/kitchen/switch004'; payload: 'false'; retain: 'true'\ntopic: 'home/downstairs/kitchen/switch004'; payload: 'true'; retain: 'true'\ntopic: 'home/downstairs/kitchen/switch004'; payload: 'false'; retain: 'true'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "Tracker",
        "title": "My Smart Position Tracker",
        "id": "urn:uuid:8ca4d0a0-b788-4d9d-af99-7a032a732f13",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "An automatic window cover",
        "properties": {
          "position": {
            "title": "Tracker Position",
            "description": "The location of the tracker in GPS coordinates",
            "observable": true,
            "type": "object",
            "minimum": null,
            "maximum": null,
            "enum": null,
            "properties": {
              "longitude": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "latitude": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "altitude": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "number",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              }
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/pos",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "alarm": {
            "title": "Movement Alarm",
            "description": "The tracker has left the set position and radius",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/alarm",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "setPosition": {
            "title": "Set Position",
            "description": "Set the position and radius of the tracker",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "radius": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              }
            },
            "output": {
              "title": "",
              "description": "",
              "observable": false,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/config",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "DeviceTracker",
          "title": "Smart IoT Device Tracker",
          "id": "urn:homeassistant:device_tracker:a4567d663eaf",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device tracker that provides position updates and alarm notifications.",
          "properties": {
            "position": {
              "title": "Position",
              "description": "The current position of the device.",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "altitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/pos",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/pos",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "config": {
              "title": "Configuration",
              "description": "The configuration settings of the device.",
              "observable": false,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "radius": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/config",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/config",
                  "mqv:retain": false,
                  "op": [
                    "writeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "alarm": {
              "title": "Alarm",
              "description": "An alarm event triggered by the device.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/alarm",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/alarm",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "DeviceTracker",
          "title": "Smart IoT Device Tracker",
          "id": "urn:homeassistant:device_tracker:a4567d663eaf",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that tracks position and can trigger alarms.",
          "properties": {
            "position": {
              "title": "Position",
              "description": "The current position of the device including longitude, latitude, and altitude.",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "Longitude of the device",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "Latitude of the device",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "altitude": {
                  "title": "",
                  "description": "Altitude of the device",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/pos",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/pos",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "config": {
              "title": "Configuration",
              "description": "Configuration settings for the device including longitude, latitude, and radius.",
              "observable": false,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "Configured longitude",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "Configured latitude",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "radius": {
                  "title": "",
                  "description": "Configured radius",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/config",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/config",
                  "mqv:retain": false,
                  "op": [
                    "writeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "alarm": {
              "title": "Alarm",
              "description": "An alarm event triggered by the device.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/alarm",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/alarm",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "DeviceTracker",
          "title": "Smart IoT Device Tracker",
          "id": "urn:homeassistant:device_tracker:a4567d663eaf",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that tracks position and manages alarms.",
          "properties": {
            "position": {
              "title": "Position",
              "description": "Tracks the geographical position of the device.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "The longitude of the device.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "The latitude of the device.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "altitude": {
                  "title": "",
                  "description": "The altitude of the device.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/pos",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/pos",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "config": {
              "title": "Configuration",
              "description": "Configuration settings for the device.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "The configured longitude for the device.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "The configured latitude for the device.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "radius": {
                  "title": "",
                  "description": "The configured radius for the device.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/config",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/config",
                  "mqv:retain": false,
                  "op": [
                    "writeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "alarm": {
              "title": "Alarm",
              "description": "Indicates an alarm event from the device.",
              "data": {
                "title": "",
                "description": "No data is sent with the alarm event.",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/alarm",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/alarm",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "DeviceTracker",
          "title": "Smart IoT Device Tracker",
          "id": "urn:homeassistant:device_tracker:a4567d663eaf",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device tracker that provides position data and configuration settings.",
          "properties": {
            "position": {
              "title": "Position",
              "description": "The current geographic position of the device.",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "altitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/pos",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/pos",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "config": {
              "title": "Configuration",
              "description": "Configuration settings for the device.",
              "observable": false,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "radius": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/config",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/config",
                  "mqv:retain": false,
                  "op": [
                    "readproperty",
                    "writeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "alarm": {
              "title": "Alarm",
              "description": "An alarm event triggered by the device.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/alarm",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/alarm",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "DeviceTracker",
          "title": "Smart IoT Device Tracker",
          "id": "urn:homeassistant:device_tracker:a4567d663eaf",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device tracker that provides position, alarm, and configuration settings.",
          "properties": {
            "position": {
              "title": "Position",
              "description": "Provides the current position of the device including longitude, latitude, and altitude.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "The longitude of the device.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "The latitude of the device.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "altitude": {
                  "title": "",
                  "description": "The altitude of the device.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/pos",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/pos",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "alarm": {
              "title": "Alarm",
              "description": "Indicates if an alarm is triggered.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/alarm",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/alarm",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "config": {
              "title": "Configuration",
              "description": "Configuration settings including longitude, latitude, and radius.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "The longitude for configuration.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "The latitude for configuration.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "radius": {
                  "title": "",
                  "description": "The radius setting for configuration.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/config",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/config",
                  "mqv:retain": false,
                  "op": [
                    "writeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "DeviceTracker",
          "title": "Smart IoT Device Tracker",
          "id": "urn:homeassistant:device_tracker:a4567d663eaf",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that tracks position and can trigger alarms.",
          "properties": {
            "position": {
              "title": "Position",
              "description": "The current position of the device including longitude, latitude, and altitude.",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "The longitude of the device.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "The latitude of the device.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "altitude": {
                  "title": "",
                  "description": "The altitude of the device.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/pos",
                  "contentType": "application/json",
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/pos",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "config": {
              "title": "Configuration",
              "description": "Configuration settings for the device including geofence parameters.",
              "observable": false,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "The longitude for the geofence.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "The latitude for the geofence.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "radius": {
                  "title": "",
                  "description": "The radius of the geofence.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/config",
                  "contentType": "application/json",
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/config",
                  "mqv:retain": false,
                  "op": [
                    "writeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "alarm": {
              "title": "Alarm",
              "description": "An alarm event that is triggered under certain conditions.",
              "data": {
                "title": "",
                "description": "No additional data is provided with the alarm event.",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/alarm",
                  "contentType": "application/json",
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/alarm",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "DeviceTracker",
          "title": "Smart IoT Device Tracker",
          "id": "urn:homeassistant:device_tracker:a4567d663eaf",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that tracks position and can be configured and alarmed.",
          "properties": {
            "position": {
              "title": "Position",
              "description": "The current position of the device.",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "altitude": {
                  "title": "",
                  "description": "",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/pos",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/pos",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "alarm": {
              "title": "Alarm",
              "description": "An alarm event triggered by the device.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/alarm",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/alarm",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "configure": {
              "title": "Configure",
              "description": "Configure the device with new settings.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "object",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {
                  "longitude": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": null,
                    "maximum": null,
                    "enum": null,
                    "properties": {}
                  },
                  "latitude": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": null,
                    "maximum": null,
                    "enum": null,
                    "properties": {}
                  },
                  "radius": {
                    "title": "",
                    "description": "",
                    "observable": null,
                    "type": "number",
                    "minimum": null,
                    "maximum": null,
                    "enum": null,
                    "properties": {}
                  }
                }
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/config",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/config",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "DeviceTracker",
          "title": "Smart IoT Device Tracker",
          "id": "urn:homeassistant:device_tracker:a4567d663eaf",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that tracks position and configuration with alarm capability.",
          "properties": {
            "position": {
              "title": "Position",
              "description": "The current position of the device.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "Longitude of the device.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "Latitude of the device.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "altitude": {
                  "title": "",
                  "description": "Altitude of the device.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/pos",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/pos",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "configuration": {
              "title": "Configuration",
              "description": "Configuration settings of the device.",
              "observable": null,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "Configured longitude.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "Configured latitude.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "radius": {
                  "title": "",
                  "description": "Configured radius.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/config",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/config",
                  "mqv:retain": false,
                  "op": [
                    "writeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "alarm": {
              "title": "Alarm",
              "description": "An alarm event triggered by the device.",
              "data": {
                "title": "",
                "description": "No data payload for the alarm event.",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/alarm",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/alarm",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "DeviceTracker",
          "title": "Smart IoT Device - Device Tracker",
          "id": "urn:homeassistant:device_tracker:a4567d663eaf",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for tracking position and configuration",
          "properties": {
            "position": {
              "title": "Position",
              "description": "Tracks the current position of the device",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "Longitude of the device",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "Latitude of the device",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "altitude": {
                  "title": "",
                  "description": "Altitude of the device",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/pos",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/pos",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "config": {
              "title": "Configuration",
              "description": "Configuration settings of the device",
              "observable": false,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "Configured longitude",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "Configured latitude",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "radius": {
                  "title": "",
                  "description": "Configured radius",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/config",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/config",
                  "mqv:retain": false,
                  "op": [
                    "writeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "alarm": {
              "title": "Alarm",
              "description": "Alarm event triggered by the device",
              "data": {
                "title": "",
                "description": "No data payload for alarm event",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/alarm",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/alarm",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "DeviceTracker",
          "title": "Smart IoT Device Tracker",
          "id": "urn:homeassistant:device_tracker:a4567d663eaf",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device that tracks position and can trigger alarms.",
          "properties": {
            "position": {
              "title": "Position",
              "description": "The current geographic position of the device.",
              "observable": true,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "Longitude of the device.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "Latitude of the device.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "altitude": {
                  "title": "",
                  "description": "Altitude of the device.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/pos",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/pos",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "config": {
              "title": "Configuration",
              "description": "Configuration settings of the device.",
              "observable": false,
              "type": "object",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {
                "longitude": {
                  "title": "",
                  "description": "Configured longitude.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "latitude": {
                  "title": "",
                  "description": "Configured latitude.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                },
                "radius": {
                  "title": "",
                  "description": "Configured radius.",
                  "observable": null,
                  "type": "number",
                  "minimum": null,
                  "maximum": null,
                  "enum": null,
                  "properties": {}
                }
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/config",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/config",
                  "mqv:retain": false,
                  "op": [
                    "readproperty",
                    "writeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "alarm": {
              "title": "Alarm",
              "description": "Triggered alarm event.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/homeassistant/device_tracker/a4567d663eaf/alarm",
                  "contentType": null,
                  "mqv:topic": "homeassistant/device_tracker/a4567d663eaf/alarm",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {}
        }
      ],
      "msg_log": "topic: 'homeassistant/device_tracker/a4567d663eaf/pos'; payload: '{'longitude': 21.86, 'latitude': 32.333, 'altitude': 0.279}'; retain: 'true'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/pos'; payload: '{'longitude': 30.376, 'latitude': 22.205, 'altitude': 7.779}'; retain: 'true'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/pos'; payload: '{'longitude': 20.725, 'latitude': 1.188, 'altitude': 6.99}'; retain: 'true'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/pos'; payload: '{'longitude': 40.227, 'latitude': 29.764, 'altitude': 9.635}'; retain: 'true'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/pos'; payload: '{'longitude': 35.201, 'latitude': 6.359, 'altitude': 6.177}'; retain: 'true'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/alarm'; payload: ''; retain: 'false'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/alarm'; payload: ''; retain: 'false'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/alarm'; payload: ''; retain: 'false'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/alarm'; payload: ''; retain: 'false'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/alarm'; payload: ''; retain: 'false'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/config'; payload: '{'longitude': 35.173, 'latitude': 7.676, 'radius': 28.303}'; retain: 'false'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/config'; payload: '{'longitude': 38.448, 'latitude': 18.145, 'radius': 33.903}'; retain: 'false'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/config'; payload: '{'longitude': 21.134, 'latitude': 16.302, 'radius': 0.331}'; retain: 'false'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/config'; payload: '{'longitude': 35.704, 'latitude': 40.956, 'radius': 15.36}'; retain: 'false'\ntopic: 'homeassistant/device_tracker/a4567d663eaf/config'; payload: '{'longitude': 6.487, 'latitude': 33.16, 'radius': 24.939}'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "VacuumCleaner",
        "title": "Vacuum Cleaner",
        "id": "urn:uuid:b5d392d8-9931-44be-881e-d12410860baa",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "A smart vacuum cleaner",
        "properties": {
          "state": {
            "title": "Vacuum State",
            "description": "The state of the vacuum",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "cleaning",
              "docked",
              "paused",
              "idle",
              "returning",
              "error"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "apartment/vacuum/state",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          },
          "battery": {
            "title": "Battery",
            "description": "Battery percentage of the vacuum cleaner",
            "observable": true,
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "enum": null,
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "apartment/vacuum/bat",
                "mqv:retain": true,
                "op": [
                  "observeproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "stuck": {
            "title": "Vacuum Stuck",
            "description": "The vacuum cleaner is stuck and need assistance",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "apartment/vacuum/stuck",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          },
          "bin": {
            "title": "Vacuum Bin Full",
            "description": "The vacuum cleaner's bin is full",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "apartment/vacuum/bin/full",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "command": {
            "title": "Commands",
            "description": "Send commands to the vacuum",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "start",
                "pause",
                "return",
                "stop",
                "clean_spor",
                "locate"
              ],
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "apartment/vacuum/cmnd",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          },
          "pause": {
            "title": "Pause vacuum",
            "description": "Pause the vacuum",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "output": null,
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "apartment/vacuum/pause",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartVacuum",
          "title": "Smart Vacuum Cleaner",
          "id": "urn:example:smart-vacuum",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart vacuum cleaner that can be controlled and monitored via MQTT.",
          "properties": {
            "state": {
              "title": "Vacuum State",
              "description": "The current state of the vacuum cleaner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "cleaning",
                "docked",
                "paused",
                "idle",
                "returning",
                "error"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/state",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "battery": {
              "title": "Battery Level",
              "description": "The battery level of the vacuum cleaner.",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bat",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/bat",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "stuck": {
              "title": "Stuck Status",
              "description": "Indicates if the vacuum cleaner is stuck.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/stuck",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/stuck",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "binFull": {
              "title": "Dust Bin Full Status",
              "description": "Indicates if the dust bin is full.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bin/full",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/bin/full",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "pause": {
              "title": "Pause Status",
              "description": "Indicates if the vacuum cleaner is paused.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/pause",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/pause",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "command": {
              "title": "Vacuum Command",
              "description": "Send commands to the vacuum cleaner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "start",
                  "pause",
                  "return",
                  "stop",
                  "clean_spot",
                  "locate"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartVacuum",
          "title": "Apartment Vacuum Cleaner",
          "id": "urn:apartment:vacuum:001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart vacuum cleaner for apartment cleaning tasks",
          "properties": {
            "state": {
              "title": "Vacuum State",
              "description": "Current state of the vacuum cleaner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "cleaning",
                "docked",
                "paused",
                "idle",
                "returning",
                "error"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/state",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "battery": {
              "title": "Battery Level",
              "description": "Current battery level of the vacuum cleaner",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bat",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/bat",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "stuck": {
              "title": "Stuck Status",
              "description": "Indicates if the vacuum is stuck",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/stuck",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/stuck",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "binFull": {
              "title": "Bin Full Status",
              "description": "Indicates if the vacuum bin is full",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bin/full",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/bin/full",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "pause": {
              "title": "Pause Status",
              "description": "Indicates if the vacuum is paused",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/pause",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/pause",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "command": {
              "title": "Vacuum Command",
              "description": "Commands to control the vacuum cleaner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "start",
                  "pause",
                  "return",
                  "stop",
                  "clean_spot",
                  "locate"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartVacuumCleaner",
          "title": "Smart Vacuum Cleaner",
          "id": "urn:smart-vacuum-cleaner",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart vacuum cleaner that can be controlled and monitored via MQTT.",
          "properties": {
            "state": {
              "title": "Vacuum State",
              "description": "The current state of the vacuum cleaner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "cleaning",
                "docked",
                "paused",
                "idle",
                "returning",
                "error"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/state",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "battery": {
              "title": "Battery Level",
              "description": "The current battery level of the vacuum cleaner.",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bat",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/bat",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "stuck": {
              "title": "Stuck Status",
              "description": "Indicates if the vacuum cleaner is stuck.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/stuck",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/stuck",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "binFull": {
              "title": "Dustbin Full Status",
              "description": "Indicates if the vacuum cleaner's dustbin is full.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bin/full",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/bin/full",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "pause": {
              "title": "Pause Status",
              "description": "Indicates if the vacuum cleaner is paused.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/pause",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/pause",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "command": {
              "title": "Vacuum Command",
              "description": "Sends a command to the vacuum cleaner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "start",
                  "pause",
                  "return",
                  "stop",
                  "clean_spot",
                  "locate"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartVacuumCleaner",
          "title": "Smart Vacuum Cleaner",
          "id": "urn:smart-vacuum-cleaner",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT vacuum cleaner with various states and controls.",
          "properties": {
            "state": {
              "title": "Vacuum State",
              "description": "Current state of the vacuum cleaner",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "cleaning",
                "docked",
                "paused",
                "idle",
                "returning",
                "error"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/state",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "battery": {
              "title": "Battery Level",
              "description": "Current battery level of the vacuum cleaner",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bat",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/bat",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "stuck": {
              "title": "Stuck Status",
              "description": "Indicates if the vacuum cleaner is stuck",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/stuck",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/stuck",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "binFull": {
              "title": "Bin Full Status",
              "description": "Indicates if the vacuum cleaner's bin is full",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bin/full",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/bin/full",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "pause": {
              "title": "Pause Status",
              "description": "Indicates if the vacuum cleaner is paused",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/pause",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/pause",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "command": {
              "title": "Vacuum Command",
              "description": "Commands to control the vacuum cleaner",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "start",
                  "pause",
                  "return",
                  "stop",
                  "clean_spot",
                  "locate"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartVacuum",
          "title": "Smart Vacuum Cleaner",
          "id": "urn:smart:vacuum:001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart vacuum cleaner with MQTT interface",
          "properties": {
            "state": {
              "title": "Vacuum State",
              "description": "Current state of the vacuum",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "cleaning",
                "docked",
                "paused",
                "idle",
                "returning",
                "error"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/state",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "battery": {
              "title": "Battery Level",
              "description": "Current battery level of the vacuum",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bat",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/bat",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "stuck": {
              "title": "Stuck Status",
              "description": "Indicates if the vacuum is stuck",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/stuck",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/stuck",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "binFull": {
              "title": "Dustbin Full Status",
              "description": "Indicates if the vacuum's dustbin is full",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bin/full",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/bin/full",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "pauseEvent": {
              "title": "Pause Event",
              "description": "Event triggered when the vacuum is paused or resumed",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "boolean",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/pause",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/pause",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "command": {
              "title": "Send Command",
              "description": "Send a command to the vacuum",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "start",
                  "pause",
                  "return",
                  "stop",
                  "clean_spot",
                  "locate"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartVacuum",
          "title": "Smart Vacuum Cleaner",
          "id": "urn:smart:vacuum:001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart vacuum cleaner that can be controlled and monitored via MQTT.",
          "properties": {
            "state": {
              "title": "Vacuum State",
              "description": "Current state of the vacuum cleaner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "cleaning",
                "docked",
                "paused",
                "idle",
                "returning",
                "error"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/state",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "battery": {
              "title": "Battery Level",
              "description": "Current battery level of the vacuum cleaner.",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bat",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/bat",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "stuck": {
              "title": "Stuck Status",
              "description": "Indicates if the vacuum cleaner is stuck.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/stuck",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/stuck",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "binFull": {
              "title": "Bin Full Status",
              "description": "Indicates if the vacuum cleaner's bin is full.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bin/full",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/bin/full",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "paused": {
              "title": "Paused Status",
              "description": "Indicates if the vacuum cleaner is paused.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/pause",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/pause",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "command": {
              "title": "Vacuum Command",
              "description": "Send a command to the vacuum cleaner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "start",
                  "pause",
                  "return",
                  "stop",
                  "clean_spot",
                  "locate"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartVacuumCleaner",
          "title": "Smart Vacuum Cleaner",
          "id": "urn:uuid:1234-5678-9012-3456",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart vacuum cleaner that can be controlled and monitored via MQTT.",
          "properties": {
            "state": {
              "title": "Vacuum State",
              "description": "Current state of the vacuum cleaner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "cleaning",
                "docked",
                "paused",
                "idle",
                "returning",
                "error"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/state",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "battery": {
              "title": "Battery Level",
              "description": "Current battery level of the vacuum cleaner.",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bat",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/bat",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "stuck": {
              "title": "Stuck Status",
              "description": "Indicates if the vacuum cleaner is stuck.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/stuck",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/stuck",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "binFull": {
              "title": "Bin Full Status",
              "description": "Indicates if the vacuum cleaner's bin is full.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bin/full",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/bin/full",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "pause": {
              "title": "Pause Status",
              "description": "Indicates if the vacuum cleaner is paused.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/pause",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/pause",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "command": {
              "title": "Vacuum Command",
              "description": "Commands to control the vacuum cleaner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "start",
                  "pause",
                  "return",
                  "stop",
                  "clean_spot",
                  "locate"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartVacuum",
          "title": "Smart Vacuum Cleaner",
          "id": "urn:smart-vacuum:apartment",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart vacuum cleaner for apartment cleaning automation.",
          "properties": {
            "state": {
              "title": "Vacuum State",
              "description": "The current state of the vacuum cleaner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "cleaning",
                "docked",
                "paused",
                "idle",
                "returning",
                "error"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/state",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            },
            "battery": {
              "title": "Battery Level",
              "description": "The battery level of the vacuum cleaner.",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bat",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/bat",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            },
            "stuck": {
              "title": "Stuck Status",
              "description": "Indicates if the vacuum is stuck.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/stuck",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/stuck",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            },
            "binFull": {
              "title": "Dustbin Full Status",
              "description": "Indicates if the vacuum's dustbin is full.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bin/full",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/bin/full",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            },
            "pause": {
              "title": "Pause Status",
              "description": "Indicates if the vacuum is paused.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/pause",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/pause",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "command": {
              "title": "Vacuum Command",
              "description": "Commands to control the vacuum cleaner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "start",
                  "pause",
                  "return",
                  "stop",
                  "clean_spot",
                  "locate"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartVacuumCleaner",
          "title": "Smart Vacuum Cleaner",
          "id": "urn:smart:vacuum:cleaner",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT vacuum cleaner with multiple states and commands.",
          "properties": {
            "state": {
              "title": "Vacuum State",
              "description": "Current state of the vacuum cleaner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "cleaning",
                "docked",
                "paused",
                "idle",
                "returning",
                "error"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/state",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "battery": {
              "title": "Battery Level",
              "description": "Current battery level of the vacuum cleaner.",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bat",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/bat",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "stuck": {
              "title": "Stuck Status",
              "description": "Indicates if the vacuum is stuck.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/stuck",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/stuck",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "binFull": {
              "title": "Bin Full Status",
              "description": "Indicates if the vacuum bin is full.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bin/full",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/bin/full",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "pause": {
              "title": "Pause Status",
              "description": "Indicates if the vacuum is paused.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/pause",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/pause",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "command": {
              "title": "Vacuum Command",
              "description": "Commands to control the vacuum cleaner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "start",
                  "pause",
                  "return",
                  "stop",
                  "clean_spot",
                  "locate"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartVacuum",
          "title": "Smart Vacuum Cleaner",
          "id": "urn:smart:vacuum:001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart vacuum cleaner that can be controlled and monitored over MQTT.",
          "properties": {
            "state": {
              "title": "Vacuum State",
              "description": "The current state of the vacuum cleaner.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "cleaning",
                "docked",
                "paused",
                "idle",
                "returning",
                "error"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/state",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/state",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "battery": {
              "title": "Battery Level",
              "description": "The battery level of the vacuum cleaner.",
              "observable": null,
              "type": "integer",
              "minimum": 0,
              "maximum": 100,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bat",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/bat",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "stuck": {
              "title": "Stuck Status",
              "description": "Indicates if the vacuum cleaner is stuck.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/stuck",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/stuck",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "binFull": {
              "title": "Bin Full Status",
              "description": "Indicates if the vacuum cleaner's bin is full.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/bin/full",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/bin/full",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "paused": {
              "title": "Paused Status",
              "description": "Indicates if the vacuum cleaner is paused.",
              "observable": null,
              "type": "boolean",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/pause",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/pause",
                  "mqv:retain": false,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {},
          "actions": {
            "command": {
              "title": "Vacuum Command",
              "description": "Send a command to the vacuum cleaner.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "start",
                  "pause",
                  "return",
                  "stop",
                  "clean_spot",
                  "locate"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/apartment/vacuum/cmnd",
                  "contentType": null,
                  "mqv:topic": "apartment/vacuum/cmnd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'apartment/vacuum/state'; payload: 'cleaning'; retain: 'true'\ntopic: 'apartment/vacuum/state'; payload: 'docked'; retain: 'true'\ntopic: 'apartment/vacuum/state'; payload: 'paused'; retain: 'true'\ntopic: 'apartment/vacuum/state'; payload: 'idle'; retain: 'true'\ntopic: 'apartment/vacuum/state'; payload: 'returning'; retain: 'true'\ntopic: 'apartment/vacuum/state'; payload: 'error'; retain: 'true'\ntopic: 'apartment/vacuum/bat'; payload: '15'; retain: 'true'\ntopic: 'apartment/vacuum/bat'; payload: '81'; retain: 'true'\ntopic: 'apartment/vacuum/bat'; payload: '95'; retain: 'true'\ntopic: 'apartment/vacuum/bat'; payload: '28'; retain: 'true'\ntopic: 'apartment/vacuum/bat'; payload: '25'; retain: 'true'\ntopic: 'apartment/vacuum/stuck'; payload: ''; retain: 'false'\ntopic: 'apartment/vacuum/stuck'; payload: ''; retain: 'false'\ntopic: 'apartment/vacuum/stuck'; payload: ''; retain: 'false'\ntopic: 'apartment/vacuum/stuck'; payload: ''; retain: 'false'\ntopic: 'apartment/vacuum/stuck'; payload: ''; retain: 'false'\ntopic: 'apartment/vacuum/bin/full'; payload: ''; retain: 'false'\ntopic: 'apartment/vacuum/bin/full'; payload: ''; retain: 'false'\ntopic: 'apartment/vacuum/bin/full'; payload: ''; retain: 'false'\ntopic: 'apartment/vacuum/bin/full'; payload: ''; retain: 'false'\ntopic: 'apartment/vacuum/bin/full'; payload: ''; retain: 'false'\ntopic: 'apartment/vacuum/cmnd'; payload: 'start'; retain: 'false'\ntopic: 'apartment/vacuum/cmnd'; payload: 'pause'; retain: 'false'\ntopic: 'apartment/vacuum/cmnd'; payload: 'return'; retain: 'false'\ntopic: 'apartment/vacuum/cmnd'; payload: 'stop'; retain: 'false'\ntopic: 'apartment/vacuum/cmnd'; payload: 'clean_spor'; retain: 'false'\ntopic: 'apartment/vacuum/cmnd'; payload: 'locate'; retain: 'false'\ntopic: 'apartment/vacuum/pause'; payload: 'true'; retain: 'false'\ntopic: 'apartment/vacuum/pause'; payload: 'false'; retain: 'false'\ntopic: 'apartment/vacuum/pause'; payload: 'true'; retain: 'false'\ntopic: 'apartment/vacuum/pause'; payload: 'false'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    },
    {
      "base_td": {
        "@context": [
          "https://www.w3.org/2022/wot/td/v1.1"
        ],
        "@type": "WindowCover",
        "title": "My Smart Window Cover",
        "id": "urn:uuid:8504295f-d7e3-4c34-9c1d-d380816a6022",
        "securityDefinitions": {
          "nosec_sc": {
            "scheme": "nosec"
          }
        },
        "security": [
          "nosec_sc"
        ],
        "description": "An automatic window cover",
        "properties": {
          "position": {
            "title": "Cover position",
            "description": "Position of the cover, it is either open or closed",
            "observable": true,
            "type": "string",
            "minimum": null,
            "maximum": null,
            "enum": [
              "OPEN",
              "CLOSED"
            ],
            "properties": {},
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "home/cover/pos",
                "mqv:retain": true,
                "op": [
                  "observeproperty",
                  "readproperty"
                ]
              }
            ]
          }
        },
        "events": {
          "positionChange": {
            "title": "Position Change",
            "description": "The position of the window cover was changed",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPENING",
                "CLOSING"
              ],
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "home/cover/chg",
                "mqv:retain": false,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          },
          "sunLight": {
            "title": "Sun light detection",
            "description": "The window cover has detected sunlight",
            "data": {
              "title": "",
              "description": "",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": "text/plain",
                "mqv:topic": "home/cover/light",
                "mqv:retain": true,
                "op": [
                  "subscribeevent",
                  "unsubscribeevent"
                ]
              }
            ]
          }
        },
        "actions": {
          "command": {
            "title": "Cover Commands",
            "description": "Change the cover position",
            "input": {
              "title": "",
              "description": "",
              "observable": true,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPEN",
                "CLOSE"
              ],
              "properties": {}
            },
            "output": {
              "title": "",
              "description": "",
              "observable": false,
              "type": "null",
              "minimum": null,
              "maximum": null,
              "enum": null,
              "properties": {}
            },
            "forms": [
              {
                "href": "192.168.0.100:1883",
                "contentType": null,
                "mqv:topic": "home/cover/cmd",
                "mqv:retain": false,
                "op": [
                  "invokeaction"
                ]
              }
            ]
          }
        }
      },
      "llm_td_lst": [
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartCover",
          "title": "Smart IoT Cover Device",
          "id": "urn:smart-iot:cover-device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for controlling and monitoring a cover.",
          "properties": {
            "position": {
              "title": "Position",
              "description": "The current position of the cover.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPEN",
                "CLOSED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/pos",
                  "contentType": null,
                  "mqv:topic": "home/cover/pos",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "light": {
              "title": "Light Intensity",
              "description": "The current light intensity near the cover.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/light",
                  "contentType": null,
                  "mqv:topic": "home/cover/light",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "positionChange": {
              "title": "Position Change",
              "description": "An event indicating the cover is opening or closing.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPENING",
                  "CLOSING"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/chg",
                  "contentType": null,
                  "mqv:topic": "home/cover/chg",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "command": {
              "title": "Command",
              "description": "Send a command to open or close the cover.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPEN",
                  "CLOSE"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/cmd",
                  "contentType": null,
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartCover",
          "title": "Smart Cover Device",
          "id": "urn:smart:cover:device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for controlling and monitoring a cover",
          "properties": {
            "position": {
              "title": "Cover Position",
              "description": "Indicates the current position of the cover",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPEN",
                "CLOSED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/pos",
                  "contentType": null,
                  "mqv:topic": "home/cover/pos",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "light": {
              "title": "Cover Light",
              "description": "Indicates the current light level of the cover",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/light",
                  "contentType": null,
                  "mqv:topic": "home/cover/light",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "positionChange": {
              "title": "Position Change",
              "description": "Indicates the change in position of the cover",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPENING",
                  "CLOSING"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/chg",
                  "contentType": null,
                  "mqv:topic": "home/cover/chg",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "command": {
              "title": "Cover Command",
              "description": "Commands to control the cover",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPEN",
                  "CLOSE"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/cmd",
                  "contentType": null,
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartCover",
          "title": "Smart IoT Cover Device",
          "id": "urn:smart-iot:cover-device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for controlling and monitoring a cover.",
          "properties": {
            "position": {
              "title": "Cover Position",
              "description": "The current position of the cover.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPEN",
                "CLOSED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/pos",
                  "contentType": null,
                  "mqv:topic": "home/cover/pos",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "light": {
              "title": "Cover Light Intensity",
              "description": "The current light intensity of the cover.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/light",
                  "contentType": null,
                  "mqv:topic": "home/cover/light",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "positionChange": {
              "title": "Position Change",
              "description": "The event indicating the cover is changing position.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPENING",
                  "CLOSING"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/chg",
                  "contentType": null,
                  "mqv:topic": "home/cover/chg",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "setPosition": {
              "title": "Set Cover Position",
              "description": "Command to set the cover position.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPEN",
                  "CLOSE"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/cmd",
                  "contentType": null,
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartCover",
          "title": "Smart IoT Cover Device",
          "id": "urn:smart-cover:device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for controlling and monitoring a cover.",
          "properties": {
            "position": {
              "title": "Position",
              "description": "The current position of the cover.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPEN",
                "CLOSED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/pos",
                  "contentType": null,
                  "mqv:topic": "home/cover/pos",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "light": {
              "title": "Light Intensity",
              "description": "The current light intensity setting of the cover.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/light",
                  "contentType": null,
                  "mqv:topic": "home/cover/light",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "positionChange": {
              "title": "Position Change",
              "description": "Event triggered when the cover is opening or closing.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPENING",
                  "CLOSING"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/chg",
                  "contentType": null,
                  "mqv:topic": "home/cover/chg",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "command": {
              "title": "Command",
              "description": "Command to open or close the cover.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPEN",
                  "CLOSE"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/cmd",
                  "contentType": null,
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartCover",
          "title": "Smart Cover",
          "id": "urn:smart-cover-001",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for controlling and monitoring a cover.",
          "properties": {
            "position": {
              "title": "Position",
              "description": "The current position of the cover.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPEN",
                "CLOSED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/pos",
                  "contentType": null,
                  "mqv:topic": "home/cover/pos",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            },
            "light": {
              "title": "Light",
              "description": "The current light level of the cover.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/light",
                  "contentType": null,
                  "mqv:topic": "home/cover/light",
                  "mqv:retain": true,
                  "op": [
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "positionChange": {
              "title": "Position Change",
              "description": "The event indicating the cover is changing position.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPENING",
                  "CLOSING"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/chg",
                  "contentType": null,
                  "mqv:topic": "home/cover/chg",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "command": {
              "title": "Command",
              "description": "Command to open or close the cover.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPEN",
                  "CLOSE"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/cmd",
                  "contentType": null,
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartCover",
          "title": "Smart IoT Cover Device",
          "id": "urn:smart:cover:device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT cover device that can be opened or closed and has adjustable light settings.",
          "properties": {
            "position": {
              "title": "Cover Position",
              "description": "Indicates if the cover is open or closed.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPEN",
                "CLOSED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/pos",
                  "contentType": null,
                  "mqv:topic": "home/cover/pos",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            },
            "light": {
              "title": "Cover Light",
              "description": "Indicates the light level of the cover.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/light",
                  "contentType": null,
                  "mqv:topic": "home/cover/light",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "positionChange": {
              "title": "Position Change",
              "description": "Notifies when the cover is opening or closing.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPENING",
                  "CLOSING"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/chg",
                  "contentType": null,
                  "mqv:topic": "home/cover/chg",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "command": {
              "title": "Cover Command",
              "description": "Commands to open or close the cover.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPEN",
                  "CLOSE"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/cmd",
                  "contentType": null,
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartCover",
          "title": "Smart IoT Cover",
          "id": "urn:smart:cover",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for controlling and monitoring a cover.",
          "properties": {
            "position": {
              "title": "Position",
              "description": "The current position of the cover.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPEN",
                "CLOSED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/pos",
                  "contentType": null,
                  "mqv:topic": "home/cover/pos",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "light": {
              "title": "Light",
              "description": "The current light level of the cover.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/light",
                  "contentType": null,
                  "mqv:topic": "home/cover/light",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "change": {
              "title": "Change",
              "description": "The change event of the cover.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPENING",
                  "CLOSING"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/chg",
                  "contentType": null,
                  "mqv:topic": "home/cover/chg",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "command": {
              "title": "Command",
              "description": "Command to open or close the cover.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPEN",
                  "CLOSE"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/cmd",
                  "contentType": null,
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartCover",
          "title": "Smart IoT Cover Device",
          "id": "urn:smart:cover:device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for controlling and monitoring a cover.",
          "properties": {
            "position": {
              "title": "Cover Position",
              "description": "Indicates the position of the cover.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPEN",
                "CLOSED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/pos",
                  "contentType": null,
                  "mqv:topic": "home/cover/pos",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "light": {
              "title": "Cover Light Level",
              "description": "Indicates the light level of the cover.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/light",
                  "contentType": null,
                  "mqv:topic": "home/cover/light",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "positionChange": {
              "title": "Cover Position Change",
              "description": "Indicates a change in the cover's position.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPENING",
                  "CLOSING"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/chg",
                  "contentType": null,
                  "mqv:topic": "home/cover/chg",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "command": {
              "title": "Command Cover",
              "description": "Commands to open or close the cover.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPEN",
                  "CLOSE"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/cmd",
                  "contentType": null,
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartCover",
          "title": "Smart IoT Cover Device",
          "id": "urn:smart:cover:device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for controlling a cover with position and light level properties.",
          "properties": {
            "position": {
              "title": "Position",
              "description": "Indicates the current position of the cover.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPEN",
                "CLOSED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/pos",
                  "contentType": null,
                  "mqv:topic": "home/cover/pos",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            },
            "lightLevel": {
              "title": "Light Level",
              "description": "Indicates the current light level of the cover.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/light",
                  "contentType": null,
                  "mqv:topic": "home/cover/light",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty",
                    "readproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "positionChange": {
              "title": "Position Change",
              "description": "Event triggered when the cover is changing position.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPENING",
                  "CLOSING"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/chg",
                  "contentType": null,
                  "mqv:topic": "home/cover/chg",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "command": {
              "title": "Command",
              "description": "Action to command the cover to open or close.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPEN",
                  "CLOSE"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/cmd",
                  "contentType": null,
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        },
        {
          "@context": [
            "https://www.w3.org/2022/wot/td/v1.1"
          ],
          "@type": "SmartCover",
          "title": "Smart IoT Cover Device",
          "id": "urn:smart-iot:cover-device",
          "securityDefinitions": {
            "nosec_sc": {
              "scheme": "nosec"
            }
          },
          "security": [
            "nosec_sc"
          ],
          "description": "A smart IoT device for controlling and monitoring a cover.",
          "properties": {
            "position": {
              "title": "Cover Position",
              "description": "Indicates whether the cover is open or closed.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "OPEN",
                "CLOSED"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/pos",
                  "contentType": null,
                  "mqv:topic": "home/cover/pos",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            },
            "light": {
              "title": "Cover Light Level",
              "description": "Indicates the light level of the cover.",
              "observable": null,
              "type": "string",
              "minimum": null,
              "maximum": null,
              "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
              ],
              "properties": {},
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/light",
                  "contentType": null,
                  "mqv:topic": "home/cover/light",
                  "mqv:retain": true,
                  "op": [
                    "observeproperty"
                  ]
                }
              ]
            }
          },
          "events": {
            "change": {
              "title": "Cover State Change",
              "description": "Indicates if the cover is opening or closing.",
              "data": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPENING",
                  "CLOSING"
                ],
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/chg",
                  "contentType": null,
                  "mqv:topic": "home/cover/chg",
                  "mqv:retain": false,
                  "op": [
                    "subscribeevent"
                  ]
                }
              ]
            }
          },
          "actions": {
            "command": {
              "title": "Command Cover",
              "description": "Commands to open or close the cover.",
              "input": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "string",
                "minimum": null,
                "maximum": null,
                "enum": [
                  "OPEN",
                  "CLOSE"
                ],
                "properties": {}
              },
              "output": {
                "title": "",
                "description": "",
                "observable": null,
                "type": "null",
                "minimum": null,
                "maximum": null,
                "enum": null,
                "properties": {}
              },
              "forms": [
                {
                  "href": "mqtt://broker.com:1883/home/cover/cmd",
                  "contentType": null,
                  "mqv:topic": "home/cover/cmd",
                  "mqv:retain": false,
                  "op": [
                    "invokeaction"
                  ]
                }
              ]
            }
          }
        }
      ],
      "msg_log": "topic: 'home/cover/pos'; payload: 'OPEN'; retain: 'true'\ntopic: 'home/cover/pos'; payload: 'CLOSED'; retain: 'true'\ntopic: 'home/cover/chg'; payload: 'OPENING'; retain: 'false'\ntopic: 'home/cover/chg'; payload: 'CLOSING'; retain: 'false'\ntopic: 'home/cover/light'; payload: 'LOW'; retain: 'true'\ntopic: 'home/cover/light'; payload: 'MEDIUM'; retain: 'true'\ntopic: 'home/cover/light'; payload: 'HIGH'; retain: 'true'\ntopic: 'home/cover/cmd'; payload: 'OPEN'; retain: 'false'\ntopic: 'home/cover/cmd'; payload: 'CLOSE'; retain: 'false'\n",
      "successful": 10,
      "failed": 0
    }
  ]
}